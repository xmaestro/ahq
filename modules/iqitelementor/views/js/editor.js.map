{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "views/_dev/js/editor/behaviors/duplicate.js",
    "views/_dev/js/editor/behaviors/elements-relation.js",
    "views/_dev/js/editor/behaviors/handle-duplicate.js",
    "views/_dev/js/editor/behaviors/handle-edit-mode.js",
    "views/_dev/js/editor/behaviors/handle-editor.js",
    "views/_dev/js/editor/behaviors/resizable.js",
    "views/_dev/js/editor/behaviors/sortable.js",
    "views/_dev/js/editor/components/template-library/collections/templates.js",
    "views/_dev/js/editor/components/template-library/manager.js",
    "views/_dev/js/editor/components/template-library/models/template.js",
    "views/_dev/js/editor/components/template-library/views/layout.js",
    "views/_dev/js/editor/components/template-library/views/parts/header-parts/back.js",
    "views/_dev/js/editor/components/template-library/views/parts/header-parts/load.js",
    "views/_dev/js/editor/components/template-library/views/parts/header-parts/logo.js",
    "views/_dev/js/editor/components/template-library/views/parts/header-parts/menu.js",
    "views/_dev/js/editor/components/template-library/views/parts/header-parts/preview.js",
    "views/_dev/js/editor/components/template-library/views/parts/header-parts/save.js",
    "views/_dev/js/editor/components/template-library/views/parts/header.js",
    "views/_dev/js/editor/components/template-library/views/parts/load-template.js",
    "views/_dev/js/editor/components/template-library/views/parts/loading.js",
    "views/_dev/js/editor/components/template-library/views/parts/preview.js",
    "views/_dev/js/editor/components/template-library/views/parts/save-template.js",
    "views/_dev/js/editor/components/template-library/views/parts/templates-empty.js",
    "views/_dev/js/editor/components/template-library/views/parts/templates.js",
    "views/_dev/js/editor/components/template-library/views/template/base.js",
    "views/_dev/js/editor/components/template-library/views/template/local.js",
    "views/_dev/js/editor/editor.js",
    "views/_dev/js/editor/layouts/edit-mode.js",
    "views/_dev/js/editor/layouts/panel/footer.js",
    "views/_dev/js/editor/layouts/panel/header.js",
    "views/_dev/js/editor/layouts/panel/pages/editor.js",
    "views/_dev/js/editor/layouts/panel/pages/elements/collections/categories.js",
    "views/_dev/js/editor/layouts/panel/pages/elements/collections/elements.js",
    "views/_dev/js/editor/layouts/panel/pages/elements/elements.js",
    "views/_dev/js/editor/layouts/panel/pages/elements/models/element.js",
    "views/_dev/js/editor/layouts/panel/pages/elements/views/categories.js",
    "views/_dev/js/editor/layouts/panel/pages/elements/views/category.js",
    "views/_dev/js/editor/layouts/panel/pages/elements/views/element.js",
    "views/_dev/js/editor/layouts/panel/pages/elements/views/elements.js",
    "views/_dev/js/editor/layouts/panel/pages/elements/views/languageselector.js",
    "views/_dev/js/editor/layouts/panel/pages/elements/views/search.js",
    "views/_dev/js/editor/layouts/panel/pages/menu/menu.js",
    "views/_dev/js/editor/layouts/panel/pages/menu/views/item.js",
    "views/_dev/js/editor/layouts/panel/pages/schemes/base.js",
    "views/_dev/js/editor/layouts/panel/pages/schemes/colors.js",
    "views/_dev/js/editor/layouts/panel/pages/schemes/disabled.js",
    "views/_dev/js/editor/layouts/panel/pages/schemes/items/base.js",
    "views/_dev/js/editor/layouts/panel/pages/schemes/items/color.js",
    "views/_dev/js/editor/layouts/panel/pages/schemes/items/typography.js",
    "views/_dev/js/editor/layouts/panel/pages/schemes/typography.js",
    "views/_dev/js/editor/layouts/panel/panel.js",
    "views/_dev/js/editor/models/base-settings.js",
    "views/_dev/js/editor/models/column-settings.js",
    "views/_dev/js/editor/models/element.js",
    "views/_dev/js/editor/models/row-settings.js",
    "views/_dev/js/editor/models/section-settings.js",
    "views/_dev/js/editor/models/widget-settings.js",
    "views/_dev/js/editor/utils/ajax.js",
    "views/_dev/js/editor/utils/helpers.js",
    "views/_dev/js/editor/utils/introduction.js",
    "views/_dev/js/editor/utils/jquery-html5-dnd.js",
    "views/_dev/js/editor/utils/jquery-serialize-object.js",
    "views/_dev/js/editor/utils/modals.js",
    "views/_dev/js/editor/utils/presets-factory.js",
    "views/_dev/js/editor/utils/schemes.js",
    "views/_dev/js/editor/utils/stylesheet.js",
    "views/_dev/js/editor/views/base-element.js",
    "views/_dev/js/editor/views/column.js",
    "views/_dev/js/editor/views/controls/animation.js",
    "views/_dev/js/editor/views/controls/autocomplete-products.js",
    "views/_dev/js/editor/views/controls/base-multiple.js",
    "views/_dev/js/editor/views/controls/base-units.js",
    "views/_dev/js/editor/views/controls/base.js",
    "views/_dev/js/editor/views/controls/box-shadow.js",
    "views/_dev/js/editor/views/controls/choose.js",
    "views/_dev/js/editor/views/controls/color.js",
    "views/_dev/js/editor/views/controls/dimensions.js",
    "views/_dev/js/editor/views/controls/font.js",
    "views/_dev/js/editor/views/controls/gallery.js",
    "views/_dev/js/editor/views/controls/icon.js",
    "views/_dev/js/editor/views/controls/image-dimensions.js",
    "views/_dev/js/editor/views/controls/media.js",
    "views/_dev/js/editor/views/controls/repeater-row.js",
    "views/_dev/js/editor/views/controls/repeater.js",
    "views/_dev/js/editor/views/controls/section.js",
    "views/_dev/js/editor/views/controls/select2.js",
    "views/_dev/js/editor/views/controls/slider.js",
    "views/_dev/js/editor/views/controls/structure.js",
    "views/_dev/js/editor/views/controls/url.js",
    "views/_dev/js/editor/views/controls/wp_widget.js",
    "views/_dev/js/editor/views/controls/wysiwyg.js",
    "views/_dev/js/editor/views/element-empty.js",
    "views/_dev/js/editor/views/section.js",
    "views/_dev/js/editor/views/sections.js",
    "views/_dev/js/editor/views/widget.js"
  ],
  "names": [],
  "mappings": "AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpzjKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjhgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChpLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACprpJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnnbhHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfjhtvKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnlnttnezKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrjPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrlpjnJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClhDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACj
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "var HandleAddDuplicateBehavior;\n\nHandleAddDuplicateBehavior = Marionette.Behavior.extend( {\n\n\tonChildviewClickNew: function( childView ) {\n\t\tvar currentIndex = childView.$el.index() + 1;\n\n\t\tthis.addChild( { at: currentIndex } );\n\t},\n\n\tonRequestNew: function() {\n\t\tthis.addChild();\n\t},\n\n\taddChild: function( options ) {\n\t\tif ( this.view.isCollectionFilled() ) {\n\t\t\treturn;\n\t\t}\n\n\t\toptions = options || {};\n\n\t\tvar newItem = {\n\t\t\tid: elementor.helpers.getUniqueID(),\n\t\t\telType: this.view.getChildType()[0],\n\t\t\tsettings: {},\n\t\t\telements: []\n\t\t};\n\n\t\tthis.view.addChildModel( newItem, options );\n\t}\n} );\n\nmodule.exports = HandleAddDuplicateBehavior;\n",
    "var HandleElementsRelation;\n\nHandleElementsRelation = Marionette.Behavior.extend( {\n\n\tonRequestAdd: function( itemData, options ) {\n\t\tthis._addChildElement( itemData, options );\n\t},\n\n\t/**\n\t *\n\t * @param {Object} itemData\n\t * @param {Object} options\n\t * @private\n\t */\n\t_addChildElement: function( itemData, options ) {\n\t\toptions = options || {};\n\n\t\tvar myChildType = this.view.getChildType();\n\n\t\tif ( -1 === myChildType.indexOf( itemData.elType ) ) {\n\t\t\tdelete options.at;\n\n\t\t\tthis.view.children.last().triggerMethod( 'request:add', itemData, options );\n\n\t\t\treturn;\n\t\t}\n\n\t\tvar newModel = this.view.addChildModel( itemData, options ),\n\t\t\tnewView = this.view.children.findByModel( newModel );\n\n\t\tif ( 'section' === newView.getElementType() && newView.isInner() ) {\n\t\t\tnewView.addEmptyColumn();\n\t\t}\n\n\t\tnewView.triggerMethod( 'open:editor' );\n\t}\n} );\n\nmodule.exports = HandleElementsRelation;\n",
    "var HandleDuplicateBehavior;\n\nHandleDuplicateBehavior = Marionette.Behavior.extend( {\n\n\tonChildviewClickDuplicate: function( childView ) {\n\t\tif ( this.view.isCollectionFilled() ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar currentIndex = this.view.collection.indexOf( childView.model ),\n\t\t\tnewModel = childView.model.clone();\n\n\t\tthis.view.addChildModel( newModel, { at: currentIndex } );\n\t}\n} );\n\nmodule.exports = HandleDuplicateBehavior;",
    "var HandleEditModeBehavior;\n\nHandleEditModeBehavior = Marionette.Behavior.extend( {\n\tinitialize: function() {\n\t\tthis.listenTo( elementor.channels.dataEditMode, 'switch', this.onEditModeSwitched );\n\t},\n\n\tonEditModeSwitched: function() {\n\t\tvar activeMode = elementor.channels.dataEditMode.request( 'activeMode' );\n\n\t\tthis.view.$el.toggleClass( 'elementor-active-mode', 'preview' !== activeMode );\n\t},\n\n\tonRender: function() {\n\t\tthis.onEditModeSwitched();\n\t}\n} );\n\nmodule.exports = HandleEditModeBehavior;\n",
    "var HandleEditorBehavior;\n\nHandleEditorBehavior = Marionette.Behavior.extend( {\n\n\tonClickEdit: function() {\n\t\tvar activeMode = elementor.channels.dataEditMode.request( 'activeMode' );\n\n\t\tif ( 'preview' === activeMode ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.onOpenEditor();\n\t},\n\n\tonOpenEditor: function() {\n\t\tvar currentPanelPageName = elementor.getPanelView().getCurrentPageName();\n\n\t\tif ( 'editor' === currentPanelPageName ) {\n\t\t\tvar currentPanelPageView = elementor.getPanelView().getCurrentPageView(),\n\t\t\t\tcurrentEditableModel = currentPanelPageView.model;\n\n\t\t\tif ( currentEditableModel === this.view.model ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tvar elementData = elementor.getElementData( this.view.model );\n\n\t\telementor.getPanelView().setPage( 'editor', elementor.translate( 'edit_element', [ elementData.title ] ), {\n\t\t\tmodel: this.view.model,\n\t\t\teditedElementView: this.view\n\t\t} );\n\t}\n} );\n\nmodule.exports = HandleEditorBehavior;\n",
    "var ResizableBehavior;\n\nResizableBehavior = Marionette.Behavior.extend( {\n\tdefaults: {\n\t\thandles: elementor.config.is_rtl ? 'w' : 'e'\n\t},\n\n\tui: {\n\t\tcolumnTitle: '.column-title'\n\t},\n\n\tevents: {\n\t\tresizestart: 'onResizeStart',\n\t\tresizestop: 'onResizeStop',\n\t\tresize: 'onResize'\n\t},\n\n\tinitialize: function() {\n\t\tMarionette.Behavior.prototype.initialize.apply( this, arguments );\n\n\t\tthis.listenTo( elementor.channels.dataEditMode, 'switch', this.onEditModeSwitched );\n\t},\n\n\tactive: function() {\n\t\tvar options = _.clone( this.options );\n\n\t\tdelete options.behaviorClass;\n\n\t\tvar $childViewContainer = this.getChildViewContainer(),\n\t\t\tdefaultResizableOptions = {},\n\t\t\tresizableOptions = _.extend( defaultResizableOptions, options );\n\n\t\t$childViewContainer.resizable( resizableOptions );\n\t},\n\n\tdeactivate: function() {\n\t\tif ( this.getChildViewContainer().resizable( 'instance' ) ) {\n\t\t\tthis.getChildViewContainer().resizable( 'destroy' );\n\t\t}\n\t},\n\n\tonEditModeSwitched: function() {\n\t\tvar activeMode = elementor.channels.dataEditMode.request( 'activeMode' );\n\n\t\tif ( 'preview' !== activeMode ) {\n\t\t\tthis.active();\n\t\t} else {\n\t\t\tthis.deactivate();\n\t\t}\n\t},\n\n\tonRender: function() {\n\t\t// Call this method from other thread (non-block UI)\n\t\t_.defer( _.bind( this.onEditModeSwitched, this ) );\n\t},\n\n\tonDestroy: function() {\n\t\tthis.deactivate();\n\t},\n\n\tonResizeStart: function( event ) {\n\t\tevent.stopPropagation();\n\n\t\tthis.view.triggerMethod( 'request:resize:start' );\n\t},\n\n\tonResizeStop: function( event ) {\n\t\tevent.stopPropagation();\n\n\t\tthis.view.triggerMethod( 'request:resize:stop' );\n\t},\n\n\tonResize: function( event, ui ) {\n\t\tevent.stopPropagation();\n\n\t\tthis.view.triggerMethod( 'request:resize', ui );\n\t},\n\n\tgetChildViewContainer: function() {\n\t\treturn this.$el;\n\t}\n} );\n\nmodule.exports = ResizableBehavior;\n",
    "var SortableBehavior;\n\nSortableBehavior = Marionette.Behavior.extend( {\n\tdefaults: {\n\t\telChildType: 'widget'\n\t},\n\n\tevents: {\n\t\t'sortstart': 'onSortStart',\n\t\t'sortreceive': 'onSortReceive',\n\t\t'sortupdate': 'onSortUpdate',\n\t\t'sortstop': 'onSortStop',\n\t\t'sortover': 'onSortOver',\n\t\t'sortout': 'onSortOut'\n\t},\n\n\tinitialize: function() {\n\t\tthis.listenTo( elementor.channels.dataEditMode, 'switch', this.onEditModeSwitched );\n\t\tthis.listenTo( elementor.channels.deviceMode, 'change', this.onDeviceModeChange );\n\t},\n\n\tonEditModeSwitched: function() {\n\t\tvar activeMode = elementor.channels.dataEditMode.request( 'activeMode' );\n\n\t\tif ( 'preview' !== activeMode ) {\n\t\t\tthis.active();\n\t\t} else {\n\t\t\tthis.deactivate();\n\t\t}\n\t},\n\n\tonDeviceModeChange: function() {\n\t\tvar deviceMode = elementor.channels.deviceMode.request( 'currentMode' );\n\n\t\tif ( 'desktop' === deviceMode ) {\n\t\t\tthis.active();\n\t\t} else {\n\t\t\tthis.deactivate();\n\t\t}\n\t},\n\n\tonRender: function() {\n\t\t_.defer( _.bind( this.onEditModeSwitched, this ) );\n\t},\n\n\tonDestroy: function() {\n\t\tthis.deactivate();\n\t},\n\n\tactive: function() {\n\t\tif ( this.getChildViewContainer().sortable( 'instance' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar $childViewContainer = this.getChildViewContainer(),\n\t\t\tdefaultSortableOptions = {\n\t\t\t\tconnectWith: $childViewContainer.selector,\n\t\t\t\tcursor: 'move',\n\t\t\t\tplaceholder: 'elementor-sortable-placeholder',\n\t\t\t\tcursorAt: {\n\t\t\t\t\ttop: 20,\n\t\t\t\t\tleft: 25\n\t\t\t\t},\n\t\t\t\thelper: _.bind( this._getSortableHelper, this )\n\t\t\t},\n\t\t\tsortableOptions = _.extend( defaultSortableOptions, this.view.getSortableOptions() );\n\n\t\t$childViewContainer.sortable( sortableOptions );\n\t},\n\n\t_getSortableHelper: function( event, $item ) {\n\t\tvar model = this.view.collection.get( {\n\t\t\tcid: $item.data( 'model-cid' )\n\t\t} );\n\n\t\treturn '<div style=\"height: 84px; width: 125px;\" class=\"elementor-sortable-helper elementor-sortable-helper-' + model.get( 'elType' ) + '\"><div class=\"icon\"><i class=\"eicon-' + model.getIcon() + '\"></i></div><div class=\"elementor-element-title-wrapper\"><div class=\"title\">' + model.getTitle() + '</div></div></div>';\n\t},\n\n\tdeactivate: function() {\n\t\tif ( this.getChildViewContainer().sortable( 'instance' ) ) {\n\t\t\tthis.getChildViewContainer().sortable( 'destroy' );\n\t\t}\n\t},\n\n\tonSortStart: function( event, ui ) {\n\t\tevent.stopPropagation();\n\n\t\tvar model = this.view.collection.get( {\n\t\t\tcid: ui.item.data( 'model-cid' )\n\t\t} );\n\n\t\tif ( 'column' === this.options.elChildType ) {\n\t\t\t// the following code is just for touch\n\t\t\tui.placeholder.addClass( 'elementor-column' );\n\n\t\t\tvar uiData = ui.item.data( 'sortableItem' ),\n\t\t\t\tuiItems = uiData.items,\n\t\t\t\titemHeight = 0;\n\n\t\t\tuiItems.forEach( function( item ) {\n\t\t\t\tif ( item.item[0] === ui.item[0] ) {\n\t\t\t\t\titemHeight = item.height;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tui.placeholder.height( itemHeight );\n\n\t\t\t// ui.placeholder.addClass( 'elementor-column elementor-col-' + model.getSetting( 'size' ) );\n\t\t}\n\n\t\telementor.channels.data.trigger( model.get( 'elType' ) + ':drag:start' );\n\n\t\telementor.channels.data.reply( 'cache:' + model.cid, model );\n\t},\n\n\tonSortOver: function( event, ui ) {\n\t\tevent.stopPropagation();\n\n\t\tvar model = elementor.channels.data.request( 'cache:' + ui.item.data( 'model-cid' ) );\n\n\t\tBackbone.$( event.target )\n\t\t\t.addClass( 'elementor-draggable-over' )\n\t\t\t.attr( {\n\t\t\t\t'data-dragged-element': model.get( 'elType' ),\n\t\t\t\t'data-dragged-is-inner': model.get( 'isInner' )\n\t\t\t} );\n\n\t\tthis.$el.addClass( 'elementor-dragging-on-child' );\n\t},\n\n\tonSortOut: function( event ) {\n\t\tevent.stopPropagation();\n\n\t\tBackbone.$( event.target )\n\t\t\t.removeClass( 'elementor-draggable-over' )\n\t\t\t.removeAttr( 'data-dragged-element data-dragged-is-inner' );\n\n\t\tthis.$el.removeClass( 'elementor-dragging-on-child' );\n\t},\n\n\tonSortReceive: function( event, ui ) {\n\t\tevent.stopPropagation();\n\n\t\tif ( this.view.isCollectionFilled() ) {\n\t\t\tBackbone.$( ui.sender ).sortable( 'cancel' );\n\t\t\treturn;\n\t\t}\n\n\t\tvar model = elementor.channels.data.request( 'cache:' + ui.item.data( 'model-cid' ) ),\n\t\t\tdraggedElType = model.get( 'elType' ),\n\t\t\tdraggedIsInnerSection = 'section' === draggedElType && model.get( 'isInner' ),\n\t\t\ttargetIsInnerColumn = 'column' === this.view.getElementType() && this.view.isInner();\n\n\t\tif ( draggedIsInnerSection && targetIsInnerColumn ) {\n\t\t\tBackbone.$( ui.sender ).sortable( 'cancel' );\n\t\t\treturn;\n\t\t}\n\n\t\tvar newIndex = ui.item.parent().children().index( ui.item ),\n\t\t\tnewModel = new this.view.collection.model( model.toJSON( { copyHtmlCache: true } ) );\n\n\t\tthis.view.addChildModel( newModel, { at: newIndex } );\n\n\t\telementor.channels.data.trigger( draggedElType + ':drag:end' );\n\n\t\tmodel.destroy();\n\t},\n\n\tonSortUpdate: function( event, ui ) {\n\t\tevent.stopPropagation();\n\n\t\tvar model = this.view.collection.get( ui.item.attr( 'data-model-cid' ) );\n\t\tif ( model ) {\n\t\t\telementor.channels.data.trigger( model.get( 'elType' ) + ':drag:end' );\n\t\t}\n\t},\n\n\tonSortStop: function( event, ui ) {\n\t\tevent.stopPropagation();\n\n\t\tvar $childElement = ui.item,\n\t\t\tcollection = this.view.collection,\n\t\t\tmodel = collection.get( $childElement.attr( 'data-model-cid' ) ),\n\t\t\tnewIndex = $childElement.parent().children().index( $childElement );\n\n\t\tif ( this.getChildViewContainer()[0] === ui.item.parent()[0] ) {\n\t\t\tif ( null === ui.sender && model ) {\n\t\t\t\tvar oldIndex = collection.indexOf( model );\n\n\t\t\t\tif ( oldIndex !== newIndex ) {\n\t\t\t\t\tcollection.remove( model );\n\t\t\t\t\tthis.view.addChildModel( model, { at: newIndex } );\n\n\t\t\t\t\telementor.setFlagEditorChange( true );\n\t\t\t\t}\n\n\t\t\t\telementor.channels.data.trigger( model.get( 'elType' ) + ':drag:end' );\n\t\t\t}\n\t\t}\n\t},\n\n\tonAddChild: function( view ) {\n\t\tview.$el.attr( 'data-model-cid', view.model.cid );\n\t},\n\n\tgetChildViewContainer: function() {\n\t\tif ( 'function' === typeof this.view.getChildViewContainer ) {\n\t\t\t// CompositeView\n\t\t\treturn this.view.getChildViewContainer( this.view );\n\t\t} else {\n\t\t\t// CollectionView\n\t\t\treturn this.$el;\n\t\t}\n\t}\n} );\n\nmodule.exports = SortableBehavior;",
    "var TemplateLibraryTemplateModel = require( 'elementor-templates/models/template' ),\n\tTemplateLibraryCollection;\n\nTemplateLibraryCollection = Backbone.Collection.extend( {\n\tmodel: TemplateLibraryTemplateModel\n} );\n\nmodule.exports = TemplateLibraryCollection;\n",
    "var TemplateLibraryLayoutView = require( 'elementor-templates/views/layout' ),\n\tTemplateLibraryCollection = require( 'elementor-templates/collections/templates' ),\n\tTemplateLibraryManager;\n\nTemplateLibraryManager = function() {\n\tvar self = this,\n\t\tmodal,\n\t\tdeleteDialog,\n\t\terrorDialog,\n\t\tlayout,\n\t\ttemplatesCollection;\n\n\tvar initLayout = function() {\n\t\tlayout = new TemplateLibraryLayoutView();\n\t};\n\n\tthis.deleteTemplate = function( templateModel ) {\n\t\tvar dialog = self.getDeleteDialog();\n\n\t\tdialog.onConfirm = function() {\n\t\t\telementor.ajax.send( 'deleteTemplate', {\n\t\t\t\tdata: {\n\t\t\t\t\tsource: templateModel.get( 'source' ),\n\t\t\t\t\ttemplate_id: templateModel.get( 'template_id' )\n\t\t\t\t},\n\t\t\t\tsuccess: function() {\n\t\t\t\t\ttemplatesCollection.remove( templateModel, { silent: true } );\n\n\t\t\t\t\tself.showTemplates();\n\t\t\t\t}\n\t\t\t} );\n\t\t};\n\n\t\tdialog.show();\n\t};\n\n\tthis.importTemplate = function( templateModel ) {\n\t\tlayout.showLoadingView();\n\n\t\telementor.ajax.send( 'getTemplateContent', {\n\t\t\tdata: {\n\t\t\t\tsource: templateModel.get( 'source' ),\n\t\t\t\tpost_id: elementor.config.post_id,\n\t\t\t\ttemplate_id: templateModel.get( 'template_id' )\n\t\t\t},\n\t\t\tsuccess: function( data ) {\n\t\t\t\tself.getModal().hide();\n\n\t\t\t\telementor.getRegion( 'sections' ).currentView.addChildModel( data );\n\t\t\t},\n\t\t\terror: function( data ) {\n\t\t\t\tself.showErrorDialog( data.message );\n\t\t\t}\n\t\t} );\n\t};\n\n\tthis.getDeleteDialog = function() {\n\t\tif ( ! deleteDialog ) {\n\t\t\tdeleteDialog = elementor.dialogsManager.createWidget( 'confirm', {\n\t\t\t\tid: 'elementor-template-library-delete-dialog',\n\t\t\t\theaderMessage: elementor.translate( 'delete_template' ),\n\t\t\t\tmessage: elementor.translate( 'delete_template_confirm' ),\n\t\t\t\tstrings: {\n\t\t\t\t\tconfirm: elementor.translate( 'delete' )\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\treturn deleteDialog;\n\t};\n\n\tthis.getErrorDialog = function() {\n\t\tif ( ! errorDialog ) {\n\t\t\terrorDialog = elementor.dialogsManager.createWidget( 'alert', {\n\t\t\t\tid: 'elementor-template-library-error-dialog',\n\t\t\t\theaderMessage: elementor.translate( 'an_error_occurred' )\n\t\t\t} );\n\t\t}\n\n\t\treturn errorDialog;\n\t};\n\n\tthis.getModal = function() {\n\t\tif ( ! modal ) {\n\t\t\tmodal = elementor.dialogsManager.createWidget( 'elementor-modal', {\n\t\t\t\tid: 'elementor-template-library-modal',\n\t\t\t\tcloseButton: false\n\t\t\t} );\n\t\t}\n\n\t\treturn modal;\n\t};\n\n\tthis.getLayout = function() {\n\t\treturn layout;\n\t};\n\n\tthis.getTemplatesCollection = function() {\n\t\treturn templatesCollection;\n\t};\n\n\tthis.requestRemoteTemplates = function( callback, forceUpdate ) {\n\t\tif ( templatesCollection && ! forceUpdate ) {\n\t\t\tif ( callback ) {\n\t\t\t\tcallback();\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\telementor.ajax.send( 'GetTemplates', {\n\t\t\tsuccess: function( data ) {\n\t\t\t\ttemplatesCollection = new TemplateLibraryCollection( data );\n\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t};\n\n\tthis.startModal = function( onModalReady ) {\n\t\tself.getModal().show();\n\n\t\tself.setTemplatesSource( 'local' );\n\n\t\tif ( ! layout ) {\n\t\t\tinitLayout();\n\t\t}\n\n\t\tlayout.showLoadingView();\n\n\t\tself.requestRemoteTemplates( function() {\n\t\t\tif ( onModalReady ) {\n\t\t\t\tonModalReady();\n\t\t\t}\n\t\t} );\n\t};\n\n\tthis.setTemplatesSource = function( source, trigger ) {\n\t\tvar channel = elementor.channels.templates;\n\n\t\tchannel.reply( 'filter:source', source );\n\n\t\tif ( trigger ) {\n\t\t\tchannel.trigger( 'filter:change' );\n\t\t}\n\t};\n\n\tthis.showTemplates = function() {\n\t\tlayout.showTemplatesView( templatesCollection );\n\t};\n\n\tthis.showErrorDialog = function( errorMessage ) {\n\t\tself.getErrorDialog()\n\t\t    .setMessage( elementor.translate( 'templates_request_error' ) + '<div id=\"elementor-template-library-error-info\">' + errorMessage + '</div>' )\n\t\t    .show();\n\t};\n};\n\nmodule.exports = new TemplateLibraryManager();\n",
    "var TemplateLibraryTemplateModel;\n\nTemplateLibraryTemplateModel = Backbone.Model.extend( {\n\tdefaults: {\n\t\ttemplate_id: 0,\n\t\tname: '',\n\t\ttitle: '',\n\t\tsource: '',\n\t\ttype: '',\n\t\tauthor: '',\n\t\tthumbnail: '',\n\t\turl: '',\n\t\texport_link: '',\n\t\tcategories: [],\n\t\tkeywords: []\n\t}\n} );\n\nmodule.exports = TemplateLibraryTemplateModel;\n",
    "var TemplateLibraryHeaderView = require( 'elementor-templates/views/parts/header' ),\n\tTemplateLibraryHeaderLogoView = require( 'elementor-templates/views/parts/header-parts/logo' ),\n\tTemplateLibraryHeaderSaveView = require( 'elementor-templates/views/parts/header-parts/save' ),\n\tTemplateLibraryHeaderLoadView = require( 'elementor-templates/views/parts/header-parts/load' ),\n\tTemplateLibraryHeaderMenuView = require( 'elementor-templates/views/parts/header-parts/menu' ),\n\tTemplateLibraryHeaderPreviewView = require( 'elementor-templates/views/parts/header-parts/preview' ),\n\tTemplateLibraryHeaderBackView = require( 'elementor-templates/views/parts/header-parts/back' ),\n\tTemplateLibraryLoadingView = require( 'elementor-templates/views/parts/loading' ),\n\tTemplateLibraryCollectionView = require( 'elementor-templates/views/parts/templates' ),\n\tTemplateLibrarySaveTemplateView = require( 'elementor-templates/views/parts/save-template' ),\n\tTemplateLibraryLoadTemplateView = require( 'elementor-templates/views/parts/load-template' ),\n\tTemplateLibraryPreviewView = require( 'elementor-templates/views/parts/preview' ),\n\tTemplateLibraryLayoutView;\n\nTemplateLibraryLayoutView = Marionette.LayoutView.extend( {\n\tel: '#elementor-template-library-modal',\n\n\tregions: {\n\t\tmodalContent: '.dialog-message',\n\t\tmodalHeader: '.dialog-widget-header'\n\t},\n\n\tinitialize: function() {\n\t\tthis.getRegion( 'modalHeader' ).show( new TemplateLibraryHeaderView() );\n\t},\n\n\tgetHeaderView: function() {\n\t\treturn this.getRegion( 'modalHeader' ).currentView;\n\t},\n\n\tshowLoadingView: function() {\n\t\tthis.getRegion( 'modalContent' ).show( new TemplateLibraryLoadingView() );\n\t},\n\n\tshowTemplatesView: function( templatesCollection ) {\n\t\tthis.getRegion( 'modalContent' ).show( new TemplateLibraryCollectionView( {\n\t\t\tcollection: templatesCollection\n\t\t} ) );\n\n\t\tvar headerView = this.getHeaderView();\n\n\t\theaderView.tools.show( new TemplateLibraryHeaderSaveView() );\n\t\theaderView.tools2.show( new TemplateLibraryHeaderLoadView() );\n\t\theaderView.logoArea.show( new TemplateLibraryHeaderLogoView() );\n\t},\n\n\tshowSaveTemplateView: function( sectionID ) {\n\t\tthis.getRegion( 'modalContent' ).show( new TemplateLibrarySaveTemplateView( { sectionID: sectionID } ) );\n\n\t\tvar headerView = this.getHeaderView();\n\n\t\theaderView.tools.reset();\n\t\theaderView.tools2.show( new TemplateLibraryHeaderLoadView() );\n\t\theaderView.menuArea.show( new TemplateLibraryHeaderMenuView() );\n\t\theaderView.logoArea.show( new TemplateLibraryHeaderLogoView() );\n\t},\n\n\tshowLoadTemplateView: function( sectionID ) {\n\t\tthis.getRegion( 'modalContent' ).show( new TemplateLibraryLoadTemplateView( { sectionID: sectionID } ) );\n\n\t\tvar headerView = this.getHeaderView();\n\n\t\theaderView.tools2.reset();\n\t\theaderView.tools.show( new TemplateLibraryHeaderSaveView() );\n\t\theaderView.menuArea.show( new TemplateLibraryHeaderMenuView() );\n\t\theaderView.logoArea.show( new TemplateLibraryHeaderLogoView() );\n\t},\n\n\tshowPreviewView: function( templateModel ) {\n\t\tthis.getRegion( 'modalContent' ).show( new TemplateLibraryPreviewView( {\n\t\t\turl: templateModel.get( 'url' )\n\t\t} ) );\n\n\t\tvar headerView = this.getHeaderView();\n\n\t\theaderView.menuArea.reset();\n\n\t\theaderView.tools.show( new TemplateLibraryHeaderPreviewView( {\n\t\t\tmodel: templateModel\n\t\t} ) );\n\n\t\theaderView.logoArea.show( new TemplateLibraryHeaderBackView() );\n\t}\n} );\n\nmodule.exports = TemplateLibraryLayoutView;\n",
    "var TemplateLibraryHeaderBackView;\n\nTemplateLibraryHeaderBackView = Marionette.ItemView.extend( {\n\ttemplate: '#tmpl-elementor-template-library-header-back',\n\n\tid: 'elementor-template-library-header-preview-back',\n\n\tevents: {\n\t\t'click': 'onClick'\n\t},\n\n\tonClick: function() {\n\t\telementor.templates.showTemplates();\n\t}\n} );\n\nmodule.exports = TemplateLibraryHeaderBackView;\n",
    "var TemplateLibraryHeaderLoadView;\n\nTemplateLibraryHeaderLoadView = Marionette.ItemView.extend( {\n\ttemplate: '#tmpl-elementor-template-library-header-load',\n\n\tid: 'elementor-template-library-header-load',\n\n\tclassName: 'elementor-template-library-header-item',\n\n\tevents: {\n\t\t'click': 'onClick'\n\t},\n\n\tonClick: function() {\n\t\telementor.templates.getLayout().showLoadTemplateView();\n\t}\n} );\n\nmodule.exports = TemplateLibraryHeaderLoadView;\n",
    "var TemplateLibraryHeaderLogoView;\n\nTemplateLibraryHeaderLogoView = Marionette.ItemView.extend( {\n\ttemplate: '#tmpl-elementor-template-library-header-logo',\n\n\tid: 'elementor-template-library-header-logo',\n\n\tevents: {\n\t\t'click': 'onClick'\n\t},\n\n\tonClick: function() {\n\t\telementor.templates.setTemplatesSource( 'local' );\n\t\telementor.templates.showTemplates();\n\t}\n} );\n\nmodule.exports = TemplateLibraryHeaderLogoView;\n",
    "var TemplateLibraryHeaderMenuView;\n\nTemplateLibraryHeaderMenuView = Marionette.ItemView.extend( {\n\toptions: {\n\t\tactiveClass: 'elementor-active'\n\t},\n\n\ttemplate: '#tmpl-elementor-template-library-header-menu',\n\n\tid: 'elementor-template-library-header-menu',\n\n\tui: {\n\t\tmenuItems: '.elementor-template-library-menu-item'\n\t},\n\n\tevents: {\n\t\t'click @ui.menuItems': 'onMenuItemClick'\n\t},\n\n\t$activeItem: null,\n\n\tactivateMenuItem: function( $item ) {\n\t\tvar activeClass = this.getOption( 'activeClass' );\n\n\t\tif ( this.$activeItem === $item ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this.$activeItem ) {\n\t\t\tthis.$activeItem.removeClass( activeClass );\n\t\t}\n\n\t\t$item.addClass( activeClass );\n\n\t\tthis.$activeItem = $item;\n\t},\n\n\tonRender: function() {\n\t\tvar currentSource = elementor.channels.templates.request( 'filter:source' ),\n\t\t\t$sourceItem = this.ui.menuItems.filter( '[data-template-source=\"' + currentSource + '\"]' );\n\n\t\tthis.activateMenuItem( $sourceItem );\n\t},\n\n\tonMenuItemClick: function( event ) {\n\t\tvar item = event.currentTarget;\n\n\t\tthis.activateMenuItem( Backbone.$( item ) );\n\n\t\telementor.templates.setTemplatesSource( 'local');\n\t\telementor.templates.showTemplates();\n\t}\n} );\n\nmodule.exports = TemplateLibraryHeaderMenuView;\n",
    "var TemplateLibraryHeaderPreviewView;\n\nTemplateLibraryHeaderPreviewView = Marionette.ItemView.extend( {\n\ttemplate: '#tmpl-elementor-template-library-header-preview',\n\n\tid: 'elementor-template-library-header-preview',\n\n\tui: {\n\t\tinsertButton: '#elementor-template-library-header-preview-insert'\n\t},\n\n\tevents: {\n\t\t'click @ui.insertButton': 'onInsertButtonClick'\n\t},\n\n\tonInsertButtonClick: function() {\n\t\telementor.templates.importTemplate( this.model );\n\t}\n} );\n\nmodule.exports = TemplateLibraryHeaderPreviewView;\n",
    "var TemplateLibraryHeaderSaveView;\n\nTemplateLibraryHeaderSaveView = Marionette.ItemView.extend( {\n\ttemplate: '#tmpl-elementor-template-library-header-save',\n\n\tid: 'elementor-template-library-header-save',\n\n\tclassName: 'elementor-template-library-header-item',\n\n\tevents: {\n\t\t'click': 'onClick'\n\t},\n\n\tonClick: function() {\n\t\telementor.templates.getLayout().showSaveTemplateView();\n\t}\n} );\n\nmodule.exports = TemplateLibraryHeaderSaveView;\n",
    "var TemplateLibraryHeaderView;\n\nTemplateLibraryHeaderView = Marionette.LayoutView.extend( {\n\n\tid: 'elementor-template-library-header',\n\n\ttemplate: '#tmpl-elementor-template-library-header',\n\n\tregions: {\n\t\tlogoArea: '#elementor-template-library-header-logo-area',\n\t\ttools: '#elementor-template-library-header-tools',\n\t\ttools2: '#elementor-template-library-header-tools2',\n\t\tmenuArea: '#elementor-template-library-header-menu-area'\n\t},\n\n\tui: {\n\t\tcloseModal: '#elementor-template-library-header-close-modal'\n\t},\n\n\tevents: {\n\t\t'click @ui.closeModal': 'onCloseModalClick'\n\t},\n\n\tonCloseModalClick: function() {\n\t\telementor.templates.getModal().hide();\n\t}\n} );\n\nmodule.exports = TemplateLibraryHeaderView;\n",
    "var TemplateLibraryLoadTemplateView;\n\nTemplateLibraryLoadTemplateView = Marionette.ItemView.extend( {\n\tid: 'elementor-template-library-load-template',\n\n\ttemplate: '#tmpl-elementor-template-library-load-template',\n\n\tui: {\n\t\tform: '#elementor-template-library-load-template-form',\n\t\tsubmitButton: '#elementor-template-library-load-template-submit',\n\t\tfileInput: '#elementor-template-library-load-template-file',\n\t\tfileInputNice: '#elementor-template-library-load-btn-file'\n\t},\n\n\tevents: {\n\t\t'submit @ui.form': 'onFormSubmit',\n\t\t'change @ui.fileInput': 'onFileChange'\n\t},\n\n\n\ttemplateHelpers: function() {\n\t\treturn {\n\t\t\tsectionID: this.getOption( 'sectionID' )\n\t\t};\n\t},\n\n\tonFileChange: function() {\n\t\t$(this.ui.fileInputNice).text($(this.ui.fileInput)[0].files[0].name);\n\t},\n\n\tonFormSubmit: function( event ) {\n\t\tevent.preventDefault();\n\n\t\tthis.ui.submitButton.addClass( 'elementor-button-state' );\n\n\t\telementor.ajax.send( 'importTemplate', {\n\t\t\tdata: new FormData( this.ui.form[ 0 ] ),\n\t\t\tprocessData: false,\n\t\t\tcontentType: false,\n\t\t\tsuccess: function( data ) {\n\t\t\t\telementor.templates.getTemplatesCollection().add( data );\n\n\t\t\t\telementor.templates.setTemplatesSource( 'local' );\n\n\t\t\t\telementor.templates.showTemplates();\n\t\t\t},\n\t\t\terror: function( data ) {\n\t\t\t\telementor.templates.showErrorDialog( data.message );\n\t\t\t}\n\t\t} );\n\t}\n} );\n\nmodule.exports = TemplateLibraryLoadTemplateView;\n",
    "var TemplateLibraryLoadingView;\n\nTemplateLibraryLoadingView = Marionette.ItemView.extend( {\n\tid: 'elementor-template-library-loading',\n\n\ttemplate: '#tmpl-elementor-template-library-loading'\n} );\n\nmodule.exports = TemplateLibraryLoadingView;\n",
    "var TemplateLibraryPreviewView;\n\nTemplateLibraryPreviewView = Marionette.ItemView.extend( {\n\ttemplate: '#tmpl-elementor-template-library-preview',\n\n\tid: 'elementor-template-library-preview',\n\n\tui: {\n\t\tiframe: '> iframe'\n\t},\n\n\tonRender: function() {\n\t\tthis.ui.iframe.attr( 'src', this.getOption( 'url' ) );\n\t}\n} );\n\nmodule.exports = TemplateLibraryPreviewView;\n",
    "var TemplateLibrarySaveTemplateView;\n\nTemplateLibrarySaveTemplateView = Marionette.ItemView.extend( {\n\tid: 'elementor-template-library-save-template',\n\n\ttemplate: '#tmpl-elementor-template-library-save-template',\n\n\tui: {\n\t\tform: '#elementor-template-library-save-template-form',\n\t\tsubmitButton: '#elementor-template-library-save-template-submit'\n\t},\n\n\tevents: {\n\t\t'submit @ui.form': 'onFormSubmit'\n\t},\n\n\ttemplateHelpers: function() {\n\t\treturn {\n\t\t\tsectionID: this.getOption( 'sectionID' )\n\t\t};\n\t},\n\n\tonFormSubmit: function( event ) {\n\t\tevent.preventDefault();\n\n\t\tvar formData = this.ui.form.elementorSerializeObject(),\n\t\t\telementsData = elementor.helpers.cloneObject( elementor.elements.toJSON() ),\n\t\t\tsectionID = this.getOption( 'sectionID' ),\n\t\t\tsaveType = sectionID ? 'section' : 'page';\n\n\t\tif ( 'section' === saveType ) {\n\t\t\telementsData = [ _.findWhere( elementsData, { id: sectionID } ) ];\n\t\t}\n\n\t\t_.extend( formData, {\n\t\t\tdata: JSON.stringify( elementsData ),\n\t\t\tsource: 'local',\n\t\t\ttype: saveType\n\t\t} );\n\n\t\tthis.ui.submitButton.addClass( 'elementor-button-state' );\n\n\t\telementor.ajax.send( 'saveTemplate', {\n\t\t\tdata: formData,\n\t\t\tsuccess: function( data ) {\n\t\t\t\telementor.templates.getTemplatesCollection().add( data );\n\n\t\t\t\telementor.templates.setTemplatesSource( 'local' );\n\n\t\t\t\telementor.templates.showTemplates();\n\t\t\t},\n\t\t\terror: function( data ) {\n\t\t\t\telementor.templates.showErrorDialog( data.message );\n\t\t\t}\n\t\t} );\n\t}\n} );\n\nmodule.exports = TemplateLibrarySaveTemplateView;\n",
    "var TemplateLibraryTemplatesEmptyView;\n\nTemplateLibraryTemplatesEmptyView = Marionette.ItemView.extend( {\n\tid: 'elementor-template-library-templates-empty',\n\n\ttemplate: '#tmpl-elementor-template-library-templates-empty'\n} );\n\nmodule.exports = TemplateLibraryTemplatesEmptyView;\n",
    "var TemplateLibraryTemplateLocalView = require( 'elementor-templates/views/template/local' ),\n\tTemplateLibraryTemplatesEmptyView = require( 'elementor-templates/views/parts/templates-empty' ),\n\tTemplateLibraryCollectionView;\n\nTemplateLibraryCollectionView = Marionette.CompositeView.extend( {\n\ttemplate: '#tmpl-elementor-template-library-templates',\n\n\tid: 'elementor-template-library-templates',\n\n\tchildViewContainer: '#elementor-template-library-templates-container',\n\n\temptyView: TemplateLibraryTemplatesEmptyView,\n\n\tgetChildView: function( childModel ) {\n\t\treturn TemplateLibraryTemplateLocalView;\n\t},\n\n\tinitialize: function() {\n\t\tthis.listenTo( elementor.channels.templates, 'filter:change', this._renderChildren );\n\t},\n\n\tfilterByName: function( model ) {\n\t\tvar filterValue = elementor.channels.templates.request( 'filter:text' );\n\n\t\tif ( ! filterValue ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tfilterValue = filterValue.toLowerCase();\n\n\t\tif ( model.get( 'title' ).toLowerCase().indexOf( filterValue ) >= 0 ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn _.any( model.get( 'keywords' ), function( keyword ) {\n\t\t\treturn keyword.toLowerCase().indexOf( filterValue ) >= 0;\n\t\t} );\n\t},\n\n\tfilterBySource: function( model ) {\n\t\tvar filterValue = elementor.channels.templates.request( 'filter:source' );\n\n\t\tif ( ! filterValue ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn filterValue === model.get( 'source' );\n\t},\n\n\tfilter: function( childModel ) {\n\t\treturn this.filterByName( childModel ) && this.filterBySource( childModel );\n\t},\n\n\tonRenderCollection: function() {\n\t\tvar isEmpty = this.children.isEmpty();\n\n\t\tthis.$childViewContainer.attr( 'data-template-source', isEmpty ? 'empty' : elementor.channels.templates.request( 'filter:source' ) );\n\t}\n} );\n\nmodule.exports = TemplateLibraryCollectionView;\n",
    "var TemplateLibraryTemplateView;\n\nTemplateLibraryTemplateView = Marionette.ItemView.extend( {\n\tclassName: function() {\n\t\treturn 'elementor-template-library-template elementor-template-library-template-' + this.model.get( 'source' );\n\t},\n\n\tui: function() {\n\t\treturn {\n\t\t\tinsertButton: '.elementor-template-library-template-insert',\n\t\t\tpreviewButton: '.elementor-template-library-template-preview'\n\t\t};\n\t},\n\n\tevents: function() {\n\t\treturn {\n\t\t\t'click @ui.insertButton': 'onInsertButtonClick',\n\t\t\t'click @ui.previewButton': 'onPreviewButtonClick'\n\t\t};\n\t},\n\n\tonInsertButtonClick: function() {\n\t\telementor.templates.importTemplate( this.model );\n\t}\n} );\n\nmodule.exports = TemplateLibraryTemplateView;\n",
    "var TemplateLibraryTemplateView = require( 'elementor-templates/views/template/base' ),\n\tTemplateLibraryTemplateLocalView;\n\nTemplateLibraryTemplateLocalView = TemplateLibraryTemplateView.extend( {\n\ttemplate: '#tmpl-elementor-template-library-template-local',\n\n\tui: function() {\n\t\treturn _.extend( TemplateLibraryTemplateView.prototype.ui.apply( this, arguments ), {\n\t\t\tdeleteButton: '.elementor-template-library-template-delete'\n\t\t} );\n\t},\n\n\tevents: function() {\n\t\treturn _.extend( TemplateLibraryTemplateView.prototype.events.apply( this, arguments ), {\n\t\t\t'click @ui.deleteButton': 'onDeleteButtonClick'\n\t\t} );\n\t},\n\n\tonDeleteButtonClick: function() {\n\t\telementor.templates.deleteTemplate( this.model );\n\t},\n\n\tonPreviewButtonClick: function() {\n\t\topen( this.model.get( 'url' ), '_blank' );\n\t}\n} );\n\nmodule.exports = TemplateLibraryTemplateLocalView;\n",
    "/* global ElementorConfig */\nvar App;\n\nMarionette.TemplateCache.prototype.compileTemplate = function( rawTemplate, options ) {\n\toptions = {\n\t\tevaluate: /<#([\\s\\S]+?)#>/g,\n\t\tinterpolate: /\\{\\{\\{([\\s\\S]+?)\\}\\}\\}/g,\n\t\tescape: /\\{\\{([^\\}]+?)\\}\\}(?!\\})/g\n\t};\n\n\treturn _.template( rawTemplate, options );\n};\n\nApp = Marionette.Application.extend( {\n\thelpers: require( 'elementor-utils/helpers' ),\n\tschemes: require( 'elementor-utils/schemes' ),\n\tpresetsFactory: require( 'elementor-utils/presets-factory' ),\n\tmodals: require( 'elementor-utils/modals' ),\n\tintroduction: require( 'elementor-utils/introduction' ),\n\ttemplates: require( 'elementor-templates/manager' ),\n\tajax: require( 'elementor-utils/ajax' ),\n\n\tchannels: {\n\t\teditor: Backbone.Radio.channel( 'ELEMENTOR:editor' ),\n\t\tdata: Backbone.Radio.channel( 'ELEMENTOR:data' ),\n\t\tpanelElements: Backbone.Radio.channel( 'ELEMENTOR:panelElements' ),\n\t\tdataEditMode: Backbone.Radio.channel( 'ELEMENTOR:editmode' ),\n\t\tdeviceMode: Backbone.Radio.channel( 'ELEMENTOR:deviceMode' ),\n\t\ttemplates: Backbone.Radio.channel( 'ELEMENTOR:templates' )\n\t},\n\n\t// Private Members\n\t_controlsItemView: null,\n\n\t_defaultDeviceMode: 'desktop',\n\n\tgetElementData: function( modelElement ) {\n\t\tvar elType = modelElement.get( 'elType' );\n\n\t\tif ( 'widget' === elType ) {\n\t\t\tvar widgetType = modelElement.get( 'widgetType' );\n\n\t\t\tif ( ! this.config.widgets[ widgetType ] ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn this.config.widgets[ widgetType ];\n\t\t}\n\n\t\tif ( ! this.config.elements[ elType ] ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.config.elements[ elType ];\n\t},\n\n\tgetElementControls: function( modelElement ) {\n\t\tvar elementData = this.getElementData( modelElement );\n\n\t\tif ( ! elementData ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar elType = modelElement.get( 'elType' ),\n\t\t\tisInner = modelElement.get( 'isInner' );\n\n\t\tif ( 'widget' === elType ) {\n\t\t\treturn elementData.controls;\n\t\t}\n\n\t\treturn _.filter( elementData.controls, function( controlData ) {\n\t\t\treturn ! ( isInner && controlData.hide_in_inner || ! isInner && controlData.hide_in_top );\n\t\t} );\n\t},\n\n\tgetControlItemView: function( controlType ) {\n\t\tif ( null === this._controlsItemView ) {\n\t\t\tthis._controlsItemView = {\n\t\t\t\tcolor: require( 'elementor-views/controls/color' ),\n\t\t\t\tdimensions: require( 'elementor-views/controls/dimensions' ),\n\t\t\t\timage_dimensions: require( 'elementor-views/controls/image-dimensions' ),\n\t\t\t\tmedia: require( 'elementor-views/controls/media' ),\n\t\t\t\tslider: require( 'elementor-views/controls/slider' ),\n\t\t\t\twysiwyg: require( 'elementor-views/controls/wysiwyg' ),\n\t\t\t\tautocomplete_products: require( 'elementor-views/controls/autocomplete-products' ),\n\t\t\t\tchoose: require( 'elementor-views/controls/choose' ),\n\t\t\t\turl: require( 'elementor-views/controls/url' ),\n\t\t\t\tfont: require( 'elementor-views/controls/font' ),\n\t\t\t\tsection: require( 'elementor-views/controls/section' ),\n\t\t\t\trepeater: require( 'elementor-views/controls/repeater' ),\n\t\t\t\twp_widget: require( 'elementor-views/controls/wp_widget' ),\n\t\t\t\ticon: require( 'elementor-views/controls/icon' ),\n\t\t\t\tgallery: require( 'elementor-views/controls/gallery' ),\n\t\t\t\tselect2: require( 'elementor-views/controls/select2' ),\n\t\t\t\tbox_shadow: require( 'elementor-views/controls/box-shadow' ),\n\t\t\t\tstructure: require( 'elementor-views/controls/structure' ),\n\t\t\t\tanimation: require( 'elementor-views/controls/animation' ),\n\t\t\t\thover_animation: require( 'elementor-views/controls/animation' )\n\t\t\t};\n\n\t\t\tthis.channels.editor.trigger( 'editor:controls:initialize' );\n\t\t}\n\n\t\treturn this._controlsItemView[ controlType ] || require( 'elementor-views/controls/base' );\n\t},\n\n\tgetPanelView: function() {\n\t\treturn this.getRegion( 'panel' ).currentView;\n\t},\n\n\tinitComponents: function() {\n\t\tthis.initDialogsManager();\n\n\t\tthis.modals.init();\n\t\tthis.ajax.init();\n\t},\n\n\tinitDialogsManager: function() {\n\t\tthis.dialogsManager = new DialogsManager.Instance();\n\t},\n\n\tinitPreview: function() {\n\t\tthis.$previewWrapper = Backbone.$( '#elementor-preview' );\n\n\t\tthis.$previewResponsiveWrapper = Backbone.$( '#elementor-preview-responsive-wrapper' );\n\n\t\tvar previewIframeId = 'elementor-preview-iframe';\n\n\t\t// Make sure the iFrame does not exist.\n\t\tif ( ! Backbone.$( '#' + previewIframeId ).length ) {\n\t\t\tvar previewIFrame = document.createElement( 'iframe' );\n\n\t\t\tpreviewIFrame.id = previewIframeId;\n\t\t\tpreviewIFrame.src = this.config.preview_link + '&' + ( new Date().getTime() );\n\n\t\t\tthis.$previewResponsiveWrapper.append( previewIFrame );\n\t\t}\n\n\t\tthis.$preview = Backbone.$( '#' + previewIframeId );\n\n\t\tthis.$preview.on( 'load', _.bind( this.onPreviewLoaded, this ) );\n\t},\n\n\tinitFrontend: function() {\n\t\telementorFrontend.setScopeWindow( this.$preview[0].contentWindow );\n\n\t\telementorFrontend.init();\n\t},\n\n\tonStart: function() {\n\t\tNProgress.start();\n\t\tNProgress.inc( 0.2 );\n\n\t\tthis.config = ElementorConfig;\n\n\t\tBackbone.Radio.DEBUG = false;\n\t\tBackbone.Radio.tuneIn( 'ELEMENTOR' );\n\n\t\tthis.initComponents();\n\n\t\t// Init Base elements collection from the server\n\t\tvar ElementModel = require( 'elementor-models/element' );\n\n\t\tthis.elements = new ElementModel.Collection( this.config.data );\n\n\t\tthis.initPreview();\n\n\t\tthis.listenTo( this.channels.dataEditMode, 'switch', this.onEditModeSwitched );\n\n\t\tthis.setWorkSaver();\n\n\t\tthis.initClearPageDialog();\n\t\tthis.initLostPageDialog();\n\n\t},\n\n\tonPreviewLoaded: function() {\n\t\tNProgress.done();\n\n\t\tthis.initFrontend();\n\n\t\tthis.$previewContents = this.$preview.contents();\n\n\t\tvar SectionsCollectionView = require( 'elementor-views/sections' ),\n\t\t\tPanelLayoutView = require( 'elementor-layouts/panel/panel' );\n\n\t\tvar $previewElementorEl = this.$previewContents.find( '#elementor' );\n\n\t\tif ( ! $previewElementorEl.length ) {\n\t\t\tthis.onPreviewElNotFound();\n\t\t\treturn;\n\t\t}\n\n\t\tvar iframeRegion = new Marionette.Region( {\n\t\t\t// Make sure you get the DOM object out of the jQuery object\n\t\t\tel: $previewElementorEl[0]\n\t\t} );\n\n\t\tthis.schemes.init();\n\t\tthis.schemes.printSchemesStyle();\n\n\t\tthis.$previewContents.on( 'click', function( event ) {\n\t\t\tvar $target = Backbone.$( event.target ),\n\t\t\t\teditMode = elementor.channels.dataEditMode.request( 'activeMode' ),\n\t\t\t\tisClickInsideElementor = !! $target.closest( '#elementor' ).length,\n\t\t\t\tisTargetInsideDocument = this.contains( $target[0] );\n\n\t\t\tif ( isClickInsideElementor && 'preview' !== editMode || ! isTargetInsideDocument ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( $target.closest( 'a' ).length ) {\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\n\t\t\tif ( ! isClickInsideElementor ) {\n\t\t\t\telementor.getPanelView().setPage( 'elements' );\n\t\t\t}\n\t\t} );\n\n\t\tthis.addRegions( {\n\t\t\tsections: iframeRegion,\n\t\t\tpanel: '#elementor-panel'\n\t\t} );\n\n\t\tthis.getRegion( 'sections' ).show( new SectionsCollectionView( {\n\t\t\tcollection: this.elements\n\t\t} ) );\n\n\t\tthis.getRegion( 'panel' ).show( new PanelLayoutView() );\n\n\t\tthis.$previewContents\n\t\t    .children() // <html>\n\t\t    .addClass( 'elementor-html' )\n\t\t    .children( 'body' )\n\t\t    .addClass( 'elementor-editor-active' );\n\n\t\tthis.setResizablePanel();\n\n\t\tthis.changeDeviceMode( this._defaultDeviceMode );\n\n\t\tBackbone.$( '#elementor-loading' ).fadeOut( 600 );\n\n\t\t_.defer( function() {\n\t\t\telementorFrontend.getScopeWindow().jQuery.holdReady( false );\n\t\t} );\n\n\t\tthis.enqueueTypographyFonts();\n\n\t\t//this.introduction.startOnLoadIntroduction(); // TEMP Removed\n\n\t\tthis.trigger( 'preview:loaded' );\n\t},\n\n\tonEditModeSwitched: function() {\n\t\tvar activeMode = elementor.channels.dataEditMode.request( 'activeMode' );\n\n\t\tif ( 'preview' === activeMode ) {\n\t\t\tthis.enterPreviewMode();\n\t\t} else {\n\t\t\tthis.exitPreviewMode();\n\t\t}\n\t},\n\n\tonPreviewElNotFound: function() {\n\t\tvar dialog = this.dialogsManager.createWidget( 'confirm', {\n\t\t\tid: 'elementor-fatal-error-dialog',\n\t\t\theaderMessage: elementor.translate( 'preview_el_not_found_header' ),\n\t\t\tmessage: elementor.translate( 'preview_el_not_found_message' ),\n\t\t\tposition: {\n\t\t\t\tmy: 'center center',\n\t\t\t\tat: 'center center'\n\t\t\t},\n            strings: {\n\t\t\t\tconfirm: elementor.translate( 'learn_more' ),\n\t\t\t\tcancel: elementor.translate( 'go_back' )\n            },\n\t\t\tonConfirm: function() {\n\t\t\t\topen( elementor.config.help_the_content_url, '_blank' );\n\t\t\t},\n\t\t\tonCancel: function() {\n\t\t\t\tparent.history.go( -1 );\n\t\t\t},\n\t\t\thideOnButtonClick: false\n\t\t} );\n\n\t\tdialog.show();\n\t},\n\n\tsetFlagEditorChange: function( status ) {\n\t\telementor.channels.editor.reply( 'editor:changed', status );\n\t\telementor.channels.editor.trigger( 'editor:changed', status );\n\t},\n\n\tisEditorChanged: function() {\n\t\treturn ( true === elementor.channels.editor.request( 'editor:changed' ) );\n\t},\n\n\tsetWorkSaver: function() {\n\t\tBackbone.$( window ).on( 'beforeunload', function() {\n\t\t\tif ( elementor.isEditorChanged() ) {\n\t\t\t\treturn elementor.translate( 'before_unload_alert' );\n\t\t\t}\n\t\t} );\n\t},\n\n\tsetResizablePanel: function() {\n\t\tvar self = this,\n\t\t\tside = elementor.config.is_rtl ? 'right' : 'left';\n\n\t\tself.panel.$el.resizable( {\n\t\t\thandles: elementor.config.is_rtl ? 'w' : 'e',\n\t\t\tminWidth: 200,\n\t\t\tmaxWidth: 500,\n\t\t\tstart: function() {\n\t\t\t\tself.$previewWrapper\n\t\t\t\t\t.addClass( 'ui-resizable-resizing' )\n\t\t\t\t\t.css( 'pointer-events', 'none' );\n\t\t\t},\n\t\t\tstop: function() {\n\t\t\t\tself.$previewWrapper\n\t\t\t\t\t.removeClass( 'ui-resizable-resizing' )\n\t\t\t\t\t.css( 'pointer-events', '' );\n\n\t\t\t\telementor.channels.data.trigger( 'scrollbar:update' );\n\t\t\t},\n\t\t\tresize: function( event, ui ) {\n\t\t\t\tself.$previewWrapper\n\t\t\t\t\t.css( side, ui.size.width );\n\t\t\t}\n\t\t} );\n\t},\n\n\tenterPreviewMode: function() {\n\t\tthis.$previewContents\n\t\t    .find( 'body' )\n\t\t    .add( 'body' )\n\t\t    .removeClass( 'elementor-editor-active' )\n\t\t    .addClass( 'elementor-editor-preview' );\n\n\t\t// Handle panel resize\n\t\tthis.$previewWrapper.css( elementor.config.is_rtl ? 'right' : 'left', '' );\n\n\t\tthis.panel.$el.css( 'width', '' );\n\t},\n\n\texitPreviewMode: function() {\n\t\tthis.$previewContents\n\t\t    .find( 'body' )\n\t\t    .add( 'body' )\n\t\t    .removeClass( 'elementor-editor-preview' )\n\t\t    .addClass( 'elementor-editor-active' );\n\t},\n\n\tsaveBuilder: function( options ) {\n\t\toptions = _.extend( {\n\t\t\trevision: 'draft',\n\t\t\tonSuccess: null\n\t\t}, options );\n\n\t\tNProgress.start();\n\n\t\treturn this.ajax.send( 'SaveEditor', {\n\t        data: {\n\t\t        page_id: this.config.post_id,\n\t\t\t\tid_lang: this.config.id_lang,\n\t\t\t\tpage_type: this.config.page_type,\n\t\t        revision: options.revision,\n\t\t        data: JSON.stringify( elementor.elements.toJSON() )\n\t        },\n\t\t\tsuccess: function( data ) {\n\t\t\t\tNProgress.done();\n\n\t\t\t\telementor.setFlagEditorChange( false );\n\n\t\t\t\tif ( _.isFunction( options.onSuccess ) ) {\n\t\t\t\t\toptions.onSuccess.call( this, data );\n\t\t\t\t}\n\t\t\t}\n        } );\n\t},\n\n\tchangeDeviceMode: function( newDeviceMode ) {\n\t\tvar oldDeviceMode = this.channels.deviceMode.request( 'currentMode' );\n\n\t\tif ( oldDeviceMode === newDeviceMode ) {\n\t\t\treturn;\n\t\t}\n\n\t\tBackbone.$( 'body' )\n\t\t\t.removeClass( 'elementor-device-' + oldDeviceMode )\n\t\t\t.addClass( 'elementor-device-' + newDeviceMode );\n\n\t\tthis.channels.deviceMode\n\t\t\t.reply( 'previousMode', oldDeviceMode )\n\t\t\t.reply( 'currentMode', newDeviceMode )\n\t\t\t.trigger( 'change' );\n\n\t\tBackbone.$( window ).trigger('changedDeviceMode');\n\t},\n\n\tinitClearPageDialog: function() {\n\t\tvar self = this,\n\t\t\tdialog;\n\n\t\tself.getClearPageDialog = function() {\n\t\t\tif ( dialog ) {\n\t\t\t\treturn dialog;\n\t\t\t}\n\n\t\t\tdialog = this.dialogsManager.createWidget( 'confirm', {\n\t\t\t\tid: 'elementor-clear-page-dialog',\n\t\t\t\theaderMessage: elementor.translate( 'clear_page' ),\n\t\t\t\tmessage: elementor.translate( 'dialog_confirm_clear_page' ),\n\t\t\t\tposition: {\n\t\t\t\t\tmy: 'center center',\n\t\t\t\t\tat: 'center center'\n\t\t\t\t},\n\t\t\t\tonConfirm: function() {\n\t\t\t\t\tself.getRegion( 'sections' ).currentView.collection.reset();\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\treturn dialog;\n\t\t};\n\t},\n\n\tinitLostPageDialog: function() {\n\t\tvar self = this,\n\t\t\tdialog;\n\n\t\tself.getLostPageDialog = function() {\n\t\t\tif ( dialog ) {\n\t\t\t\treturn dialog;\n\t\t\t}\n\n\t\t\tdialog = this.dialogsManager.createWidget( 'confirm', {\n\t\t\t\tid: 'elementor-clear-page-dialog',\n\t\t\t\theaderMessage: elementor.translate( 'changes_lost' ),\n\t\t\t\tmessage: elementor.translate( 'dialog_confirm_changes_lost' ),\n\t\t\t\tposition: {\n\t\t\t\t\tmy: 'center center',\n\t\t\t\t\tat: 'center center'\n\t\t\t\t},\n\t\t\t\tonConfirm: function() {\n\t\t\t\t\tBackbone.$( '#elementor-loading, #elementor-preview-loading' ).fadeIn( 600 );\n\t\t\t\t\twindow.location.href =  self.addUrlParam(window.location.href, 'idLang', id_lang);\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\treturn dialog;\n\t\t};\n\t},\n\n\tclearPage: function() {\n\t\tthis.getClearPageDialog().show();\n\t},\n\n\tchangeLanguage: function(id_lang, ignore) {\n\n\t\tif ( elementor.isEditorChanged() ) {\n\t\t\tself.id_lang = id_lang;\n\t\t\tthis.getLostPageDialog().show();\n\t\t\treturn false;\n\t\t}\n\t\tBackbone.$( '#elementor-loading, #elementor-preview-loading' ).fadeIn( 600 );\n\t\twindow.location.href = this.addUrlParam(window.location.href, 'idLang', id_lang);\n\n\t},\n\n\taddUrlParam: function(url, param, value){\n\t\tvar a = document.createElement('a'), regex = /(?:\\?|&amp;|&)+([^=]+)(?:=([^&]*))*/g;\n\t\tvar match, str = []; a.href = url; param = encodeURIComponent(param);\n\n\t\twhile (match = regex.exec(a.search)){\n\t\t\tif (param != match[1]) str.push(match[1]+(match[2]?\"=\"+match[2]:\"\"));\n\t\t}\n\n\t\tstr.push(param+(value?\"=\"+ encodeURIComponent(value):\"\"));\n\t\ta.search = str.join(\"&\");\n\t\treturn a.href;\n\t},\n\n\n\n\tenqueueTypographyFonts: function() {\n\t\tvar self = this,\n\t\t\ttypographyScheme = this.schemes.getScheme( 'typography' );\n\n\t\t_.each( typographyScheme.items, function( item ) {\n\t\t\tself.helpers.enqueueFont( item.value.font_family );\n\t\t} );\n\t},\n\n\ttranslate: function( stringKey, templateArgs ) {\n\t\tvar string = this.config.i18n[ stringKey ];\n\n\t\tif ( undefined === string ) {\n\t\t\tstring = stringKey;\n\t\t}\n\n\t\tif ( templateArgs ) {\n\t\t\tstring = string.replace( /{(\\d+)}/g, function( match, number ) {\n\t\t\t\treturn undefined !== templateArgs[ number ] ? templateArgs[ number ] : match;\n\t\t\t} );\n\t\t}\n\n\t\treturn string;\n\t}\n} );\n\nmodule.exports = ( window.elementor = new App() ).start();\n",
    "var EditModeItemView;\n\nEditModeItemView = Marionette.ItemView.extend( {\n\ttemplate: '#tmpl-elementor-mode-switcher-content',\n\n\tid: 'elementor-mode-switcher-inner',\n\n\tui: {\n\t\tpreviewButton: '#elementor-mode-switcher-preview-input',\n\t\tpreviewLabel: '#elementor-mode-switcher-preview',\n\t\tpreviewLabelA11y: '#elementor-mode-switcher-preview .elementor-screen-only'\n\t},\n\n\tevents: {\n\t\t'change @ui.previewButton': 'onEditModeChange'\n\t},\n\n\tgetCurrentMode: function() {\n\t\treturn this.ui.previewButton.is( ':checked' ) ? 'preview' : 'edit';\n\t},\n\n\tsetMode: function( mode ) {\n\t\tthis.ui.previewButton.prop( 'checked', 'preview' === mode );\n\t},\n\n\tonRender: function() {\n\t\tthis.onEditModeChange();\n\t},\n\n\tonEditModeChange: function() {\n\t\tvar dataEditMode = elementor.channels.dataEditMode,\n\t\t\toldEditMode = dataEditMode.request( 'activeMode' ),\n\t\t\tcurrentMode = this.getCurrentMode();\n\n\t\tdataEditMode.reply( 'activeMode', currentMode );\n\n\t\tif ( currentMode !== oldEditMode ) {\n\t\t\tdataEditMode.trigger( 'switch' );\n\n\t\t\tvar title = 'preview' === currentMode ? 'Back to Editor' : 'Preview';\n\n\t\t\tthis.ui.previewLabel.attr( 'title', title );\n\t\t\tthis.ui.previewLabelA11y.text( title );\n\t\t}\n\t}\n} );\n\nmodule.exports = EditModeItemView;\n",
    "var PanelFooterItemView;\n\nPanelFooterItemView = Marionette.ItemView.extend( {\n\ttemplate: '#tmpl-elementor-panel-footer-content',\n\n\ttagName: 'nav',\n\n\tid: 'elementor-panel-footer-tools',\n\n\tpossibleRotateModes: [ 'portrait', 'landscape' ],\n\n\tui: {\n\t\tmenuButtons: '.elementor-panel-footer-tool',\n\t\tdeviceModeIcon: '#elementor-panel-footer-responsive > i',\n\t\tdeviceModeButtons: '#elementor-panel-footer-responsive .elementor-panel-footer-sub-menu-item',\n\t\tbuttonSave: '#elementor-panel-footer-save',\n\t\tbuttonSaveButton: '#elementor-panel-footer-save .elementor-button',\n\t\tbuttonPublish: '#elementor-panel-footer-publish',\n\t\twatchTutorial: '#elementor-panel-footer-watch-tutorial',\n\t\tshowTemplates: '#elementor-panel-footer-templates-modal',\n\t\tsaveTemplate: '#elementor-panel-footer-save-template',\n\t\tbuttonGoBackoffice: '#elementor-panel-footer-view-edit-page',\n\t},\n\n\tevents: {\n\t\t'click @ui.deviceModeButtons': 'onClickResponsiveButtons',\n\t\t'click @ui.buttonSave': 'onClickButtonSave',\n\t\t'click @ui.buttonPublish': 'onClickButtonPublish',\n\t\t'click @ui.watchTutorial': 'onClickWatchTutorial',\n\t\t'click @ui.showTemplates': 'onClickShowTemplates',\n\t\t'click @ui.buttonGoBackoffice': 'onClickButtonGoBackoffice',\n\t\t'click @ui.saveTemplate': 'onClickSaveTemplate'\n\t},\n\n\tinitialize: function() {\n\t\tthis._initDialog();\n\n\t\tthis.listenTo( elementor.channels.editor, 'editor:changed', this.onEditorChanged )\n\t\t\t.listenTo( elementor.channels.deviceMode, 'change', this.onDeviceModeChange );\n\t},\n\n\t_initDialog: function() {\n\t\tvar dialog;\n\n\t\tthis.getDialog = function() {\n\t\t\tif ( ! dialog ) {\n\t\t\t\tvar $ = Backbone.$,\n\t\t\t\t\t$dialogMessage = $( '<div>', {\n\t\t\t\t\t\t'class': 'elementor-dialog-message'\n\t\t\t\t\t} ),\n\t\t\t\t\t$messageIcon = $( '<i>', {\n\t\t\t\t\t\t'class': 'fa fa-check-circle'\n\t\t\t\t\t} ),\n\t\t\t\t\t$messageText = $( '<div>', {\n\t\t\t\t\t\t'class': 'elementor-dialog-message-text'\n\t\t\t\t\t} ).text( elementor.translate( 'saved' ) );\n\n\t\t\t\t$dialogMessage.append( $messageIcon, $messageText );\n\n\t\t\t\tdialog = elementor.dialogsManager.createWidget( 'popup', {\n\t\t\t\t\thide: {\n\t\t\t\t\t\tdelay: 1500\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\tdialog.setMessage( $dialogMessage );\n\t\t\t}\n\n\t\t\treturn dialog;\n\t\t};\n\t},\n\n\t_publishBuilder: function() {\n\t\tvar self = this;\n\n\t\tvar options = {\n\t\t\trevision: 'publish',\n\t\t\tonSuccess: function() {\n\t\t\t\tself.getDialog().show();\n\n\t\t\t\tself.ui.buttonSaveButton.removeClass( 'elementor-button-state' );\n\t\t\t}\n\t\t};\n\n\t\tself.ui.buttonSaveButton.addClass( 'elementor-button-state' );\n\n\t\telementor.saveBuilder( options );\n\t},\n\n\t_saveBuilderDraft: function() {\n\t\telementor.saveBuilder();\n\t},\n\n\tgetDeviceModeButton: function( deviceMode ) {\n\t\treturn this.ui.deviceModeButtons.filter( '[data-device-mode=\"' + deviceMode + '\"]' );\n\t},\n\n\tonPanelClick: function( event ) {\n\t\tvar $target = Backbone.$( event.target ),\n\t\t\tisClickInsideOfTool = $target.closest( '.elementor-panel-footer-sub-menu-wrapper' ).length;\n\n\t\tif ( isClickInsideOfTool ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar $tool = $target.closest( '.elementor-panel-footer-tool' ),\n\t\t\tisClosedTool = $tool.length && ! $tool.hasClass( 'elementor-open' );\n\n\t\tthis.ui.menuButtons.removeClass( 'elementor-open' );\n\n\t\tif ( isClosedTool ) {\n\t\t\t$tool.addClass( 'elementor-open' );\n\t\t}\n\t},\n\n\tonEditorChanged: function() {\n\t\tthis.ui.buttonSave.toggleClass( 'elementor-save-active', elementor.isEditorChanged() );\n\t},\n\n\tonDeviceModeChange: function() {\n\t\tvar previousDeviceMode = elementor.channels.deviceMode.request( 'previousMode' ),\n\t\t\tcurrentDeviceMode = elementor.channels.deviceMode.request( 'currentMode' );\n\n\t\tthis.getDeviceModeButton( previousDeviceMode ).removeClass( 'active' );\n\n\t\tthis.getDeviceModeButton( currentDeviceMode ).addClass( 'active' );\n\n\t\t// Change the footer icon\n\t\tthis.ui.deviceModeIcon.removeClass( 'eicon-device-' + previousDeviceMode ).addClass( 'eicon-device-' + currentDeviceMode );\n\t},\n\n\tonClickButtonSave: function() {\n\t\tthis._publishBuilder();\n\t},\n\n\tonClickButtonPublish: function( event ) {\n\t\t// Prevent click on save button\n\t\tevent.stopPropagation();\n\n\t\tthis._publishBuilder();\n\t},\n\n\tonClickResponsiveButtons: function( event ) {\n\t\tvar $clickedButton = this.$( event.currentTarget ),\n\t\t\tnewDeviceMode = $clickedButton.data( 'device-mode' );\n\n\t\telementor.changeDeviceMode( newDeviceMode );\n\t},\n\n\tonClickWatchTutorial: function() {\n\t\telementor.introduction.startIntroduction();\n\t},\n\n\tonClickShowTemplates: function() {\n\t\telementor.templates.startModal( function() {\n\t\t\telementor.templates.showTemplates();\n\t\t} );\n\t},\n\n\tonClickSaveTemplate: function() {\n\t\telementor.templates.startModal( function() {\n\t\t\telementor.templates.getLayout().showSaveTemplateView();\n\t\t} );\n\t},\n\n\tonClickButtonGoBackoffice: function(e) {\n\t\te.preventDefault();\n\t\twindow.location = elementor.config.edit_post_link;\n\t},\n\n\tonRender: function() {\n\t\tvar self = this;\n\n\t\t_.defer( function() {\n\t\t\telementor.getPanelView().$el.on( 'click', _.bind( self.onPanelClick, self ) );\n\t\t} );\n\t}\n} );\n\nmodule.exports = PanelFooterItemView;\n",
    "var PanelHeaderItemView;\n\nPanelHeaderItemView = Marionette.ItemView.extend( {\n\ttemplate: '#tmpl-elementor-panel-header',\n\n\tid: 'elementor-panel-header',\n\n\tui: {\n\t\tmenuButton: '#elementor-panel-header-menu-button',\n\t\ttitle: '#elementor-panel-header-title',\n\t\taddButton: '#elementor-panel-header-add-button'\n\t},\n\n\tevents: {\n\t\t'click @ui.addButton': 'onClickAdd',\n\t\t'click @ui.menuButton': 'onClickMenu'\n\t},\n\n\tsetTitle: function( title ) {\n\t\tthis.ui.title.html( title );\n\t},\n\n\tonClickAdd: function() {\n\t\telementor.getPanelView().setPage( 'elements' );\n\t},\n\n\tonClickMenu: function() {\n\t\tvar panel = elementor.getPanelView(),\n\t\t\tcurrentPanelPageName = panel.getCurrentPageName(),\n\t\t\tnextPage = 'menu' === currentPanelPageName ? 'elements' : 'menu';\n\n\t\tpanel.setPage( nextPage );\n\t}\n} );\n\nmodule.exports = PanelHeaderItemView;\n",
    "var EditorCompositeView;\n\nEditorCompositeView = Marionette.CompositeView.extend( {\n\ttemplate: Marionette.TemplateCache.get( '#tmpl-editor-content' ),\n\n\tid: 'elementor-panel-page-editor',\n\n\ttemplateHelpers: function() {\n\t\treturn {\n\t\t\telementData: elementor.getElementData( this.model )\n\t\t};\n\t},\n\n\tchildViewContainer: 'div.elementor-controls',\n\n\tmodelEvents: {\n\t\t'destroy': 'onModelDestroy'\n\t},\n\n\tui: {\n\t\t'tabs': '.elementor-tabs-controls li'\n\t},\n\n\tevents: {\n\t\t'click @ui.tabs a': 'onClickTabControl'\n\t},\n\n\tinitialize: function() {\n\t\tthis.listenTo( elementor.channels.deviceMode, 'change', this.onDeviceModeChange );\n\t},\n\n\tgetChildView: function( item ) {\n\t\tvar controlType = item.get( 'type' );\n\t\treturn elementor.getControlItemView( controlType );\n\t},\n\n\tchildViewOptions: function() {\n\t\treturn {\n\t\t\telementSettingsModel: this.model.get( 'settings' ),\n\t\t\telementEditSettings: this.model.get( 'editSettings' )\n\t\t};\n\t},\n\n\tonDestroy: function() {\n\t\tthis.getOption( 'editedElementView' ).$el.removeClass( 'elementor-element-editable' );\n\t\tthis.model.trigger( 'editor:close' );\n\n\t\tthis.triggerMethod( 'editor:destroy' );\n\t},\n\n\tonBeforeRender: function() {\n\t\tvar controls = elementor.getElementControls( this.model.get( 'settings' ) );\n\n\t\tif ( ! controls ) {\n\t\t\tthrow new Error( 'Editor controls not found' );\n\t\t}\n\n\t\t// Create new instance of that collection\n\t\tthis.collection = new Backbone.Collection( controls );\n\t},\n\n\tonRender: function() {\n\t\tthis.getOption( 'editedElementView' ).$el.addClass( 'elementor-element-editable' );\n\n\t\t// Set the first tab as active\n\t\tthis.ui.tabs.eq( 0 ).find( 'a' ).trigger( 'click' );\n\n\t\t// Create tooltip on controls\n\t\tthis.$( '.tooltip-target' ).tipsy( {\n\t\t\tgravity: function() {\n\t\t\t\t// `n` for down, `s` for up\n\t\t\t\tvar gravity = Backbone.$( this ).data( 'tooltip-pos' );\n\n\t\t\t\tif ( undefined !== gravity ) {\n\t\t\t\t\treturn gravity;\n\t\t\t\t} else {\n\t\t\t\t\treturn 'n';\n\t\t\t\t}\n\t\t\t},\n\t\t\ttitle: function() {\n\t\t\t\treturn this.getAttribute( 'data-tooltip' );\n\t\t\t}\n\t\t} );\n\t},\n\n\tonModelDestroy: function() {\n\t\tthis.destroy();\n\t},\n\n\tonClickTabControl: function( event ) {\n\t\tevent.preventDefault();\n\n\t\tvar $thisTab = this.$( event.target );\n\n\t\tthis.ui.tabs.removeClass( 'active' );\n\t\t$thisTab.closest( 'li' ).addClass( 'active' );\n\n\t\tthis.model.get( 'settings' ).trigger( 'control:switch:tab', $thisTab.data( 'tab' ) );\n\n\t\tthis.openFirstSectionInCurrentTab( $thisTab.data( 'tab' ) );\n\t},\n\n\tonDeviceModeChange: function() {\n\t\tvar self = this;\n\n\t\tself.$el.removeClass( 'elementor-responsive-switchers-open' );\n\n\t\t// Timeout according to preview resize css animation duration\n\t\tsetTimeout( function() {\n\t\t\telementor.$previewContents.find( 'html, body' ).animate( {\n\t\t\t\tscrollTop: self.getOption( 'editedElementView' ).$el.offset().top - elementor.$preview[0].contentWindow.innerHeight / 2\n\t\t\t} );\n\t\t}, 500 );\n\t},\n\n\t/**\n\t * It's a temp method.\n\t *\n\t * TODO: Rewrite this method later.\n\t */\n\topenFirstSectionInCurrentTab: function( currentTab ) {\n\t\tvar openedClass = 'elementor-open',\n\n\t\t\tchildrenUnderSection = this.children.filter( function( view ) {\n\t\t\t\treturn ( ! _.isEmpty( view.model.get( 'section' ) ) );\n\t\t\t} ),\n\n\t\t\tfirstSectionControlView = this.children.filter( function( view ) {\n\t\t\t\treturn ( 'section' === view.model.get( 'type' ) ) && ( currentTab === view.model.get( 'tab' ) );\n\t\t\t} );\n\n\t\t// Check if found any section controls\n\t\tif ( _.isEmpty( firstSectionControlView ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tfirstSectionControlView = firstSectionControlView[0];\n\t\tfirstSectionControlView.ui.heading.addClass( openedClass );\n\n\t\t_.each( childrenUnderSection, function( view ) {\n\t\t\tif ( view.model.get( 'section' ) !== firstSectionControlView.model.get( 'name' ) ) {\n\t\t\t\tview.$el.removeClass( openedClass );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tview.$el.addClass( openedClass );\n\t\t} );\n\t},\n\n\tonChildviewControlSectionClicked: function( childView ) {\n\t\tvar openedClass = 'elementor-open',\n\t\t\tsectionClicked = childView.model.get( 'name' ),\n\t\t\tisSectionOpen = childView.ui.heading.hasClass( openedClass ),\n\n\t\t\tchildrenUnderSection = this.children.filter( function( view ) {\n\t\t\t\treturn ( ! _.isEmpty( view.model.get( 'section' ) ) );\n\t\t\t} );\n\n\t\tthis.$( '.elementor-control.elementor-control-type-section .elementor-panel-heading' ).removeClass( openedClass );\n\n\t\tif ( isSectionOpen ) {\n\t\t\t// Close all open sections\n\t\t\tsectionClicked = '';\n\t\t} else {\n\t\t\tchildView.ui.heading.addClass( openedClass );\n\t\t}\n\n\t\t_.each( childrenUnderSection, function( view ) {\n\t\t\tif ( view.model.get( 'section' ) !== sectionClicked ) {\n\t\t\t\tview.$el.removeClass( openedClass );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tview.$el.addClass( openedClass );\n\t\t} );\n\n\t\telementor.channels.data.trigger( 'scrollbar:update' );\n\t}\n} );\n\nmodule.exports = EditorCompositeView;\n",
    "var PanelElementsCategory = require( '../models/element' ),\n\tPanelElementsCategoriesCollection;\n\nPanelElementsCategoriesCollection = Backbone.Collection.extend( {\n\tmodel: PanelElementsCategory\n} );\n\nmodule.exports = PanelElementsCategoriesCollection;\n",
    "var PanelElementsElementModel = require( '../models/element' ),\n\tPanelElementsElementsCollection;\n\nPanelElementsElementsCollection = Backbone.Collection.extend( {\n\tmodel: PanelElementsElementModel/*,\n\tcomparator: 'title'*/\n} );\n\nmodule.exports = PanelElementsElementsCollection;\n",
    "var PanelElementsCategoriesCollection = require( './collections/categories' ),\n\tPanelElementsElementsCollection = require( './collections/elements' ),\n\tPanelElementsCategoriesView = require( './views/categories' ),\n\tPanelElementsElementsView = require( './views/elements' ),\n\tPanelElementsSearchView = require( './views/search' ),\n\tPanelElementsLanguageselectorView = require( './views/languageselector' ),\n\tPanelElementsLayoutView;\n\nPanelElementsLayoutView = Marionette.LayoutView.extend( {\n\ttemplate: '#tmpl-elementor-panel-elements',\n\n\tregions: {\n\t\telements: '#elementor-panel-elements-wrapper',\n\t\tsearch: '#elementor-panel-elements-search-area',\n\t\tlanguageselector: '#elementor-panel-elements-languageselector-area'\n\t},\n\n\telementsCollection: null,\n\n\tcategoriesCollection: null,\n\n\tinitialize: function() {\n\t\tthis.listenTo( elementor.channels.panelElements, 'element:selected', this.destroy );\n\t},\n\n\tinitElementsCollection: function() {\n\t\tvar elementsCollection = new PanelElementsElementsCollection(),\n\t\t\tsectionConfig = elementor.config.elements.section;\n\n\t\telementsCollection.add( {\n\t\t\ttitle: elementor.translate( 'inner_section' ),\n\t\t\telType: 'section',\n\t\t\tcategories: sectionConfig.categories,\n\t\t\tkeywords: sectionConfig.keywords,\n\t\t\ticon: sectionConfig.icon\n\t\t} );\n\n\t\t// TODO: Change the array from server syntax, and no need each loop for initialize\n\t\t_.each( elementor.config.widgets, function( element, widgetType ) {\n\t\t\telementsCollection.add( {\n\t\t\t\ttitle: element.title,\n\t\t\t\telType: 'widget',\n\t\t\t\tcategories: element.categories,\n\t\t\t\tkeywords: element.keywords,\n\t\t\t\ticon: element.icon,\n\t\t\t\twidgetType: widgetType\n\t\t\t} );\n\t\t} );\n\n\t\tthis.elementsCollection = elementsCollection;\n\t},\n\n\tinitCategoriesCollection: function() {\n\t\tvar categories = {};\n\n\t\tthis.elementsCollection.each( function( element ) {\n\t\t\t_.each( element.get( 'categories' ), function( category ) {\n\t\t\t\tif ( ! categories[ category ] ) {\n\t\t\t\t\tcategories[ category ] = [];\n\t\t\t\t}\n\n\t\t\t\tcategories[ category ].push( element );\n\t\t\t} );\n\t\t} );\n\n\t\tvar categoriesCollection = new PanelElementsCategoriesCollection();\n\n\t\t_.each( elementor.config.elements_categories, function( categoryConfig, categoryName ) {\n\t\t\tif ( ! categories[ categoryName ] ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcategoriesCollection.add( {\n\t\t\t\tname: categoryName,\n\t\t\t\ttitle: categoryConfig.title,\n\t\t\t\ticon: categoryConfig.icon,\n\t\t\t\titems: categories[ categoryName ]\n\t\t\t} );\n\t\t} );\n\n\t\tthis.categoriesCollection = categoriesCollection;\n\t},\n\n\tshowCategoriesView: function() {\n\t\tthis.getRegion( 'elements' ).show( new PanelElementsCategoriesView( { collection: this.categoriesCollection } ) );\n\t},\n\n\tshowElementsView: function() {\n\t\tthis.getRegion( 'elements' ).show( new PanelElementsElementsView( { collection: this.elementsCollection } ) );\n\t},\n\n\tclearSearchInput: function() {\n\t\tthis.getChildView( 'search' ).clearInput();\n\t},\n\n\tchangeFilter: function( filterValue ) {\n\t\telementor.channels.panelElements\n\t\t\t.reply( 'filter:value', filterValue )\n\t\t\t.trigger( 'change' );\n\t},\n\n\tclearFilters: function() {\n\t\tthis.changeFilter( null );\n\t\tthis.clearSearchInput();\n\t},\n\n\tonChildviewChildrenRender: function() {\n\t\tthis.updateElementsScrollbar();\n\t},\n\n\tonChildviewSearchChangeInput: function( child ) {\n\t\tvar value = child.ui.input.val();\n\n\t\tif ( _.isEmpty( value ) ) {\n\t\t\tthis.showCategoriesView();\n\t\t} else {\n\t\t\tvar oldValue = elementor.channels.panelElements.request( 'filter:value' );\n\n\t\t\tif ( _.isEmpty( oldValue ) ) {\n\t\t\t\tthis.showElementsView();\n\t\t\t}\n\t\t}\n\n\t\tthis.changeFilter( value, 'search' );\n\t},\n\n\tonDestroy: function() {\n\t\telementor.channels.panelElements.reply( 'filter:value', null );\n\t},\n\n\tonShow: function() {\n\t\tvar searchRegion = this.getRegion( 'search' );\n\t\tvar languageselectorRegion = this.getRegion( 'languageselector' );\n\n\t\tthis.initElementsCollection();\n\t\tthis.initCategoriesCollection();\n\t\tthis.showCategoriesView();\n\n\t\tsearchRegion.show( new PanelElementsSearchView() );\n\t\tlanguageselectorRegion.show( new PanelElementsLanguageselectorView() );\n\t},\n\n\tupdateElementsScrollbar: function() {\n\t\telementor.channels.data.trigger( 'scrollbar:update' );\n\t}\n} );\n\nmodule.exports = PanelElementsLayoutView;\n",
    "var PanelElementsElementModel;\n\nPanelElementsElementModel = Backbone.Model.extend( {\n\tdefaults: {\n\t\ttitle: '',\n\t\tcategories: [],\n\t\tkeywords: [],\n\t\ticon: '',\n\t\telType: 'widget',\n\t\twidgetType: ''\n\t}\n} );\n\nmodule.exports = PanelElementsElementModel;\n",
    "var PanelElementsCategoryView = require( './category' ),\n\tPanelElementsCategoriesView;\n\nPanelElementsCategoriesView = Marionette.CollectionView.extend( {\n\tchildView: PanelElementsCategoryView,\n\n\tid: 'elementor-panel-elements-categories'\n} );\n\nmodule.exports = PanelElementsCategoriesView;\n",
    "var PanelElementsElementView = require( './element' ),\n\tPanelElementsElementsCollection = require( '../collections/elements' ),\n\tPanelElementsCategoryView;\n\nPanelElementsCategoryView = Marionette.CompositeView.extend( {\n\ttemplate: '#tmpl-elementor-panel-elements-category',\n\n\tclassName: 'elementor-panel-category',\n\n\tchildView: PanelElementsElementView,\n\n\tchildViewContainer: '.panel-elements-category-items',\n\n\tinitialize: function() {\n\t\tthis.collection = new PanelElementsElementsCollection( this.model.get( 'items' ) );\n\t}\n} );\n\nmodule.exports = PanelElementsCategoryView;\n",
    "var PanelElementsElementView;\n\nPanelElementsElementView = Marionette.ItemView.extend( {\n\ttemplate: '#tmpl-elementor-element-library-element',\n\n\tclassName: 'elementor-element-wrapper',\n\n\tonRender: function() {\n\t\tvar self = this;\n\n\t\tthis.$el.html5Draggable( {\n\n\t\t\tonDragStart: function() {\n\t\t\t\telementor.channels.panelElements\n\t\t\t\t\t.reply( 'element:selected', self )\n\t\t\t\t\t.trigger( 'element:drag:start' );\n\t\t\t},\n\n\t\t\tonDragEnd: function() {\n\t\t\t\telementor.channels.panelElements.trigger( 'element:drag:end' );\n\t\t\t},\n\n\t\t\tgroups: [ 'elementor-element' ]\n\t\t} );\n\t}\n} );\n\nmodule.exports = PanelElementsElementView;\n",
    "var PanelElementsElementView = require( './element' ),\n\tPanelElementsElementsView;\n\nPanelElementsElementsView = Marionette.CollectionView.extend( {\n\tchildView: PanelElementsElementView,\n\n\tid: 'elementor-panel-elements',\n\n\tinitialize: function() {\n\t\tthis.listenTo( elementor.channels.panelElements, 'change', this.onFilterChanged );\n\t},\n\n\tfilter: function( childModel ) {\n\t\tvar filterValue = elementor.channels.panelElements.request( 'filter:value' );\n\n\t\tif ( ! filterValue ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn _.any( [ 'title', 'keywords' ], function( type ) {\n\t\t\treturn ( -1 !== childModel.get( type ).toLowerCase().indexOf( filterValue.toLowerCase() ) );\n\t\t} );\n\t},\n\n\tonFilterChanged: function() {\n\t\tthis._renderChildren();\n\t\tthis.triggerMethod( 'children:render' );\n\t}\n} );\n\nmodule.exports = PanelElementsElementsView;\n",
    "var PanelElementsLanguageselectorView;\n\nPanelElementsLanguageselectorView = Marionette.ItemView.extend( {\n\ttemplate: '#tmpl-elementor-panel-element-languageselector',\n\n\tid: 'elementor-panel-elements-languageselector-wrapper',\n\n\tui: {\n\t\tselect: 'select',\n\t\tbtnShowLanguages: '#elementor-panel-elements-language-import-btn',\n\t\tbtnLanguageImport: '.elementor-panel-elements-language-import-lng'\n\t},\n\n\tevents: {\n\t\t'change @ui.select': 'onSelectChanged',\n\t\t'click @ui.btnShowLanguages': 'onShowLanguagesClick',\n\t\t'click @ui.btnLanguageImport': 'onLanguageImportClick',\n\t},\n\n\tonSelectChanged: function( ) {\n\t\tif (!elementor.changeLanguage($(this.ui.select).val())) {\n\t\t\t$(this.ui.select).val(elementor.config.id_lang);\n\t\t}\n\t},\n\n\tonShowLanguagesClick: function( ) {\n\t\t$(this.ui.btnShowLanguages).parent().toggleClass('elementor-open');\n\t},\n\n\tonLanguageImportClick: function( element ) {\n\t\telement.preventDefault();\n\t\tBackbone.$( '#elementor-loading, #elementor-preview-loading' ).fadeIn( 600 );\n\t\tvar id_lang = $(element.currentTarget).data('language');\n\n\t\telementor.ajax.send( 'getLanguageContent', {\n\t\t\tdata: {\n\t\t\t\tid_lang: id_lang,\n\t\t\t\tpage_type: elementor.config.page_type,\n\t\t\t\tpage_id: elementor.config.post_id,\n\t\t\t},\n\t\t\tsuccess: function( data ) {\n\t\t\t\telementor.getRegion( 'sections' ).currentView.addChildModel( data );\n\t\t\t\tBackbone.$( '#elementor-loading, #elementor-preview-loading' ).fadeOut( 600 );\n\t\t\t},\n\t\t} );\n\t},\n\n\n} );\n\nmodule.exports = PanelElementsLanguageselectorView;\n",
    "var PanelElementsSearchView;\n\nPanelElementsSearchView = Marionette.ItemView.extend( {\n\ttemplate: '#tmpl-elementor-panel-element-search',\n\n\tid: 'elementor-panel-elements-search-wrapper',\n\n\tui: {\n\t\tinput: 'input'\n\t},\n\n\tevents: {\n\t\t'keyup @ui.input': 'onInputChanged'\n\t},\n\n\tonInputChanged: function( event ) {\n\t\tvar ESC_KEY = 27;\n\n\t\tif ( ESC_KEY === event.keyCode ) {\n\t\t\tthis.clearInput();\n\t\t}\n\n\t\tthis.triggerMethod( 'search:change:input' );\n\t},\n\n\tclearInput: function() {\n\t\tthis.ui.input.val( '' );\n\t}\n} );\n\nmodule.exports = PanelElementsSearchView;\n",
    "var PanelMenuItemView = require( 'elementor-panel/pages/menu/views/item' ),\n\tPanelMenuPageView;\n\nPanelMenuPageView = Marionette.CollectionView.extend( {\n\tid: 'elementor-panel-page-menu',\n\n\tchildView: PanelMenuItemView,\n\n\tinitialize: function() {\n\t\tthis.collection = new Backbone.Collection( [\n\t\t\t{\n\t\t\t\ticon: 'eraser',\n\t\t\t\ttitle: elementor.translate( 'clear_page' ),\n\t\t\t\tcallback: function() {\n\t\t\t\t\telementor.clearPage();\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\ticon: 'info-circle',\n\t\t\t\ttitle: elementor.translate( 'about_elementor' ),\n\t\t\t\ttype: 'link',\n\t\t\t\tlink: elementor.config.elementor_site,\n\t\t\t\tnewTab: true\n\t\t\t}\n\t\t] );\n\t},\n\n\tonChildviewClick: function( childView ) {\n\t\tvar menuItemType = childView.model.get( 'type' );\n\n\t\tswitch ( menuItemType ) {\n\t\t\tcase 'page' :\n\t\t\t\tvar pageName = childView.model.get( 'pageName' ),\n\t\t\t\t\tpageTitle = childView.model.get( 'title' );\n\n\t\t\t\telementor.getPanelView().setPage( pageName, pageTitle );\n\t\t\t\tbreak;\n\n\t\t\tcase 'link' :\n\t\t\t\tvar link = childView.model.get( 'link' ),\n\t\t\t\t\tisNewTab = childView.model.get( 'newTab' );\n\n\t\t\t\tif ( isNewTab ) {\n\t\t\t\t\topen( link, '_blank' );\n\t\t\t\t} else {\n\t\t\t\t\tlocation.href = childView.model.get( 'link' );\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tvar callback = childView.model.get( 'callback' );\n\n\t\t\t\tif ( _.isFunction( callback ) ) {\n\t\t\t\t\tcallback.call( childView );\n\t\t\t\t}\n\t\t}\n\t}\n} );\n\nmodule.exports = PanelMenuPageView;\n",
    "var PanelMenuItemView;\n\nPanelMenuItemView = Marionette.ItemView.extend( {\n\ttemplate: '#tmpl-elementor-panel-menu-item',\n\n\tclassName: 'elementor-panel-menu-item',\n\n\ttriggers: {\n\t\tclick: 'click'\n\t}\n} );\n\nmodule.exports = PanelMenuItemView;\n",
    "var PanelSchemeBaseView;\n\nPanelSchemeBaseView = Marionette.CompositeView.extend( {\n\tid: function() {\n\t\treturn 'elementor-panel-scheme-' + this.getType();\n\t},\n\n\tclassName: 'elementor-panel-scheme',\n\n\tchildViewContainer: '.elementor-panel-scheme-items',\n\n\tgetTemplate: function() {\n\t\treturn Marionette.TemplateCache.get( '#tmpl-elementor-panel-schemes-' + this.getType() );\n\t},\n\n\tui: function() {\n\t\treturn {\n\t\t\tsaveButton: '.elementor-panel-scheme-save .elementor-button',\n\t\t\tdiscardButton: '.elementor-panel-scheme-discard .elementor-button',\n\t\t\tresetButton: '.elementor-panel-scheme-reset .elementor-button'\n\t\t};\n\t},\n\n\tevents: function() {\n\t\treturn {\n\t\t\t'click @ui.saveButton': 'saveScheme',\n\t\t\t'click @ui.discardButton': 'discardScheme',\n\t\t\t'click @ui.resetButton': 'setDefaultScheme'\n\t\t};\n\t},\n\n\tinitialize: function() {\n\t\tthis.model = new Backbone.Model();\n\n\t\tthis.resetScheme();\n\t},\n\n\tgetType: function() {},\n\n\tgetScheme: function() {\n\t\treturn elementor.schemes.getScheme( this.getType() );\n\t},\n\n\tchangeChildrenUIValues: function( schemeItems ) {\n\t\tvar self = this;\n\n\t\t_.each( schemeItems, function( value, key ) {\n\t\t\tvar model = self.collection.findWhere( { key: key } ),\n\t\t\t\tchildView = self.children.findByModelCid( model.cid );\n\n\t\t\tchildView.changeUIValue( value );\n\t\t} );\n\t},\n\n\tdiscardScheme: function() {\n\t\telementor.schemes.resetSchemes( this.getType() );\n\n\t\tthis.ui.saveButton.prop( 'disabled', true );\n\n\t\tthis._renderChildren();\n\t},\n\n\tsetSchemeValue: function( key, value ) {\n\t\telementor.schemes.setSchemeValue( this.getType(), key, value );\n\t},\n\n\tsaveScheme: function() {\n\t\telementor.schemes.saveScheme( this.getType() );\n\n\t\tthis.ui.saveButton.prop( 'disabled', true );\n\n\t\tthis.resetScheme();\n\n\t\tthis._renderChildren();\n\t},\n\n\tsetDefaultScheme: function() {\n\t\tvar defaultScheme = elementor.config.default_schemes[ this.getType() ].items;\n\n\t\tthis.changeChildrenUIValues( defaultScheme );\n\t},\n\n\tresetItems: function() {\n\t\tthis.model.set( 'items', this.getScheme().items );\n\t},\n\n\tresetCollection: function() {\n\t\tvar items = this.model.get( 'items' );\n\n\t\tthis.collection = new Backbone.Collection();\n\n\t\t_.each( items, _.bind( function( item, key ) {\n\t\t\titem.type = this.getType();\n\t\t\titem.key = key;\n\n\t\t\tthis.collection.add( item );\n\t\t}, this ) );\n\t},\n\n\tresetScheme: function() {\n\t\tthis.resetItems();\n\t\tthis.resetCollection();\n\t},\n\n\tonChildviewValueChange: function( childView, newValue ) {\n\t\tthis.ui.saveButton.removeProp( 'disabled' );\n\n\t\tthis.setSchemeValue( childView.model.get( 'key' ), newValue );\n\t}\n} );\n\nmodule.exports = PanelSchemeBaseView;\n",
    "var PanelSchemeBaseView = require( 'elementor-panel/pages/schemes/base' ),\n\tPanelSchemeColorsView;\n\nPanelSchemeColorsView = PanelSchemeBaseView.extend( {\n\n\tui: function() {\n\t\tvar ui = PanelSchemeBaseView.prototype.ui.apply( this, arguments );\n\n\t\tui.systemSchemes = '.elementor-panel-scheme-color-system-scheme';\n\n\t\treturn ui;\n\t},\n\n\tevents: function() {\n\t\tvar events = PanelSchemeBaseView.prototype.events.apply( this, arguments );\n\n\t\tevents[ 'click @ui.systemSchemes' ] = 'onSystemSchemeClick';\n\n\t\treturn events;\n\t},\n\n\tgetChildView: function() {\n\t\treturn require( 'elementor-panel/pages/schemes/items/color' );\n\t},\n\n\tgetType: function() {\n\t\treturn 'color';\n\t},\n\n\tonSystemSchemeClick: function( event ) {\n\t\tvar $schemeClicked = Backbone.$( event.currentTarget ),\n\t\t\tschemeName = $schemeClicked.data( 'schemeName' ),\n\t\t\tscheme = elementor.config.system_schemes.color[ schemeName ].items;\n\n\t\tthis.changeChildrenUIValues( scheme );\n\t}\n} );\n\nmodule.exports = PanelSchemeColorsView;\n",
    "var PanelSchemeDisabledView;\n\nPanelSchemeDisabledView = Marionette.ItemView.extend( {\n\ttemplate: '#tmpl-elementor-panel-schemes-disabled',\n\n\tdisabledTitle: '',\n\n\ttemplateHelpers: function() {\n\t\treturn {\n\t\t\tdisabledTitle: this.disabledTitle\n\t\t};\n\t},\n\n\tid: 'elementor-panel-schemes-disabled'\n} );\n\nmodule.exports = PanelSchemeDisabledView;\n",
    "var PanelSchemeItemView;\n\nPanelSchemeItemView = Marionette.ItemView.extend( {\n\tgetTemplate: function() {\n\t\treturn Marionette.TemplateCache.get( '#tmpl-elementor-panel-scheme-' + this.model.get( 'type' ) + '-item' );\n\t},\n\n\tclassName: function() {\n\t\treturn 'elementor-panel-scheme-item';\n\t}\n} );\n\nmodule.exports = PanelSchemeItemView;\n",
    "var PanelSchemeItemView = require( 'elementor-panel/pages/schemes/items/base' ),\n\tPanelSchemeColorView;\n\nPanelSchemeColorView = PanelSchemeItemView.extend( {\n\tui: {\n\t\tinput: '.elementor-panel-scheme-color-value'\n\t},\n\n\tchangeUIValue: function( newValue ) {\n\t\tthis.ui.input.wpColorPicker( 'color', newValue );\n\t},\n\n\tonBeforeDestroy: function() {\n\t\tif ( this.ui.input.wpColorPicker( 'instance' ) ) {\n\t\t\tthis.ui.input.wpColorPicker( 'close' );\n\t\t}\n\t},\n\n\tonRender: function() {\n\t\tthis.ui.input.wpColorPicker( {\n\t\t\tchange: _.bind( function( event, ui ) {\n\t\t\t\tthis.triggerMethod( 'value:change', ui.color.toString() );\n\t\t\t}, this )\n\t\t} );\n\t}\n} );\n\nmodule.exports = PanelSchemeColorView;\n",
    "var PanelSchemeItemView = require( 'elementor-panel/pages/schemes/items/base' ),\n\tPanelSchemeTypographyView;\n\nPanelSchemeTypographyView = PanelSchemeItemView.extend( {\n\tclassName: function() {\n\t\tvar classes = PanelSchemeItemView.prototype.className.apply( this, arguments );\n\n\t\treturn classes + ' elementor-panel-box';\n\t},\n\n\tui: {\n\t\theading: '.elementor-panel-heading',\n\t\tallFields: '.elementor-panel-scheme-typography-item-field',\n\t\tinputFields: 'input.elementor-panel-scheme-typography-item-field',\n\t\tselectFields: 'select.elementor-panel-scheme-typography-item-field',\n\t\tselectFamilyFields: 'select.elementor-panel-scheme-typography-item-field[name=\"font_family\"]'\n\t},\n\n\tevents: {\n\t\t'input @ui.inputFields': 'onFieldChange',\n\t\t'change @ui.selectFields': 'onFieldChange',\n\t\t'click @ui.heading': 'toggleVisibility'\n\t},\n\n\tonRender: function() {\n\t\tvar self = this;\n\n\t\tthis.ui.inputFields.add( this.ui.selectFields ).each( function() {\n\t\t\tvar $this = Backbone.$( this ),\n\t\t\t\tname = $this.attr( 'name' ),\n\t\t\t\tvalue = self.model.get( 'value' )[ name ];\n\n\t\t\t$this.val( value );\n\t\t} );\n\n\t\tthis.ui.selectFamilyFields.select2( {\n\t\t\tdir: elementor.config.is_rtl ? 'rtl' : 'ltr'\n\t\t} );\n\t},\n\n\ttoggleVisibility: function() {\n\t\tthis.ui.heading.toggleClass( 'elementor-open' );\n\t},\n\n\tchangeUIValue: function( newValue ) {\n\t\tthis.ui.allFields.each( function() {\n\t\t\tvar $this = Backbone.$( this ),\n\t\t\t\tthisName = $this.attr( 'name' ),\n\t\t\t\tnewFieldValue = newValue[ thisName ];\n\n\t\t\t$this.val( newFieldValue ).trigger( 'change' );\n\t\t} );\n\t},\n\n\tonFieldChange: function( event ) {\n\t\tvar $select = this.$( event.currentTarget ),\n\t\t\tcurrentValue = elementor.helpers.cloneObject( this.model.get( 'value' ) ),\n\t\t\tfieldKey = $select.attr( 'name' );\n\n\t\tcurrentValue[ fieldKey ] = $select.val();\n\n\t\tif ( 'font_family' === fieldKey && ! _.isEmpty( currentValue[ fieldKey ] ) ) {\n\t\t\telementor.helpers.enqueueFont( currentValue[ fieldKey ] );\n\t\t}\n\n\t\tthis.triggerMethod( 'value:change', currentValue );\n\t}\n} );\n\nmodule.exports = PanelSchemeTypographyView;\n",
    "var PanelSchemeBaseView = require( 'elementor-panel/pages/schemes/base' ),\n\tPanelSchemeTypographyView;\n\nPanelSchemeTypographyView = PanelSchemeBaseView.extend( {\n\n\tgetChildView: function() {\n\t\treturn require( 'elementor-panel/pages/schemes/items/typography' );\n\t},\n\n\tgetType: function() {\n\t\treturn 'typography';\n\t}\n} );\n\nmodule.exports = PanelSchemeTypographyView;\n",
    "var EditModeItemView = require( 'elementor-layouts/edit-mode' ),\n\tPanelLayoutView;\n\nPanelLayoutView = Marionette.LayoutView.extend( {\n\ttemplate: '#tmpl-elementor-panel',\n\n\tid: 'elementor-panel-inner',\n\n\tregions: {\n\t\tcontent: '#elementor-panel-content-wrapper',\n\t\theader: '#elementor-panel-header-wrapper',\n\t\tfooter: '#elementor-panel-footer',\n\t\tmodeSwitcher: '#elementor-mode-switcher'\n\t},\n\n\tpages: {},\n\n\tchildEvents: {\n\t\t'click:add': function() {\n\t\t\tthis.setPage( 'elements' );\n\t\t},\n\t\t'editor:destroy': function() {\n\t\t\tthis.setPage( 'elements' );\n\t\t}\n\t},\n\n\tcurrentPageName: null,\n\n\t_isScrollbarInitialized: false,\n\n\tinitialize: function() {\n\t\tthis.initPages();\n\t},\n\n\tinitPages: function() {\n\t\tvar pages = {\n\t\t\telements: {\n\t\t\t\tview: require( 'elementor-panel/pages/elements/elements' ),\n\t\t\t\ttitle: '<img src=\"' + elementor.config.assets_url + 'images/logo-panel.svg\">'\n\t\t\t},\n\t\t\teditor: {\n\t\t\t\tview: require( 'elementor-panel/pages/editor' )\n\t\t\t},\n\t\t\tmenu: {\n\t\t\t\tview: require( 'elementor-panel/pages/menu/menu' ),\n\t\t\t\ttitle: '<img src=\"' + elementor.config.assets_url + 'images/logo-panel.svg\">'\n\t\t\t},\n\t\t\tcolorScheme: {\n\t\t\t\tview: require( 'elementor-panel/pages/schemes/colors' )\n\t\t\t},\n\t\t\ttypographyScheme: {\n\t\t\t\tview: require( 'elementor-panel/pages/schemes/typography' )\n\t\t\t}\n\t\t};\n\n\t\tvar schemesTypes = Object.keys( elementor.schemes.getSchemes() ),\n\t\t\tdisabledSchemes = _.difference( schemesTypes, elementor.schemes.getEnabledSchemesTypes() );\n\n\t\t_.each( disabledSchemes, function( schemeType ) {\n\t\t\tvar scheme  = elementor.schemes.getScheme( schemeType );\n\n\t\t\tpages[ schemeType + 'Scheme' ].view = require( 'elementor-panel/pages/schemes/disabled' ).extend( {\n\t\t\t\tdisabledTitle: scheme.disabled_title\n\t\t\t} );\n\t\t} );\n\n\t\tthis.pages = pages;\n\t},\n\n\tgetHeaderView: function() {\n\t\treturn this.getChildView( 'header' );\n\t},\n\n\tgetCurrentPageName: function() {\n\t\treturn this.currentPageName;\n\t},\n\n\tgetCurrentPageView: function() {\n\t\treturn this.getChildView( 'content' );\n\t},\n\n\tsetPage: function( page, title, viewOptions ) {\n\t\tvar pageData = this.pages[ page ];\n\n\t\tif ( ! pageData ) {\n\t\t\tthrow new ReferenceError( 'Elementor panel doesn\\'t have page named \\'' + page + '\\'' );\n\t\t}\n\n\t\tthis.showChildView( 'content', new pageData.view( viewOptions ) );\n\n\t\tthis.getHeaderView().setTitle( title || pageData.title );\n\n\t\tthis.currentPageName = page;\n\t},\n\n\tonBeforeShow: function() {\n\t\tvar PanelFooterItemView = require( 'elementor-layouts/panel/footer' ),\n\t\t\tPanelHeaderItemView = require( 'elementor-layouts/panel/header' );\n\n\t\t// Edit Mode\n\t\tthis.showChildView( 'modeSwitcher', new EditModeItemView() );\n\n\t\t// Header\n\t\tthis.showChildView( 'header', new PanelHeaderItemView() );\n\n\t\t// Footer\n\t\tthis.showChildView( 'footer', new PanelFooterItemView() );\n\n\t\t// Added Editor events\n\t\tthis.updateScrollbar = _.throttle( this.updateScrollbar, 100 );\n\n\t\tthis.getRegion( 'content' )\n\t\t\t.on( 'before:show', _.bind( this.onEditorBeforeShow, this ) )\n\t\t\t.on( 'empty', _.bind( this.onEditorEmpty, this ) )\n\t\t\t.on( 'show', _.bind( this.updateScrollbar, this ) );\n\n\t\t// Set default page to elements\n\t\tthis.setPage( 'elements' );\n\n\t\tthis.listenTo( elementor.channels.data, 'scrollbar:update', this.updateScrollbar );\n\t},\n\n\tonEditorBeforeShow: function() {\n\t\t_.defer( _.bind( this.updateScrollbar, this ) );\n\t},\n\n\tonEditorEmpty: function() {\n\t\tthis.updateScrollbar();\n\t},\n\n\tupdateScrollbar: function() {\n\t\tvar $panel = this.content.$el;\n\n\t\tif ( ! this._isScrollbarInitialized ) {\n\t\t\t$panel.perfectScrollbar();\n\t\t\tthis._isScrollbarInitialized = true;\n\n\t\t\treturn;\n\t\t}\n\n\t\t$panel.perfectScrollbar( 'update' );\n\t}\n} );\n\nmodule.exports = PanelLayoutView;\n",
    "var BaseSettingsModel;\n\nBaseSettingsModel = Backbone.Model.extend( {\n\n\tinitialize: function( data ) {\n\t\tthis.controls = elementor.getElementControls( this );\n\t\tif ( ! this.controls ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar attrs = data || {},\n\t\t\tdefaults = {};\n\n\t\t_.each( this.controls, function( field ) {\n\t\t\tvar control = elementor.config.controls[ field.type ];\n\n\t\t\tif ( _.isObject( control.default_value )  ) {\n\t\t\t\tdefaults[ field.name ] = _.extend( {}, control.default_value, field['default'] || {} );\n\t\t\t} else {\n\t\t\t\tdefaults[ field.name ] = field['default'] || control.default_value;\n\t\t\t}\n\t\t} );\n\n\t\tthis.defaults = defaults;\n\n\t\t// TODO: Change method to recursive\n\t\tattrs = _.defaults( {}, attrs, defaults );\n\n\t\t_.each( this.controls, function( field ) {\n\t\t\tif ( 'repeater' === field.type ) {\n\t\t\t\tattrs[ field.name ] = new Backbone.Collection( attrs[ field.name ], {\n\t\t\t\t\tmodel: BaseSettingsModel\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\n\t\tthis.set( attrs );\n\t},\n\n\tgetFontControls: function() {\n\t\treturn _.filter( this.controls, _.bind( function( control ) {\n\t\t\treturn 'font' === control.type;\n\t\t}, this ) );\n\t},\n\n\tgetStyleControls: function( controls ) {\n\t\tvar self = this;\n\n\t\tcontrols = controls || self.controls;\n\n\t\treturn _.filter( controls, function( control ) {\n\t\t\tif ( control.fields ) {\n\t\t\t\tcontrol.styleFields = self.getStyleControls( control.fields );\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn self.isStyleControl( control.name, controls );\n\t\t} );\n\t},\n\n\tisStyleControl: function( attribute, controls ) {\n\t\tcontrols = controls || this.controls;\n\n\t\tvar currentControl = _.find( controls, function( control ) {\n\t\t\treturn attribute === control.name;\n\t\t} );\n\n\t\treturn currentControl && ! _.isEmpty( currentControl.selectors );\n\t},\n\n\tgetClassControls: function() {\n\t\treturn _.filter( this.controls, _.bind( function( control ) {\n\t\t\treturn this.isClassControl( control.name );\n\t\t}, this ) );\n\t},\n\n\tisClassControl: function( attribute ) {\n\t\tvar currentControl = _.find( this.controls, function( control ) {\n\t\t\treturn attribute === control.name;\n\t\t} );\n\n\t\treturn currentControl && ! _.isUndefined( currentControl.prefix_class );\n\t},\n\n\tgetControl: function( id ) {\n\t\treturn _.find( this.controls, function( control ) {\n\t\t\treturn id === control.name;\n\t\t} );\n\t},\n\n\tclone: function() {\n\t\treturn new BaseSettingsModel( elementor.helpers.cloneObject( this.attributes ) );\n\t},\n\n\ttoJSON: function() {\n\t\tvar data = Backbone.Model.prototype.toJSON.call( this );\n\n\t\tdelete data.widgetType;\n\t\tdelete data.elType;\n\t\tdelete data.isInner;\n\n\t\t_.each( data, function( attribute, key ) {\n\t\t\tif ( attribute && attribute.toJSON ) {\n\t\t\t\tdata[ key ] = attribute.toJSON();\n\t\t\t}\n\t\t} );\n\n\t\treturn data;\n\t}\n} );\n\nmodule.exports = BaseSettingsModel;",
    "var BaseSettingsModel = require( 'elementor-models/base-settings' ),\n\tColumnSettingsModel;\n\nColumnSettingsModel = BaseSettingsModel.extend( {\n\tdefaults: {\n\t\t_inline_size: '',\n\t\t_column_size: 100\n\t}\n} );\n\nmodule.exports = ColumnSettingsModel;\n",
    "var BaseSettingsModel = require( 'elementor-models/base-settings' ),\n\tWidgetSettingsModel = require( 'elementor-models/widget-settings' ),\n\tColumnSettingsModel = require( 'elementor-models/column-settings' ),\n\tRowSettingsModel = require( 'elementor-models/row-settings' ),\n\tSectionSettingsModel = require( 'elementor-models/section-settings' ),\n\n\tElementModel,\n\tElementCollection;\n\nElementModel = Backbone.Model.extend( {\n\tdefaults: {\n\t\tid: '',\n\t\telType: '',\n\t\tisInner: false,\n\t\tsettings: {},\n\t\tdefaultEditSettings: {}\n\t},\n\n\tremoteRender: false,\n\t_htmlCache: null,\n\t_jqueryXhr: null,\n\trenderOnLeave: false,\n\n\tinitialize: function( options ) {\n\t\tvar elements = this.get( 'elements' ),\n\t\t\telType = this.get( 'elType' ),\n\t\t\tsettings;\n\n\t\tvar settingModels = {\n\t\t\twidget: WidgetSettingsModel,\n\t\t\tcolumn: ColumnSettingsModel,\n\t\t\trow: RowSettingsModel,\n\t\t\tsection: SectionSettingsModel\n\t\t};\n\n\t\tvar SettingsModel = settingModels[ elType ] || BaseSettingsModel;\n\n\t\tsettings = this.get( 'settings' ) || {};\n\t\tif ( 'widget' === elType ) {\n\t\t\tsettings.widgetType = this.get( 'widgetType' );\n\t\t}\n\n\t\tsettings.elType = elType;\n\t\tsettings.isInner = this.get( 'isInner' );\n\n\t\tsettings = new SettingsModel( settings );\n\t\tthis.set( 'settings', settings );\n\n\t\tthis.initEditSettings();\n\n\t\tif ( undefined !== elements ) {\n\t\t\tthis.set( 'elements', new ElementCollection( elements ) );\n\t\t}\n\n\t\tif ( 'widget' === this.get( 'elType' ) ) {\n\t\t\tthis.remoteRender = true;\n\t\t\tthis.setHtmlCache( options.htmlCache || '' );\n\t\t}\n\n\t\t// No need this variable anymore\n\t\tdelete options.htmlCache;\n\n\t\t// Make call to remote server as throttle function\n\t\tthis.renderRemoteServer = _.throttle( this.renderRemoteServer, 1000 );\n\n\t\tthis.on( 'destroy', this.onDestroy );\n\t\tthis.on( 'editor:close', this.onCloseEditor );\n\t},\n\n\tinitEditSettings: function() {\n\t\tthis.set( 'editSettings', new Backbone.Model( this.get( 'defaultEditSettings' ) ) );\n\t},\n\n\tonDestroy: function() {\n\t\t// Clean the memory for all use instances\n\t\tvar settings = this.get( 'settings' ),\n\t\t\telements = this.get( 'elements' );\n\n\t\tif ( undefined !== elements ) {\n\t\t\t_.each( _.clone( elements.models ), function( model ) {\n\t\t\t\tmodel.destroy();\n\t\t\t} );\n\t\t}\n\t\tsettings.destroy();\n\t},\n\n\tonCloseEditor: function() {\n\t\tthis.initEditSettings();\n\n\t\tif ( this.renderOnLeave ) {\n\t\t\tthis.renderRemoteServer();\n\t\t}\n\t},\n\n\tsetSetting: function( key, value, triggerChange ) {\n\t\ttriggerChange = triggerChange || false;\n\n\t\tvar settings = this.get( 'settings' );\n\n\t\tsettings.set( key, value );\n\n\t\tthis.set( 'settings', settings );\n\n\t\tif ( triggerChange ) {\n\t\t\tthis.trigger( 'change', this );\n\t\t\tthis.trigger( 'change:settings', this );\n\t\t\tthis.trigger( 'change:settings:' + key, this );\n\t\t}\n\t},\n\n\tgetSetting: function( key ) {\n\t\tvar settings = this.get( 'settings' );\n\n\t\tif ( undefined === settings.get( key ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn settings.get( key );\n\t},\n\n\tsetHtmlCache: function( htmlCache ) {\n\t\tthis._htmlCache = htmlCache;\n\t},\n\n\tgetHtmlCache: function() {\n\t\treturn this._htmlCache;\n\t},\n\n\tgetTitle: function() {\n\t\tvar elementData = elementor.getElementData( this );\n\n\t\treturn ( elementData ) ? elementData.title : 'Unknown';\n\t},\n\n\tgetIcon: function() {\n\t\tvar elementData = elementor.getElementData( this );\n\n\t\treturn ( elementData ) ? elementData.icon : 'unknown';\n\t},\n\n\trenderRemoteServer: function() {\n\t\tif ( ! this.remoteRender ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.renderOnLeave = false;\n\n\t\tthis.trigger( 'before:remote:render' );\n\n\t\tif ( this._jqueryXhr && 4 !== this._jqueryXhr ) {\n\t\t\tthis._jqueryXhr.abort();\n\t\t}\n\n\t\tvar data = this.toJSON();\n\n\t\tthis._jqueryXhr = elementor.ajax.send( 'renderWidget', {\n\t\t\tdata: {\n\t\t\t\tpost_id: elementor.config.post_id,\n\t\t\t\tdata: JSON.stringify( data ),\n\t\t\t},\n\t\t\tsuccess: _.bind( this.onRemoteGetHtml, this )\n\t\t} );\n\t},\n\n\tonRemoteGetHtml: function( data ) {\n\t\tthis.setHtmlCache( data.render );\n\t\tthis.trigger( 'remote:render' );\n\t},\n\n\tclone: function() {\n\t\tvar newModel = Backbone.Model.prototype.clone.apply( this, arguments );\n\t\tnewModel.set( 'id', elementor.helpers.getUniqueID() );\n\n\t\tnewModel.setHtmlCache( this.getHtmlCache() );\n\n\t\tvar elements = this.get( 'elements' ),\n\t\t\tsettings = this.get( 'settings' );\n\n\t\tif ( ! _.isEmpty( elements ) ) {\n\t\t\tnewModel.set( 'elements', elements.clone() );\n\t\t}\n\n\t\tnewModel.set( 'settings', settings.clone() );\n\n\t\treturn newModel;\n\t},\n\n\ttoJSON: function( options ) {\n\t\toptions = _.extend( { copyHtmlCache: false }, options );\n\n\t\t// Call parent's toJSON method\n\t\tvar data = Backbone.Model.prototype.toJSON.call( this );\n\n\t\t_.each( data, function( attribute, key ) {\n\t\t\tif ( attribute && attribute.toJSON ) {\n\t\t\t\tdata[ key ] = attribute.toJSON( options );\n\t\t\t}\n\t\t} );\n\n\t\tif ( options.copyHtmlCache ) {\n\t\t\tdata.htmlCache = this.getHtmlCache();\n\t\t} else {\n\t\t\tdelete data.htmlCache;\n\t\t}\n\n\t\treturn data;\n\t}\n\n} );\n\nElementCollection = Backbone.Collection.extend( {\n\tadd: function( models, options, isCorrectSet ) {\n\t\tif ( ( ! options || ! options.silent ) && ! isCorrectSet ) {\n\t\t\tthrow 'Call Error: Adding model to element collection is allowed only by the dedicated addChildModel() method.';\n\t\t}\n\n\t\treturn Backbone.Collection.prototype.add.call( this, models, options );\n\t},\n\n\tmodel: function( attrs, options ) {\n\t\tif ( attrs.elType ) {\n\t\t\treturn new ElementModel( attrs, options );\n\t\t}\n\t\treturn new Backbone.Model( attrs, options );\n\t},\n\n\tclone: function() {\n\t\tvar tempCollection = Backbone.Collection.prototype.clone.apply( this, arguments ),\n\t\t\tnewCollection = new ElementCollection();\n\n\t\ttempCollection.forEach( function( model ) {\n\t\t\tnewCollection.add( model.clone(), null, true );\n\t\t} );\n\n\t\treturn newCollection;\n\t}\n} );\n\nElementCollection.prototype.sync = function() {\n\treturn null;\n};\nElementCollection.prototype.fetch = function() {\n\treturn null;\n};\nElementCollection.prototype.save = function() {\n\treturn null;\n};\n\nElementModel.prototype.sync = function() {\n\treturn null;\n};\nElementModel.prototype.fetch = function() {\n\treturn null;\n};\nElementModel.prototype.save = function() {\n\treturn null;\n};\n\nmodule.exports = {\n\tModel: ElementModel,\n\tCollection: ElementCollection\n};\n",
    "var BaseSettingsModel = require( 'elementor-models/base-settings' ),\n\tRowSettingsModel;\n\nRowSettingsModel = BaseSettingsModel.extend( {\n\tdefaults: {}\n} );\n\nmodule.exports = RowSettingsModel;\n",
    "var BaseSettingsModel = require( 'elementor-models/base-settings' ),\n\tSectionSettingsModel;\n\nSectionSettingsModel = BaseSettingsModel.extend( {\n\tdefaults: {}\n} );\n\nmodule.exports = SectionSettingsModel;\n",
    "var BaseSettingsModel = require( 'elementor-models/base-settings' ),\n\tWidgetSettingsModel;\n\nWidgetSettingsModel = BaseSettingsModel.extend( {\n\n} );\n\nmodule.exports = WidgetSettingsModel;\n",
    "var Ajax;\n\nAjax = {\n\tconfig: {},\n\n\tinitConfig: function() {\n\t\tthis.config = {\n\t\t\tajaxParams: {\n\t\t\t\ttype: 'POST',\n\t\t\t\turl: elementor.config.ajaxurl,\n\t\t\t\tdata: {}\n\t\t\t}\n\t\t};\n\t},\n\n\tinit: function() {\n\t\tthis.initConfig();\n\t},\n\n\tsend: function( action, options ) {\n\t\tvar ajaxParams = elementor.helpers.cloneObject( this.config.ajaxParams );\n\n\t\toptions = options || {};\n\n\t\tBackbone.$.extend( ajaxParams, options );\n\n\t\tif ( ajaxParams.data instanceof FormData ) {\n\t\t\tajaxParams.data.append( 'action', action );\n\t\t} else {\n\t\t\tajaxParams.data.action = action;\n\t\t}\n\n\t\tvar successCallback = ajaxParams.success,\n\t\t\terrorCallback = ajaxParams.error;\n\n\t\tif ( successCallback || errorCallback ) {\n\t\t\tajaxParams.success = function( response ) {\n\t\t\t\tif ( response.success && successCallback ) {\n\t\t\t\t\tsuccessCallback( response.data );\n\t\t\t\t}\n\n\t\t\t\tif ( ( ! response.success ) && errorCallback ) {\n\t\t\t\t\terrorCallback( response.data );\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif ( errorCallback ) {\n\t\t\t\tajaxParams.error = function( data ) {\n\t\t\t\t\terrorCallback( data );\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\treturn Backbone.$.ajax( ajaxParams );\n\t}\n};\n\nmodule.exports = Ajax;\n",
    "var helpers;\n\nhelpers = {\n\t_enqueuedFonts: [],\n\n\telementsHierarchy: {\n\t\tsection: {\n\t\t\tcolumn: {\n\t\t\t\twidget: null,\n\t\t\t\tsection: null\n\t\t\t}\n\t\t}\n\t},\n\n\tenqueueFont: function( font ) {\n\t\tif ( -1 !== this._enqueuedFonts.indexOf( font ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar fontType = elementor.config.controls.font.fonts[ font ],\n\t\t\tfontUrl;\n\n\t\tswitch ( fontType ) {\n\t\t\tcase 'googlefonts' :\n\t\t\t\tfontUrl = 'https://fonts.googleapis.com/css?family=' + font + ':100,100italic,200,200italic,300,300italic,400,400italic,500,500italic,600,600italic,700,700italic,800,800italic,900,900italic';\n\t\t\t\tbreak;\n\n\t\t\tcase 'earlyaccess' :\n\t\t\t\tvar fontLowerString = font.replace( /\\s+/g, '' ).toLowerCase();\n\t\t\t\tfontUrl = 'https://fonts.googleapis.com/earlyaccess/' + fontLowerString + '.css';\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif ( ! _.isEmpty( fontUrl ) ) {\n\t\t\telementor.$previewContents.find( 'link:last' ).after( '<link href=\"' + fontUrl + '\" rel=\"stylesheet\" type=\"text/css\">' );\n\t\t}\n\t\tthis._enqueuedFonts.push( font );\n\t},\n\n\tgetElementChildType: function( elementType, container ) {\n\t\tif ( ! container ) {\n\t\t\tcontainer = this.elementsHierarchy;\n\t\t}\n\n\t\tif ( undefined !== container[ elementType ] ) {\n\n\t\t\tif ( Backbone.$.isPlainObject( container[ elementType ] ) ) {\n\t\t\t\treturn Object.keys( container[ elementType ] );\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\n\t\tfor ( var type in container ) {\n\n\t\t\tif ( ! container.hasOwnProperty( type ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ( ! Backbone.$.isPlainObject( container[ type ] ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar result = this.getElementChildType( elementType, container[ type ] );\n\n\t\t\tif ( result ) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t},\n\n\tgetUniqueID: function() {\n\t\tvar id;\n\n\t\t// TODO: Check conflict models\n\t\t//while ( true ) {\n\t\t\tid = Math.random().toString( 36 ).substr( 2, 7 );\n\t\t\t//if ( 1 > $( 'li.item-id-' + id ).length ) {\n\t\t\t\treturn id;\n\t\t\t//}\n\t\t//}\n\t},\n\n\tstringReplaceAll: function( string, replaces ) {\n\t\tvar re = new RegExp( Object.keys( replaces ).join( '|' ), 'gi' );\n\n\t\treturn string.replace( re, function( matched ) {\n\t\t\treturn replaces[ matched ];\n\t\t} );\n\t},\n\n\tisControlVisible: function( controlModel, elementSettingsModel ) {\n\t\tvar condition;\n\n\t\t// TODO: Better way to get this?\n\t\tif ( _.isFunction( controlModel.get ) ) {\n\t\t\tcondition = controlModel.get( 'condition' );\n\t\t} else {\n\t\t\tcondition = controlModel.condition;\n\t\t}\n\n\t\tif ( _.isEmpty( condition ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tvar hasFields = _.filter( condition, function( conditionValue, conditionName ) {\n\t\t\tvar conditionNameParts = conditionName.match( /([a-z_0-9]+)(?:\\[([a-z_]+)])?(!?)$/i ),\n\t\t\t\tconditionRealName = conditionNameParts[1],\n\t\t\t\tconditionSubKey = conditionNameParts[2],\n\t\t\t\tisNegativeCondition = !! conditionNameParts[3],\n\t\t\t\tcontrolValue = elementSettingsModel.get( conditionRealName );\n\n\t\t\tif ( conditionSubKey ) {\n\t\t\t\tcontrolValue = controlValue[ conditionSubKey ];\n\t\t\t}\n\n\t\t\tvar isContains = ( _.isArray( conditionValue ) ) ? _.contains( conditionValue, controlValue ) : conditionValue === controlValue;\n\n\t\t\treturn isNegativeCondition ? isContains : ! isContains;\n\t\t} );\n\n\t\treturn _.isEmpty( hasFields );\n\t},\n\n\tcloneObject: function( object ) {\n\t\treturn JSON.parse( JSON.stringify( object ) );\n\t},\n\n\tgetYoutubeIDFromURL: function( url ) {\n\t\tvar videoIDParts = url.match( /^.*(?:youtu.be\\/|v\\/|e\\/|u\\/\\w+\\/|embed\\/|v=)([^#\\&\\?]*).*/ );\n\n\t\treturn videoIDParts && videoIDParts[1];\n\t},\n\n\tdisableElementEvents: function( $element ) {\n\t\t$element.each( function() {\n\t\t\tvar currentPointerEvents = this.style.pointerEvents;\n\n\t\t\tif ( 'none' === currentPointerEvents ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tBackbone.$( this )\n\t\t\t\t.data( 'backup-pointer-events', currentPointerEvents )\n\t\t\t\t.css( 'pointer-events', 'none' );\n\t\t} );\n\t},\n\n\tenableElementEvents: function( $element ) {\n\t\t$element.each( function() {\n\t\t\tvar $this = Backbone.$( this ),\n\t\t\t\tbackupPointerEvents = $this.data( 'backup-pointer-events' );\n\n\t\t\tif ( undefined === backupPointerEvents ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t$this\n\t\t\t\t.removeData( 'backup-pointer-events' )\n\t\t\t\t.css( 'pointer-events', backupPointerEvents );\n\t\t} );\n\t}\n};\n\nmodule.exports = helpers;\n",
    "var Introduction;\n\nIntroduction = function() {\n\tvar modal;\n\n\tvar initModal = function() {\n\t\tmodal = elementor.dialogsManager.createWidget( 'elementor-modal', {\n\t\t\tid: 'elementor-introduction'\n\t\t} );\n\n\t\tmodal.on( 'hide', function() {\n\t\t\tmodal.getElements( 'message' ).empty(); // In order to stop the video\n\t\t} );\n\t};\n\n\tthis.getSettings = function() {\n\t\treturn elementor.config.introduction;\n\t};\n\n\tthis.getModal = function() {\n\t\tif ( ! modal ) {\n\t\t\tinitModal();\n\t\t}\n\n\t\treturn modal;\n\t};\n\n\tthis.startIntroduction = function() {\n\t\tvar settings = this.getSettings();\n\n\t\tthis.getModal()\n\t\t    .setHeaderMessage( settings.title )\n\t\t    .setMessage( settings.content )\n\t\t    .show();\n\t};\n\n\tthis.startOnLoadIntroduction = function() {\n\t\tvar settings = this.getSettings();\n\n\t\tif ( ! settings.is_user_should_view ) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetTimeout( _.bind( function() {\n\t\t\tthis.startIntroduction();\n\t\t}, this ), settings.delay );\n\t};\n\n};\n\nmodule.exports = new Introduction();\n",
    "/**\n * HTML5 - Drag and Drop\n */\n;(function( $ ) {\n\n\tvar hasFullDataTransferSupport = function( event ) {\n\t\ttry {\n\t\t\tevent.originalEvent.dataTransfer.setData( 'test', 'test' );\n\n\t\t\tevent.originalEvent.dataTransfer.clearData( 'test' );\n\n\t\t\treturn true;\n\t\t} catch ( e ) {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tvar Draggable = function( userSettings ) {\n\t\tvar self = this,\n\t\t\tsettings = {},\n\t\t\telementsCache = {},\n\t\t\tdefaultSettings = {\n\t\t\t\telement: '',\n\t\t\t\tgroups: null,\n\t\t\t\tonDragStart: null,\n\t\t\t\tonDragEnd: null\n\t\t\t};\n\n\t\tvar initSettings = function() {\n\t\t\t$.extend( true, settings, defaultSettings, userSettings );\n\t\t};\n\n\t\tvar initElementsCache = function() {\n\t\t\telementsCache.$element = $( settings.element );\n\t\t};\n\n\t\tvar buildElements = function() {\n\t\t\telementsCache.$element.attr( 'draggable', true );\n\t\t};\n\n\t\tvar onDragEnd = function( event ) {\n\t\t\tif ( $.isFunction( settings.onDragEnd ) ) {\n\t\t\t\tsettings.onDragEnd.call( elementsCache.$element, event, self );\n\t\t\t}\n\t\t};\n\n\t\tvar onDragStart = function( event ) {\n\t\t\tvar groups = settings.groups || [],\n\t\t\t\tdataContainer = {\n\t\t\t\t\tgroups: groups\n\t\t\t\t};\n\n\t\t\tif ( hasFullDataTransferSupport( event ) ) {\n\t\t\t\tevent.originalEvent.dataTransfer.setData( JSON.stringify( dataContainer ), true );\n\t\t\t}\n\n\t\t\tif ( $.isFunction( settings.onDragStart ) ) {\n\t\t\t\tsettings.onDragStart.call( elementsCache.$element, event, self );\n\t\t\t}\n\t\t};\n\n\t\tvar attachEvents = function() {\n\t\t\telementsCache.$element\n\t\t\t\t.on( 'dragstart', onDragStart )\n\t\t\t\t.on( 'dragend', onDragEnd );\n\t\t};\n\n\t\tvar init = function() {\n\t\t\tinitSettings();\n\n\t\t\tinitElementsCache();\n\n\t\t\tbuildElements();\n\n\t\t\tattachEvents();\n\t\t};\n\n\t\tthis.destroy = function() {\n\t\t\telementsCache.$element.off( 'dragstart', onDragStart );\n\n\t\t\telementsCache.$element.removeAttr( 'draggable' );\n\t\t};\n\n\t\tinit();\n\t};\n\n\tvar Droppable = function( userSettings ) {\n\t\tvar self = this,\n\t\t\tsettings = {},\n\t\t\telementsCache = {},\n\t\t\tdefaultSettings = {\n\t\t\t\telement: '',\n\t\t\t\titems: '>',\n\t\t\t\thorizontalSensitivity: '10%',\n\t\t\t\taxis: [ 'vertical', 'horizontal' ],\n\t\t\t\tgroups: null,\n\t\t\t\tisDroppingAllowed: null,\n\t\t\t\tonDragEnter: null,\n\t\t\t\tonDragging: null,\n\t\t\t\tonDropping: null,\n\t\t\t\tonDragLeave: null\n\t\t\t};\n\n\t\tvar initSettings = function() {\n\t\t\t$.extend( settings, defaultSettings, userSettings );\n\t\t};\n\n\t\tvar initElementsCache = function() {\n\t\t\telementsCache.$element = $( settings.element );\n\t\t};\n\n\t\tvar hasHorizontalDetection = function() {\n\t\t\treturn -1 !== settings.axis.indexOf( 'horizontal' );\n\t\t};\n\n\t\tvar hasVerticalDetection = function() {\n\t\t\treturn -1 !== settings.axis.indexOf( 'vertical' );\n\t\t};\n\n\t\tvar checkHorizontal = function( offsetX, elementWidth ) {\n\t\t\tvar isPercentValue,\n\t\t\t\tsensitivity;\n\n\t\t\tif ( ! hasHorizontalDetection() ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif ( ! hasVerticalDetection() ) {\n\t\t\t\treturn offsetX > elementWidth / 2 ? 'right' : 'left';\n\t\t\t}\n\n\t\t\tsensitivity = settings.horizontalSensitivity.match( /\\d+/ );\n\n\t\t\tif ( ! sensitivity ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tsensitivity = sensitivity[ 0 ];\n\n\t\t\tisPercentValue = /%$/.test( settings.horizontalSensitivity );\n\n\t\t\tif ( isPercentValue ) {\n\t\t\t\tsensitivity = elementWidth / sensitivity;\n\t\t\t}\n\n\t\t\tif ( offsetX > elementWidth - sensitivity ) {\n\t\t\t\treturn 'right';\n\t\t\t} else if ( offsetX < sensitivity ) {\n\t\t\t\treturn 'left';\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\tvar getSide = function( element, event ) {\n\t\t\tvar $element,\n\t\t\t\tthisHeight,\n\t\t\t\tthisWidth,\n\t\t\t\tside;\n\n\t\t\tevent = event.originalEvent;\n\n\t\t\t$element = $( element );\n\t\t\tthisHeight = $element.outerHeight();\n\t\t\tthisWidth = $element.outerWidth();\n\n\t\t\tif ( side = checkHorizontal( event.offsetX, thisWidth ) ) {\n\t\t\t\treturn side;\n\t\t\t}\n\n\t\t\tif ( ! hasVerticalDetection() ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif ( event.offsetY > thisHeight / 2 ) {\n\t\t\t\tside = 'bottom';\n\t\t\t} else {\n\t\t\t\tside = 'top';\n\t\t\t}\n\n\t\t\treturn side;\n\t\t};\n\n\t\tvar isDroppingAllowed = function( element, side, event ) {\n\t\t\tvar dataTransferTypes,\n\t\t\t\tdraggableGroups,\n\t\t\t\tisGroupMatch,\n\t\t\t\tisDroppingAllowed;\n\n\t\t\tif ( settings.groups && hasFullDataTransferSupport( event ) ) {\n\n\t\t\t\tdataTransferTypes = event.originalEvent.dataTransfer.types;\n\t\t\t\tisGroupMatch = false;\n\n\t\t\t\tdataTransferTypes = Array.prototype.slice.apply( dataTransferTypes ); // Convert to array, since Firefox hold him as DOMStringList\n\n\t\t\t\tdataTransferTypes.forEach( function( type ) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tdraggableGroups = JSON.parse( type );\n\n\t\t\t\t\t\tif ( ! draggableGroups.groups.slice ) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tsettings.groups.forEach( function( groupName ) {\n\n\t\t\t\t\t\t\tif ( -1 !== draggableGroups.groups.indexOf( groupName ) ) {\n\t\t\t\t\t\t\t\tisGroupMatch = true;\n\t\t\t\t\t\t\t\treturn false; // stops the forEach from extra loops\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\tif ( ! isGroupMatch ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( $.isFunction( settings.isDroppingAllowed ) ) {\n\n\t\t\t\tisDroppingAllowed = settings.isDroppingAllowed.call( element, side, event, self );\n\n\t\t\t\tif ( ! isDroppingAllowed ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\n\t\tvar onDragEnter = function( event ) {\n\t\t\tif ( event.target !== this ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Avoid internal elements event firing\n\t\t\t$( this ).children().each( function() {\n\t\t\t\tvar currentPointerEvents = this.style.pointerEvents;\n\n\t\t\t\tif ( 'none' === currentPointerEvents ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t$( this )\n\t\t\t\t\t.data( 'backup-pointer-events', currentPointerEvents )\n\t\t\t\t\t.css( 'pointer-events', 'none' );\n\t\t\t} );\n\n\t\t\tvar side = getSide( this, event );\n\n\t\t\tif ( ! isDroppingAllowed( this, side, event ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( $.isFunction( settings.onDragEnter ) ) {\n\t\t\t\tsettings.onDragEnter.call( this, side, event, self );\n\t\t\t}\n\t\t};\n\n\t\tvar onDragOver = function( event ) {\n\t\t\tvar side = getSide( this, event );\n\n\t\t\tif ( ! isDroppingAllowed( this, side, event ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tevent.preventDefault();\n\n\t\t\tif ( $.isFunction( settings.onDragging ) ) {\n\t\t\t\tsettings.onDragging.call( this, side, event, self );\n\t\t\t}\n\t\t};\n\n\t\tvar onDrop = function( event ) {\n\t\t\tvar side = getSide( this, event );\n\n\t\t\tif ( ! isDroppingAllowed( this, side, event ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tevent.preventDefault();\n\n\t\t\tif ( $.isFunction( settings.onDropping ) ) {\n\t\t\t\tsettings.onDropping.call( this, side, event, self );\n\t\t\t}\n\t\t};\n\n\t\tvar onDragLeave = function( event ) {\n\t\t\t// Avoid internal elements event firing\n\t\t\t$( this ).children().each( function() {\n\t\t\t\tvar $this = $( this ),\n\t\t\t\t\tbackupPointerEvents = $this.data( 'backup-pointer-events' );\n\n\t\t\t\tif ( undefined === backupPointerEvents ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t$this\n\t\t\t\t\t.removeData( 'backup-pointer-events' )\n\t\t\t\t\t.css( 'pointer-events', backupPointerEvents );\n\t\t\t} );\n\n\t\t\tif ( $.isFunction( settings.onDragLeave ) ) {\n\t\t\t\tsettings.onDragLeave.call( this, event, self );\n\t\t\t}\n\t\t};\n\n\t\tvar attachEvents = function() {\n\t\t\telementsCache.$element\n\t\t\t\t.on( 'dragenter', settings.items, onDragEnter )\n\t\t\t\t.on( 'dragover', settings.items, onDragOver )\n\t\t\t\t.on( 'drop', settings.items, onDrop )\n\t\t\t\t.on( 'dragleave drop', settings.items, onDragLeave );\n\t\t};\n\n\t\tvar init = function() {\n\t\t\tinitSettings();\n\n\t\t\tinitElementsCache();\n\n\t\t\tattachEvents();\n\t\t};\n\n\t\tthis.destroy = function() {\n\t\t\telementsCache.$element\n\t\t\t\t.off( 'dragenter', settings.items, onDragEnter )\n\t\t\t\t.off( 'dragover', settings.items, onDragOver )\n\t\t\t\t.off( 'drop', settings.items, onDrop )\n\t\t\t\t.off( 'dragleave drop', settings.items, onDragLeave );\n\t\t};\n\n\t\tinit();\n\t};\n\n\tvar plugins = {\n\t\thtml5Draggable: Draggable,\n\t\thtml5Droppable: Droppable\n\t};\n\n\t$.each( plugins, function( pluginName, Plugin ) {\n\t\t$.fn[ pluginName ] = function( options ) {\n\t\t\toptions = options || {};\n\n\t\t\tthis.each( function() {\n\t\t\t\tvar instance = $.data( this, pluginName ),\n\t\t\t\t\thasInstance = instance instanceof Plugin;\n\n\t\t\t\tif ( hasInstance ) {\n\n\t\t\t\t\tif ( 'destroy' === options ) {\n\n\t\t\t\t\t\tinstance.destroy();\n\n\t\t\t\t\t\t$.removeData( this, pluginName );\n\t\t\t\t\t}\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\toptions.element = this;\n\n\t\t\t\t$.data( this, pluginName, new Plugin( options ) );\n\t\t\t} );\n\n\t\t\treturn this;\n\t\t};\n\t} );\n})( jQuery );\n",
    "/*!\n * jQuery Serialize Object v1.0.1\n */\n(function( $ ) {\n\t$.fn.elementorSerializeObject = function() {\n\t\tvar serializedArray = this.serializeArray(),\n\t\t\tdata = {};\n\n\t\tvar parseObject = function( dataContainer, key, value ) {\n\t\t\tvar isArrayKey = /^[^\\[\\]]+\\[]/.test( key ),\n\t\t\t\tisObjectKey = /^[^\\[\\]]+\\[[^\\[\\]]+]/.test( key ),\n\t\t\t\tkeyName = key.replace( /\\[.*/, '' );\n\n\t\t\tif ( isArrayKey ) {\n\t\t\t\tif ( ! dataContainer[ keyName ] ) {\n\t\t\t\t\tdataContainer[ keyName ] = [];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ( ! isObjectKey ) {\n\t\t\t\t\tif ( dataContainer.push ) {\n\t\t\t\t\t\tdataContainer.push( value );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdataContainer[ keyName ] = value;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( ! dataContainer[ keyName ] ) {\n\t\t\t\t\tdataContainer[ keyName ] = {};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar nextKeys = key.match( /\\[[^\\[\\]]*]/g );\n\n\t\t\tnextKeys[ 0 ] = nextKeys[ 0 ].replace( /\\[|]/g, '' );\n\n\t\t\treturn parseObject( dataContainer[ keyName ], nextKeys.join( '' ), value );\n\t\t};\n\n\t\t$.each( serializedArray, function() {\n\t\t\tparseObject( data, this.name, this.value );\n\t\t} );\n\t\treturn data;\n\t};\n})( jQuery );\n",
    "var Modals;\n\nModals = {\n\tinit: function() {\n\t\tthis.initModalWidgetType();\n\t},\n\n\tinitModalWidgetType: function() {\n\t\tvar modalProperties = {\n\t\t\tgetDefaultSettings: function() {\n\t\t\t\tvar settings = DialogsManager.getWidgetType( 'options' ).prototype.getDefaultSettings.apply( this, arguments );\n\n\t\t\t\treturn _.extend( settings, {\n\t\t\t\t\tposition: {\n\t\t\t\t\t\tmy: 'center',\n\t\t\t\t\t\tat: 'center'\n\t\t\t\t\t},\n\t\t\t\t\tcontentWidth: 'auto',\n\t\t\t\t\tcontentHeight: 'auto',\n\t\t\t\t\tcloseButton: true\n\t\t\t\t} );\n\t\t\t},\n\t\t\tbuildWidget: function() {\n\t\t\t\tDialogsManager.getWidgetType( 'options' ).prototype.buildWidget.apply( this, arguments );\n\n\t\t\t\tif ( ! this.getSettings( 'closeButton' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar $closeButton = this.addElement( 'closeButton', '<div><i class=\"fa fa-times\"></i></div>' );\n\n\t\t\t\tthis.getElements( 'widgetContent' ).prepend( $closeButton );\n\t\t\t},\n\t\t\tattachEvents: function() {\n\t\t\t\tif ( this.getSettings( 'closeButton' ) ) {\n\t\t\t\t\tthis.getElements( 'closeButton' ).on( 'click', this.hide );\n\t\t\t\t}\n\t\t\t},\n\t\t\tonReady: function() {\n\t\t\t\tDialogsManager.getWidgetType( 'options' ).prototype.onReady.apply( this, arguments );\n\n\t\t\t\tvar elements = this.getElements(),\n\t\t\t\t\tsettings = this.getSettings();\n\n\t\t\t\tif ( 'auto' !== settings.contentWidth ) {\n\t\t\t\t\telements.message.width( settings.contentWidth );\n\t\t\t\t}\n\n\t\t\t\tif ( 'auto' !== settings.contentHeight ) {\n\t\t\t\t\telements.message.height( settings.contentHeight );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tDialogsManager.addWidgetType( 'elementor-modal', DialogsManager.getWidgetType( 'options' ).extend( 'elementor-modal', modalProperties ) );\n\t}\n};\n\nmodule.exports = Modals;\n",
    "var presetsFactory;\n\npresetsFactory = {\n\n\tgetPresetsDictionary: function() {\n\t\treturn {\n\t\t\t11: 100 / 9,\n\t\t\t12: 100 / 8,\n\t\t\t14: 100 / 7,\n\t\t\t16: 100 / 6,\n\t\t\t33: 100 / 3,\n\t\t\t66: 2 / 3 * 100,\n\t\t\t83: 5 / 6 * 100\n\t\t};\n\t},\n\n\tgetAbsolutePresetValues: function( preset ) {\n\t\tvar clonedPreset = elementor.helpers.cloneObject( preset ),\n\t\t\tpresetDictionary = this.getPresetsDictionary();\n\n\t\t_.each( clonedPreset, function( unitValue, unitIndex ) {\n\t\t\tif ( presetDictionary[ unitValue ] ) {\n\t\t\t\tclonedPreset[ unitIndex ] = presetDictionary[ unitValue ];\n\t\t\t}\n\t\t} );\n\n\t\treturn clonedPreset;\n\t},\n\n\tgetPresets: function( columnsCount, presetIndex ) {\n\t\tvar presets = elementor.helpers.cloneObject( elementor.config.elements.section.presets );\n\n\t\tif ( columnsCount ) {\n\t\t\tpresets = presets[ columnsCount ];\n\t\t}\n\n\t\tif ( presetIndex ) {\n\t\t\tpresets = presets[ presetIndex ];\n\t\t}\n\n\t\treturn presets;\n\t},\n\n\tgetPresetByStructure: function( structure ) {\n\t\tvar parsedStructure = this.getParsedStructure( structure );\n\n\t\treturn this.getPresets( parsedStructure.columnsCount, parsedStructure.presetIndex );\n\t},\n\n\tgetParsedStructure: function( structure ) {\n\t\tstructure += ''; // Make sure this is a string\n\n\t\treturn {\n\t\t\tcolumnsCount: structure.slice( 0, -1 ),\n\t\t\tpresetIndex: structure.substr( -1 )\n\t\t};\n\t},\n\n\tgetPresetSVG: function( preset, svgWidth, svgHeight, separatorWidth ) {\n\t\tsvgWidth = svgWidth || 100;\n\t\tsvgHeight = svgHeight || 50;\n\t\tseparatorWidth = separatorWidth || 2;\n\n\t\tvar absolutePresetValues = this.getAbsolutePresetValues( preset ),\n\t\t\tpresetSVGPath = this._generatePresetSVGPath( absolutePresetValues, svgWidth, svgHeight, separatorWidth );\n\n\t\treturn this._createSVGPreset( presetSVGPath, svgWidth, svgHeight );\n\t},\n\n\t_createSVGPreset: function( presetPath, svgWidth, svgHeight ) {\n\t\tvar svg = document.createElementNS( 'http://www.w3.org/2000/svg', 'svg' );\n\n\t\tsvg.setAttributeNS( 'http://www.w3.org/2000/xmlns/', 'xmlns:xlink', 'http://www.w3.org/1999/xlink' );\n\t\tsvg.setAttribute( 'viewBox', '0 0 ' + svgWidth + ' ' + svgHeight );\n\n\t\tvar path = document.createElementNS( 'http://www.w3.org/2000/svg', 'path' );\n\n\t\tpath.setAttribute( 'd', presetPath );\n\n\t\tsvg.appendChild( path );\n\n\t\treturn svg;\n\t},\n\n\t_generatePresetSVGPath: function( preset, svgWidth, svgHeight, separatorWidth ) {\n\t\tvar DRAW_SIZE = svgWidth - separatorWidth * ( preset.length - 1 );\n\n\t\tvar xPointer = 0,\n\t\t\tdOutput = '';\n\n\t\tfor ( var i = 0; i < preset.length; i++ ) {\n\t\t\tif ( i ) {\n\t\t\t\tdOutput += ' ';\n\t\t\t}\n\n\t\t\tvar increment = preset[ i ] / 100 * DRAW_SIZE;\n\n\t\t\txPointer += increment;\n\n\t\t\tdOutput += 'M' + ( +xPointer.toFixed( 4 ) ) + ',0';\n\n\t\t\tdOutput += 'V' + svgHeight;\n\n\t\t\tdOutput += 'H' + ( +( xPointer - increment ).toFixed( 4 ) );\n\n\t\t\tdOutput += 'V0Z';\n\n\t\t\txPointer += separatorWidth;\n\t\t}\n\n\t\treturn dOutput;\n\t}\n};\n\nmodule.exports = presetsFactory;\n",
    "var Schemes;\n\nSchemes = function() {\n\tvar self = this,\n\t\tstyleRules = {},\n\t\tschemes = {},\n\t\tsettings = {\n\t\t\tselectorWrapperPrefix: '.elementor-widget-'\n\t\t},\n\t\telements = {};\n\n\tvar buildUI = function() {\n\t\telements.$previewHead.append( elements.$style );\n\t};\n\n\tvar initElements = function() {\n\t\telements.$style = Backbone.$( '<style>', {\n\t\t\tid: 'elementor-style-scheme'\n\t\t});\n\n\t\telements.$previewHead = elementor.$previewContents.find( 'head' );\n\t};\n\n\tvar initSchemes = function() {\n\t\tschemes = elementor.helpers.cloneObject( elementor.config.schemes.items );\n\t};\n\n\tvar addStyleRule = function( selector, property ) {\n\t\tif ( ! styleRules[ selector ] ) {\n\t\t\tstyleRules[ selector ] = [];\n\t\t}\n\n\t\tstyleRules[ selector ].push( property );\n\t};\n\n\tvar fetchControlStyles = function( control, widgetType ) {\n\t\t_.each( control.selectors, function( cssProperty, selector ) {\n\t\t\tvar currentSchemeValue = self.getSchemeValue( control.scheme.type, control.scheme.value, control.scheme.key ),\n\t\t\t\toutputSelector,\n\t\t\t\toutputCssProperty;\n\n\t\t\tif ( _.isEmpty( currentSchemeValue.value ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\toutputSelector = selector.replace( /\\{\\{WRAPPER\\}\\}/g, settings.selectorWrapperPrefix + widgetType );\n\t\t\toutputCssProperty = elementor.getControlItemView().replaceStyleValues( cssProperty, currentSchemeValue.value );\n\n\t\t\taddStyleRule( outputSelector, outputCssProperty );\n\t\t} );\n\t};\n\n\tvar fetchWidgetControlsStyles = function( widget, widgetType ) {\n\t\tvar widgetSchemeControls = self.getWidgetSchemeControls( widget );\n\n\t\t_.each( widgetSchemeControls, function( control ) {\n\t\t\tfetchControlStyles( control, widgetType );\n\t\t} );\n\t};\n\n\tvar fetchAllWidgetsSchemesStyle = function() {\n\t\t_.each( elementor.config.widgets, function( widget, widgetType ) {\n\t\t\tfetchWidgetControlsStyles(  widget, widgetType  );\n\t\t} );\n\t};\n\n\tvar parseSchemeStyle = function() {\n\t\tvar stringOutput = '';\n\n\t\t_.each( styleRules, function( properties, selector ) {\n\t\t\tstringOutput += selector + '{' + properties.join( '' ) + '}';\n\t\t} );\n\n\t\treturn stringOutput;\n\t};\n\n\tvar resetStyleRules = function() {\n\t\tstyleRules = {};\n\t};\n\n\tthis.init = function() {\n\t\tinitElements();\n\t\tbuildUI();\n\t\tinitSchemes();\n\n\t\treturn self;\n\t};\n\n\tthis.getWidgetSchemeControls = function( widget ) {\n\t\treturn _.filter( widget.controls, function( control ) {\n\t\t\treturn _.isObject( control.scheme );\n\t\t} );\n\t};\n\n\tthis.getSchemes = function() {\n\t\treturn schemes;\n\t};\n\n\tthis.getEnabledSchemesTypes = function() {\n\t\treturn elementor.config.schemes.enabled_schemes;\n\t};\n\n\tthis.getScheme = function( schemeType ) {\n\t\treturn schemes[ schemeType ];\n\t};\n\n\tthis.getSchemeValue = function( schemeType, value, key ) {\n\t\tif ( this.getEnabledSchemesTypes().indexOf( schemeType ) < 0 ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar scheme = self.getScheme( schemeType ),\n\t\t\tschemeValue = scheme.items[ value ];\n\n\t\tif ( key && _.isObject( schemeValue ) ) {\n\t\t\tvar clonedSchemeValue = elementor.helpers.cloneObject( schemeValue );\n\n\t\t\tclonedSchemeValue.value = schemeValue.value[ key ];\n\n\t\t\treturn clonedSchemeValue;\n\t\t}\n\n\t\treturn schemeValue;\n\t};\n\n\tthis.printSchemesStyle = function() {\n\t\tresetStyleRules();\n\t\tfetchAllWidgetsSchemesStyle();\n\n\t\telements.$style.text( parseSchemeStyle() );\n\t};\n\n\tthis.resetSchemes = function( schemeName ) {\n\t\tschemes[ schemeName ] = elementor.helpers.cloneObject( elementor.config.schemes.items[ schemeName ] );\n\n\t\tthis.onSchemeChange();\n\t};\n\n\tthis.saveScheme = function( schemeName ) {\n\t\telementor.config.schemes.items[ schemeName ].items = elementor.helpers.cloneObject( schemes[ schemeName ].items );\n\n\t\tNProgress.start();\n\n\t\telementor.ajax.send( 'apply_scheme', {\n\t\t\tdata: {\n\t\t\t\tscheme_name: schemeName,\n\t\t\t\tdata: JSON.stringify( schemes[ schemeName ].items )\n\t\t\t},\n\t\t\tsuccess: function() {\n\t\t\t\tNProgress.done();\n\t\t\t}\n\t\t} );\n\t};\n\n\tthis.setSchemeValue = function( schemeName, itemKey, value ) {\n\t\tschemes[ schemeName ].items[ itemKey ].value = value;\n\n\t\tthis.onSchemeChange();\n\t};\n\n\tthis.onSchemeChange = function() {\n\t\tthis.printSchemesStyle();\n\t};\n};\n\nmodule.exports = new Schemes();\n",
    "( function( $ ) {\n\n\tvar Stylesheet = function() {\n\t\tvar self = this,\n\t\t\trules = {},\n\t\t\tdevices = {};\n\n\t\tvar getDeviceMaxValue = function( deviceName ) {\n\t\t\tvar deviceNames = Object.keys( devices ),\n\t\t\t\tdeviceNameIndex = deviceNames.indexOf( deviceName ),\n\t\t\t\tnextIndex = deviceNameIndex + 1;\n\n\t\t\tif ( nextIndex >= deviceNames.length ) {\n\t\t\t\tthrow new RangeError( 'Max value for this device is out of range.' );\n\t\t\t}\n\n\t\t\treturn devices[ deviceNames[ nextIndex ] ] - 1;\n\t\t};\n\n\t\tvar queryToHash = function( query ) {\n\t\t\tvar hash = [];\n\n\t\t\t$.each( query, function( endPoint ) {\n\t\t\t\thash.push( endPoint + '_' + this );\n\t\t\t} );\n\n\t\t\treturn hash.join( '-' );\n\t\t};\n\n\t\tvar hashToQuery = function( hash ) {\n\t\t\tvar query = {};\n\n\t\t\thash = hash.split( '-' ).filter( String );\n\n\t\t\thash.forEach( function( singleQuery ) {\n\t\t\t\tvar queryParts = singleQuery.split( '_' ),\n\t\t\t\t\tendPoint = queryParts[0],\n\t\t\t\t\tdeviceName = queryParts[1];\n\n\t\t\t\tquery[ endPoint ] = 'max' === endPoint ? getDeviceMaxValue( deviceName ) : devices[ deviceName ];\n\t\t\t} );\n\n\t\t\treturn query;\n\t\t};\n\n\t\tvar addQueryHash = function( queryHash ) {\n\t\t\trules[ queryHash ] = {};\n\n\t\t\tvar hashes = Object.keys( rules );\n\n\t\t\tif ( hashes.length < 2 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Sort the devices from narrowest to widest\n\t\t\thashes.sort( function( a, b ) {\n\t\t\t\tif ( 'all' === a ) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\n\t\t\t\tif ( 'all' === b ) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\n\t\t\t\tvar aQuery = hashToQuery( a ),\n\t\t\t\t\tbQuery = hashToQuery( b );\n\n\t\t\t\treturn bQuery.max - aQuery.max;\n\t\t\t} );\n\n\t\t\tvar sortedRules = {};\n\n\t\t\thashes.forEach( function( deviceName ) {\n\t\t\t\tsortedRules[ deviceName ] = rules[ deviceName ];\n\t\t\t} );\n\n\t\t\trules = sortedRules;\n\t\t};\n\n\t\tthis.addDevice = function( deviceName, deviceValue ) {\n\t\t\tdevices[ deviceName ] = deviceValue;\n\n\t\t\tvar deviceNames = Object.keys( devices );\n\n\t\t\tif ( deviceNames.length < 2 ) {\n\t\t\t\treturn self;\n\t\t\t}\n\n\t\t\t// Sort the devices from narrowest to widest\n\t\t\tdeviceNames.sort( function( a, b ) {\n\t\t\t\treturn devices[ a ] - devices[ b ];\n\t\t\t} );\n\n\t\t\tvar sortedDevices = {};\n\n\t\t\tdeviceNames.forEach( function( deviceName ) {\n\t\t\t\tsortedDevices[ deviceName ] = devices[ deviceName ];\n\t\t\t} );\n\n\t\t\tdevices = sortedDevices;\n\n\t\t\treturn self;\n\t\t};\n\n\t\tvar getQueryHashStyleFormat = function( queryHash ) {\n\t\t\tvar query = hashToQuery( queryHash ),\n\t\t\t\tstyleFormat = [];\n\n\t\t\t$.each( query, function( endPoint ) {\n\t\t\t\tstyleFormat.push( '(' + endPoint + '-width:' + this + 'px)' );\n\t\t\t} );\n\n\t\t\treturn '@media' + styleFormat.join( ' and ' );\n\t\t};\n\n\t\tthis.addRules = function( selector, styleRules, query ) {\n\t\t\tvar queryHash = 'all';\n\n\t\t\tif ( query ) {\n\t\t\t\tqueryHash = queryToHash( query );\n\t\t\t}\n\n\t\t\tif ( ! rules[ queryHash ] ) {\n\t\t\t\taddQueryHash( queryHash );\n\t\t\t}\n\n\t\t\tif ( ! rules[ queryHash ][ selector ] ) {\n\t\t\t\trules[ queryHash ][ selector ] = {};\n\t\t\t}\n\n\t\t\tif ( 'string' === typeof styleRules ) {\n\t\t\t\tstyleRules = styleRules.split( ';' ).filter( String );\n\n\t\t\t\tvar orderedRules = {};\n\n\t\t\t\t$.each( styleRules, function() {\n\t\t\t\t\tvar property = this.split( /:(.*)?/ );\n\n\t\t\t\t\torderedRules[ property[0].trim() ] = property[1].trim().replace( ';', '' );\n\t\t\t\t} );\n\n\t\t\t\tstyleRules = orderedRules;\n\t\t\t}\n\n\t\t\t$.extend( rules[ queryHash ][ selector ], styleRules );\n\n\t\t\treturn self;\n\t\t};\n\n\t\tthis.empty = function() {\n\t\t\trules = {};\n\t\t};\n\n\t\tthis.toString = function() {\n\t\t\tvar styleText = '';\n\n\t\t\t$.each( rules, function( queryHash ) {\n\t\t\t\tvar deviceText = Stylesheet.parseRules( this );\n\n\t\t\t\tif ( 'all' !== queryHash ) {\n\t\t\t\t\tdeviceText = getQueryHashStyleFormat( queryHash ) + '{' + deviceText + '}';\n\t\t\t\t}\n\n\t\t\t\tstyleText += deviceText;\n\t\t\t} );\n\n\t\t\treturn styleText;\n\t\t};\n\t};\n\n\tStylesheet.parseRules = function( rules ) {\n\t\tvar parsedRules = '';\n\n\t\t$.each( rules, function( selector ) {\n\t\t\tvar selectorContent = Stylesheet.parseProperties( this );\n\n\t\t\tif ( selectorContent ) {\n\t\t\t\tparsedRules += selector + '{' + selectorContent + '}';\n\t\t\t}\n\t\t} );\n\n\t\treturn parsedRules;\n\t};\n\n\tStylesheet.parseProperties = function( properties ) {\n\t\tvar parsedProperties = '';\n\n\t\t$.each( properties, function( propertyKey ) {\n\t\t\tif ( this ) {\n\t\t\t\tparsedProperties += propertyKey + ':' + this + ';';\n\t\t\t}\n\t\t} );\n\n\t\treturn parsedProperties;\n\t};\n\n\tmodule.exports = Stylesheet;\n} )( jQuery );\n",
    "var BaseSettingsModel = require( 'elementor-models/base-settings' ),\n\tStylesheet = require( 'elementor-utils/stylesheet' ),\n\tBaseElementView;\n\nBaseElementView = Marionette.CompositeView.extend( {\n\ttagName: 'div',\n\n\tid: function() {\n\t\treturn this.getElementUniqueClass();\n\t},\n\n\tattributes: function() {\n\t\tvar type = this.model.get( 'elType' );\n\n\t\tif ( 'widget'  === type ) {\n\t\t\ttype = this.model.get( 'widgetType' );\n\t\t}\n\t\treturn {\n\t\t\t'data-element_type': type\n\t\t};\n\t},\n\n\tbaseEvents: {},\n\n\telementEvents: {},\n\n\tstylesheet: null,\n\t$stylesheetElement: null,\n\n\tgetElementType: function() {\n\t\treturn this.model.get( 'elType' );\n\t},\n\n\tgetChildType: function() {\n\t\treturn elementor.helpers.getElementChildType( this.getElementType() );\n\t},\n\n\ttemplateHelpers: function() {\n\t\treturn {\n\t\t\telementModel: this.model\n\t\t};\n\t},\n\n\tevents: function() {\n\t\treturn _.extend( {}, this.baseEvents, this.elementEvents );\n\t},\n\n\tgetTemplateType: function() {\n\t\treturn 'js';\n\t},\n\n\tinitialize: function() {\n\t\t// grab the child collection from the parent model\n\t\t// so that we can render the collection as children\n\t\t// of this parent element\n\t\tthis.collection = this.model.get( 'elements' );\n\n\t\tif ( this.collection ) {\n\t\t\tthis.listenTo( this.collection, 'add remove reset', this.onCollectionChanged, this );\n\t\t}\n\n\t\tthis.listenTo( this.model.get( 'settings' ), 'change', this.onSettingsChanged, this );\n\t\tthis.listenTo( this.model.get( 'editSettings' ), 'change', this.onSettingsChanged, this );\n\n\t\tthis.on( 'render', function() {\n\t\t\tthis.renderUI();\n\t\t\tthis.runReadyTrigger();\n\t\t} );\n\n\t\tthis.initRemoveDialog();\n\n\t\tthis.initStylesheet();\n\t},\n\n\taddChildModel: function( model, options ) {\n\t\treturn this.collection.add( model, options, true );\n\t},\n\n\tisCollectionFilled: function() {\n\t\treturn false;\n\t},\n\n\tisInner: function() {\n\t\treturn !! this.model.get( 'isInner' );\n\t},\n\n\tinitRemoveDialog: function() {\n\t\tvar removeDialog;\n\n\t\tthis.getRemoveDialog = function() {\n\t\t\tif ( ! removeDialog ) {\n\t\t\t\tvar elementTitle = this.model.getTitle();\n\n\t\t\t\tremoveDialog = elementor.dialogsManager.createWidget( 'confirm', {\n\t\t\t\t\tmessage: elementor.translate( 'dialog_confirm_delete', [ elementTitle.toLowerCase() ] ),\n\t\t\t\t\theaderMessage: elementor.translate( 'delete_element', [ elementTitle ] ),\n\t\t\t\t\tstrings: {\n\t\t\t\t\t\tconfirm: elementor.translate( 'delete' ),\n\t\t\t\t\t\tcancel: elementor.translate( 'cancel' )\n\t\t\t\t\t},\n\t\t\t\t\tdefaultOption: 'confirm',\n\t\t\t\t\tonConfirm: _.bind( function() {\n\t\t\t\t\t\tthis.model.destroy();\n\t\t\t\t\t}, this )\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\treturn removeDialog;\n\t\t};\n\t},\n\n\tinitStylesheet: function() {\n\t\tthis.stylesheet = new Stylesheet();\n\n\t\tvar viewportBreakpoints = elementor.config.viewportBreakpoints;\n\n\t\tthis.stylesheet\n\t\t\t.addDevice( 'mobile', 0 )\n\t\t\t.addDevice( 'tablet', viewportBreakpoints.md )\n\t\t\t.addDevice( 'desktop', viewportBreakpoints.lg );\n\t},\n\n\tenqueueFonts: function() {\n\t\t_.each( this.model.get( 'settings' ).getFontControls(), _.bind( function( control ) {\n\t\t\tvar fontFamilyName = this.model.getSetting( control.name );\n\t\t\tif ( _.isEmpty( fontFamilyName ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar isVisible = elementor.helpers.isControlVisible( control, this.model.get( 'settings' ) );\n\t\t\tif ( ! isVisible ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\telementor.helpers.enqueueFont( fontFamilyName );\n\t\t}, this ) );\n\t},\n\n\trenderStyles: function() {\n\t\tvar self = this,\n\t\t\tsettings = self.model.get( 'settings' );\n\n\t\tself.stylesheet.empty();\n\n\t\tself.addStyleRules( settings.getStyleControls(), settings.attributes );\n\n\n\t\t/*\n\t\t _.each( settings.getStyleControls(), function( control ) {\n\t\t var controlValue = self.model.getSetting( control.name );\n\n\t\t if ( ! _.isNumber( controlValue ) && _.isEmpty( controlValue ) ) {\n\t\t return;\n\t\t }\n\n\t\t var isVisible = elementor.helpers.isControlVisible( control, self.model.get( 'settings' ) );\n\t\t if ( ! isVisible ) {\n\t\t return;\n\t\t }\n\n\t\t _.each( control.selectors, function( cssProperty, selector ) {\n\t\t var outputSelector = selector.replace( /\\{\\{WRAPPER}}/g, '#' + self.getElementUniqueClass() ),\n\t\t outputCssProperty = elementor.getControlItemView( control.type ).replaceStyleValues( cssProperty, controlValue ),\n\t\t query;\n\n\t\t if ( _.isEmpty( outputCssProperty ) ) {\n\t\t return;\n\t\t }\n\n\t\t if ( control.responsive && 'desktop' !== control.responsive ) {\n\t\t query = { max: control.responsive };\n\t\t }\n\n\t\t self.stylesheet.addRules( outputSelector, outputCssProperty, query );\n\t\t } );\n\t\t } );\n\t\t */\n\n\n\n\n\t\tif ( 'column' === self.model.get( 'elType' ) ) {\n\t\t\tvar inlineSize = self.model.getSetting( '_inline_size' );\n\n\t\t\tif ( ! _.isEmpty( inlineSize ) ) {\n\t\t\t\tself.stylesheet.addRules( '#' + self.getElementUniqueClass(), { width: inlineSize + '%' }, { min: 'tablet' } );\n\t\t\t}\n\t\t}\n\n\t\tself.addStyleToDocument();\n\t},\n\n\taddStyleRules: function( controls, values, placeholders, replacements ) {\n\t\tvar self = this;\n\n\t\tplaceholders = placeholders || [ /\\{\\{WRAPPER}}/g ];\n\n\t\treplacements = replacements || [ '#' + self.getElementUniqueClass() ];\n\n\t\t_.each( controls, function( control ) {\n\n\t\t\tif ( control.styleFields ) {\n\t\t\t\tplaceholders[1] = '{{CURRENT_ITEM}}';\n\n\t\t\t\tvalues[ control.name ].each( function( itemModel ) {\n\t\t\t\t\treplacements[1] = '.elementor-repeater-item-' + itemModel.get( '_id' );\n\n\t\t\t\t\tself.addStyleRules( control.styleFields, itemModel.attributes, placeholders, replacements );\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t//self.addControlStyleRules( control, values, self.model.get( 'settings' ), placeholders, replacements );\n\t\t\tself.addControlStyleRules( control, values, self.model.get( 'settings' ).controls, placeholders, replacements );\n\t\t} );\n\t},\n\n\taddControlStyleRules: function( control, values, controlsStack, placeholders, replacements ) {\n\t\tvar self = this;\n\n\t\tBaseElementView.addControlStyleRules( self.stylesheet, control, controlsStack, function( control ) {\n\t\t\treturn self.getStyleControlValue( control, values );\n\t\t}, placeholders, replacements );\n\t},\n\n\tgetStyleControlValue: function( control, values ) {\n\t\tvar value = values[ control.name ];\n\n\t\tif ( control.selectors_dictionary ) {\n\t\t\tvalue = control.selectors_dictionary[ value ] || value;\n\t\t}\n\n\t\tif ( ! _.isNumber( value ) && _.isEmpty( value ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar isVisible = elementor.helpers.isControlVisible( control, this.model.get( 'settings' ) );\n\t\tif ( ! isVisible ) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn value;\n\t},\n\n\n\n\t/*\n\n\taddControlStyleRules: function( control, values, controlsStack, placeholders, replacements ) {\n\t\tvar self = this,\n\t\t\tvalue = values[ control.name ];\n\n\t\tif ( ! _.isNumber( value ) && _.isEmpty( value ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar isVisible = elementor.helpers.isControlVisible( control, this.model.get( 'settings' ) );\n\t\tif ( ! isVisible ) {\n\t\t\treturn;\n\t\t}\n\t\t_.each( control.selectors, function( cssProperty, selector ) {\n\n\t\t\tvar outputCssProperty,\n\t\t\t\tparsedValue = '',\n\t\t\t\tparserControl,\n\t\t\t\tvalueToInsert = value,\n\t\t\t\tquery;\n\n\n\t\t\ttry {\n\t\t\t\toutputCssProperty = cssProperty.replace( /\\{\\{(?:([^.}]+)\\.)?([^}]*)}}/g, function( originalPhrase, controlName, placeholder ) {\n\n\t\t\t\t\tif ( controlName ) {\n\t\t\t\t\t\tparserControl = _.findWhere( controlsStack, { name: controlName } );\n\n\t\t\t\t\t\tvalueToInsert = values( parserControl );\n\n\t\t\t\t\t\tconsole.log(controlName);\n\t\t\t\t\t\tconsole.log(originalPhrase);\n\t\t\t\t\t\tconsole.log(placeholder);\n\t\t\t\t\t\tconsole.log(valueToInsert);\n\t\t\t\t\t}\n\n\t\t\t\t\tparsedValue = elementor.getControlItemView( control.type ).getStyleValue( placeholder.toLowerCase(), valueToInsert );\n\n\n\t\t\t\t\tif ( '' === parsedValue ) {\n\t\t\t\t\t\tthrow '';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn parsedValue;\n\t\t\t\t} );\n\t\t\t} catch ( e ) {\n\t\t\t\tconsole.log(e);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//console.log(outputCssProperty);\n\n\n\t\tvar outputCssProperty = elementor.getControlItemView( control.type ).replaceStyleValues( cssProperty, value );\n\t\t\t//console.log(outputCssProperty);\n\n\n\t\t\tif ( _.isEmpty( outputCssProperty ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_.each( placeholders, function( placeholder, index ) {\n\t\t\t\tselector = selector.replace( placeholder, replacements[ index ] );\n\t\t\t} );\n\n\t\t\tif ( control.responsive && 'desktop' !== control.responsive ) {\n\t\t\t\tquery = { max: control.responsive };\n\t\t\t}\n\n\t\t\tself.stylesheet.addRules( selector, outputCssProperty, query );\n\t\t} );\n\t},\n\n\t*/\n\n\taddStyleToDocument: function() {\n\t\tvar styleText = this.stylesheet.toString();\n\n\t\tif ( _.isEmpty( styleText ) && ! this.$stylesheetElement ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! this.$stylesheetElement ) {\n\t\t\tthis.createStylesheetElement();\n\t\t}\n\n\t\tthis.$stylesheetElement.text( styleText );\n\t},\n\n\tcreateStylesheetElement: function() {\n\t\tthis.$stylesheetElement = Backbone.$( '<style>', { id: 'elementor-style-' + this.model.cid } );\n\n\t\telementor.$previewContents.find( 'head' ).append( this.$stylesheetElement );\n\t},\n\n\trenderCustomClasses: function() {\n\t\tthis.$el.addClass( 'elementor-element' );\n\n\t\tvar settings = this.model.get( 'settings' );\n\n\t\t_.each( settings.attributes, _.bind( function( value, attribute ) {\n\t\t\tif ( settings.isClassControl( attribute ) ) {\n\t\t\t\tvar currentControl = settings.getControl( attribute );\n\n\t\t\t\tthis.$el.removeClass( currentControl.prefix_class + settings.previous( attribute ) );\n\n\t\t\t\tvar isVisible = elementor.helpers.isControlVisible( currentControl, this.model.get( 'settings' ) );\n\n\t\t\t\tif ( isVisible && ! _.isEmpty( settings.get( attribute ) ) ) {\n\t\t\t\t\tthis.$el.addClass( currentControl.prefix_class + settings.get( attribute ) );\n\t\t\t\t\tthis.$el.addClass( _.result( this, 'className' ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}, this ) );\n\t},\n\n\trenderUI: function() {\n\t\tthis.renderStyles();\n\t\tthis.renderCustomClasses();\n\t\tthis.enqueueFonts();\n\t},\n\n\trunReadyTrigger: function() {\n\t\t_.defer( _.bind( function() {\n\t\t\telementorFrontend.elementsHandler.runReadyTrigger( this.$el );\n\t\t}, this ) );\n\t},\n\n\tgetElementUniqueClass: function() {\n\t\treturn 'elementor-element-' + this.model.get( 'id' );\n\t},\n\n\tonCollectionChanged: function() {\n\t\telementor.setFlagEditorChange( true );\n\t},\n\n\tonSettingsChanged: function( settings ) {\n\t\tif ( this.model.get( 'editSettings' ) !== settings ) {\n\t\t\t// Change flag only if server settings was changed\n\t\t\telementor.setFlagEditorChange( true );\n\t\t}\n\n\t\t// Make sure is correct model\n\t\tif ( settings instanceof BaseSettingsModel ) {\n\t\t\tvar isContentChanged = false;\n\n\t\t\t_.each( settings.changedAttributes(), function( settingValue, settingKey ) {\n\t\t\t\tvar control = settings.getControl( settingKey );\n\n\t\t\t\tif ( ! control ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( control.force_render || ! settings.isStyleControl( settingKey ) && ! settings.isClassControl( settingKey ) ) {\n\t\t\t\t\tisContentChanged = true;\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tif ( ! isContentChanged ) {\n\t\t\t\tthis.renderUI();\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// Re-render the template\n\t\tvar templateType = this.getTemplateType();\n\n\t\tif ( 'js' === templateType ) {\n\t\t\tthis.model.setHtmlCache();\n\t\t\tthis.render();\n\t\t\tthis.model.renderOnLeave = true;\n\t\t} else {\n\t\t\tthis.model.renderRemoteServer();\n\t\t}\n\t},\n\n\tonClickRemove: function( event ) {\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tthis.getRemoveDialog().show();\n\t}\n}, {\n\taddControlStyleRules: function( stylesheet, control, controlsStack, valueCallback, placeholders, replacements ) {\n\t\tvar value = valueCallback( control );\n\n\t\tif ( undefined === value ) {\n\t\t\treturn;\n\t\t}\n\n\t\t_.each( control.selectors, function( cssProperty, selector ) {\n\n\t\t\tvar outputCssProperty,\n\t\t\t\tquery;\n\n\t\t\ttry {\n\t\t\t\toutputCssProperty = cssProperty.replace( /\\{\\{(?:([^.}]+)\\.)?([^}]*)}}/g, function( originalPhrase, controlName, placeholder ) {\n                    var parserControl = control,\n                        valueToInsert = value;\n\n                    if ( controlName ) {\n                        parserControl = _.findWhere( controlsStack, { name: controlName } );\n\n                        valueToInsert = valueCallback( parserControl );\n                    }\n\n                    var parsedValue = elementor.getControlItemView( parserControl.type ).getStyleValue( placeholder.toLowerCase(), valueToInsert );\n\n                    if ( '' === parsedValue ) {\n                        throw '';\n                    }\n\n                    return parsedValue;\n\t\t\t\t} );\n\t\t\t} catch ( e ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( _.isEmpty( outputCssProperty ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n            _.each( placeholders, function( placeholder, index ) {\n                var placeholderPattern = new RegExp( placeholder, 'g' );\n\n                selector = selector.replace( placeholderPattern, replacements[ index ] );\n            } );\n\n\t\t\tif ( control.responsive && 'desktop' !== control.responsive ) {\n\t\t\t\tquery = { max: control.responsive };\n\t\t\t}\n\n\t\t\tstylesheet.addRules( selector, outputCssProperty, query );\n\t\t} );\n\t}\n} );\n\nmodule.exports = BaseElementView;",
    "var BaseElementView = require( 'elementor-views/base-element' ),\n\tElementEmptyView = require( 'elementor-views/element-empty' ),\n\tWidgetView = require( 'elementor-views/widget' ),\n\tColumnView;\n\nColumnView = BaseElementView.extend( {\n\ttemplate: Marionette.TemplateCache.get( '#tmpl-elementor-element-column-content' ),\n\n\telementEvents: {\n\t\t'click > .elementor-element-overlay .elementor-editor-column-settings-list .elementor-editor-element-remove': 'onClickRemove',\n\t\t'click @ui.listTriggers': 'onClickTrigger'\n\t},\n\n\tgetChildView: function( model ) {\n\t\tif ( 'section' === model.get( 'elType' ) ) {\n\t\t\treturn require( 'elementor-views/section' ); // We need to require the section dynamically\n\t\t}\n\n\t\treturn WidgetView;\n\t},\n\n\temptyView: ElementEmptyView,\n\n\tclassName: function() {\n\t\tvar classes = 'elementor-column',\n\t\t\ttype = this.isInner() ? 'inner' : 'top';\n\n\t\tclasses += ' elementor-' + type + '-column';\n\n\t\treturn classes;\n\t},\n\n\tchildViewContainer: '> .elementor-column-wrap > .elementor-widget-wrap',\n\n\ttriggers: {\n\t\t'click > .elementor-element-overlay .elementor-editor-column-settings-list .elementor-editor-element-add': 'click:new',\n\t\t'click > .elementor-element-overlay .elementor-editor-column-settings-list .elementor-editor-element-edit': 'click:edit',\n\t\t'click > .elementor-element-overlay .elementor-editor-column-settings-list .elementor-editor-element-trigger': 'click:edit',\n\t\t'click > .elementor-element-overlay .elementor-editor-column-settings-list .elementor-editor-element-duplicate': 'click:duplicate'\n\t},\n\n\tui: {\n\t\tcolumnTitle: '.column-title',\n\t\tcolumnInner: '> .elementor-column-wrap',\n\t\tlistTriggers: '> .elementor-element-overlay .elementor-editor-element-trigger'\n\t},\n\n\tbehaviors: {\n\t\tSortable: {\n\t\t\tbehaviorClass: require( 'elementor-behaviors/sortable' ),\n\t\t\telChildType: 'widget'\n\t\t},\n\t\tResizable: {\n\t\t\tbehaviorClass: require( 'elementor-behaviors/resizable' )\n\t\t},\n\t\tHandleDuplicate: {\n\t\t\tbehaviorClass: require( 'elementor-behaviors/handle-duplicate' )\n\t\t},\n\t\tHandleEditor: {\n\t\t\tbehaviorClass: require( 'elementor-behaviors/handle-editor' )\n\t\t},\n\t\tHandleEditMode: {\n\t\t\tbehaviorClass: require( 'elementor-behaviors/handle-edit-mode' )\n\t\t},\n\t\tHandleAddMode: {\n\t\t\tbehaviorClass: require( 'elementor-behaviors/duplicate' )\n\t\t},\n\t\tHandleElementsRelation: {\n\t\t\tbehaviorClass: require( 'elementor-behaviors/elements-relation' )\n\t\t}\n\t},\n\n\tinitialize: function() {\n\t\tBaseElementView.prototype.initialize.apply( this, arguments );\n\n\t\tthis.listenTo( elementor.channels.data, 'widget:drag:start', this.onWidgetDragStart );\n\t\tthis.listenTo( elementor.channels.data, 'widget:drag:end', this.onWidgetDragEnd );\n\t},\n\n\tisDroppingAllowed: function( side, event ) {\n\t\tvar elementView = elementor.channels.panelElements.request( 'element:selected' ),\n\t\t\telType = elementView.model.get( 'elType' );\n\n\t\tif ( 'section' === elType ) {\n\t\t\treturn ! this.isInner();\n\t\t}\n\n\t\treturn 'widget' === elType;\n\t},\n\n\tchangeSizeUI: function() {\n\t\tvar columnSize = this.model.getSetting( '_column_size' ),\n\t\t\tinlineSize = this.model.getSetting( '_inline_size' ),\n\t\t\tcolumnSizeTitle = parseFloat( inlineSize || columnSize ).toFixed( 1 ) + '%';\n\n\t\tthis.$el.attr( 'data-col', columnSize );\n\n\t\tthis.ui.columnTitle.html( columnSizeTitle );\n\t},\n\n\tgetSortableOptions: function() {\n\t\treturn {\n\t\t\tconnectWith: '.elementor-widget-wrap',\n\t\t\titems: '> .elementor-element'\n\t\t};\n\t},\n\n\t// Events\n\tonCollectionChanged: function() {\n\t\tBaseElementView.prototype.onCollectionChanged.apply( this, arguments );\n\n\t\tthis.changeChildContainerClasses();\n\t},\n\n\tchangeChildContainerClasses: function() {\n\t\tvar emptyClass = 'elementor-element-empty',\n\t\t\tpopulatedClass = 'elementor-element-populated';\n\n\t\tif ( this.collection.isEmpty() ) {\n\t\t\tthis.ui.columnInner.removeClass( populatedClass ).addClass( emptyClass );\n\t\t} else {\n\t\t\tthis.ui.columnInner.removeClass( emptyClass ).addClass( populatedClass );\n\t\t}\n\t},\n\n\tonRender: function() {\n\t\tvar self = this;\n\n\t\tself.changeChildContainerClasses();\n\t\tself.changeSizeUI();\n\n\t\tself.$el.html5Droppable( {\n\t\t\titems: ' > .elementor-column-wrap > .elementor-widget-wrap > .elementor-element, >.elementor-column-wrap > .elementor-widget-wrap > .elementor-empty-view > .elementor-first-add',\n\t\t\taxis: [ 'vertical' ],\n\t\t\tgroups: [ 'elementor-element' ],\n\t\t\tisDroppingAllowed: _.bind( self.isDroppingAllowed, self ),\n\t\t\tonDragEnter: function() {\n\t\t\t\tself.$el.addClass( 'elementor-dragging-on-child' );\n\t\t\t},\n\t\t\tonDragging: function( side, event ) {\n\t\t\t\tevent.stopPropagation();\n\n\t\t\t\tif ( this.dataset.side !== side ) {\n\t\t\t\t\tBackbone.$( this ).attr( 'data-side', side );\n\t\t\t\t}\n\t\t\t},\n\t\t\tonDragLeave: function() {\n\t\t\t\tself.$el.removeClass( 'elementor-dragging-on-child' );\n\n\t\t\t\tBackbone.$( this ).removeAttr( 'data-side' );\n\t\t\t},\n\t\t\tonDropping: function( side, event ) {\n\t\t\t\tevent.stopPropagation();\n\n\t\t\t\tvar elementView = elementor.channels.panelElements.request( 'element:selected' ),\n\t\t\t\t\tnewIndex = Backbone.$( this ).index();\n\n\t\t\t\tif ( 'bottom' === side ) {\n\t\t\t\t\tnewIndex++;\n\t\t\t\t}\n\n\t\t\t\tvar itemData = {\n\t\t\t\t\tid: elementor.helpers.getUniqueID(),\n\t\t\t\t\telType: elementView.model.get( 'elType' )\n\t\t\t\t};\n\n\t\t\t\tif ( 'widget' === itemData.elType ) {\n\t\t\t\t\titemData.widgetType = elementView.model.get( 'widgetType' );\n\t\t\t\t} else if ( 'section' === itemData.elType ) {\n\t\t\t\t\titemData.elements = [];\n\t\t\t\t\titemData.isInner = true;\n\t\t\t\t} else {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tself.triggerMethod( 'request:add', itemData, { at: newIndex } );\n\t\t\t}\n\t\t} );\n\t},\n\n\tonClickTrigger: function( event ) {\n\t\tevent.preventDefault();\n\n\t\tvar $trigger = this.$( event.currentTarget ),\n\t\t\tisTriggerActive = $trigger.hasClass( 'elementor-active' );\n\n\t\tthis.ui.listTriggers.removeClass( 'elementor-active' );\n\n\t\tif ( ! isTriggerActive ) {\n\t\t\t$trigger.addClass( 'elementor-active' );\n\t\t}\n\t},\n\n\tonWidgetDragStart: function() {\n\t\tthis.$el.addClass( 'elementor-dragging' );\n\t},\n\n\tonWidgetDragEnd: function() {\n\t\tthis.$el.removeClass( 'elementor-dragging' );\n\t}\n} );\n\nmodule.exports = ColumnView;\n",
    "var ControlBaseItemView = require( 'elementor-views/controls/base' ),\n\tControlAnimationItemView;\n\nControlAnimationItemView = ControlBaseItemView.extend( {\n\n\tonReady: function() {\n\t\tthis.ui.select.select2();\n\t}\n} );\n\nmodule.exports = ControlAnimationItemView;\n",
    "var ControlBaseItemView = require( 'elementor-views/controls/base' ),\n\tControlAutocompleteProductsItemView;\n\nControlAutocompleteProductsItemView = ControlBaseItemView.extend( {\n\n\tui: function() {\n\t\tvar ui = ControlBaseItemView.prototype.ui.apply( this, arguments );\n\n\t\tui.searchInput = '.elementor-control-autocomplete-search';\n\t\tui.selectedOptions = '.elementor-control-selected-options';\n\t\tui.selectedPreview = '.elementor-control-selected-preview';\n\t\tui.buttonProductRemove = '.elementor-product-remove';\n\n\t\treturn ui;\n\t},\n\n\tchildEvents: {\n\t\t'click @ui.buttonProductRemove': 'onClickProductRemove',\n\t},\n\n\n\tonShow: function () {\n\n\t\tvar self = this;\n\n\t\tself.ui.selectedPreview.sortable( {\n\t\t    axis: 'y',\n            stop: function( event, ui ) {\n\n\t\t        var $selectBox = $(self.ui.selectedOptions).empty();\n\n                $.map($(this).find('.elementor-product'), function(el) {\n                    $selectBox.append('<option value=\"' + $(el).data('product-id') + '\" selected>p</option>');\n                });\n\n                $selectBox.trigger('change');\n            }\n        } );\n\n\t\tself.insertProducts(this.getControlValue());\n\n\t\tvar p_auto_settings = {\n\t\t\tminChars: 3,\n\t\t\tautoFill: true,\n\t\t\tmax: 20,\n\t\t\tmatchContains: true,\n\t\t\tmustMatch: true,\n\t\t\tdataType: 'json',\n\t\t\textraParams: {\n\t\t\t\tformat: 'json',\n\t\t\t\texcludeIds: self.getSelectedProductsIds(),\n\t\t\t\taction: 'SearchProducts'\n\t\t\t},\n\t\t\tparse: function (data) {\n\t\t\t\tvar parsed = [];\n\t\t\t\tif (data == null)\n\t\t\t\t\treturn true;\n\t\t\t\tfor (var i = 0; i < data.length; i++) {\n\t\t\t\t\tparsed[parsed.length] = {\n\t\t\t\t\t\tdata: data[i],\n\t\t\t\t\t\tvalue: data[i].name,\n\t\t\t\t\t\tresult: data[i].name\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn parsed;\n\t\t\t},\n\t\t\tformatItem: function (item) {\n\t\t\t\treturn '<img src=\"' + item.image + '\" style=\"width: 30px; max-height: 100%; margin-right: 5px; border: 1px dotted #cecece; display: inline-block; vertical-align: middle;\" />(ID: ' + item.id + ') ' + item.name;\n\t\t\t},\n\t\t\tcacheLength: 0,\n\t\t};\n\n\t\t$(this.ui.searchInput).autocomplete(ElementorConfig.ajaxurl, p_auto_settings).result(function (event, data, formatted) {\n\t\t\tif (data == null)\n\t\t\t\treturn false;\n\n\t\t\t$(self.ui.selectedOptions).append('<option value=\"' + data.id + '\" selected>' + '(ID: ' + data.id+ ') ' + data.name + '</option>');\n\t\t\t$(self.ui.selectedPreview).append('<div class=\"elementor-product\" data-product-id=\"' + data.id + '\"><div class=\"elementor-repeater-row-handle-sortable\"><i class=\"fa fa-ellipsis-v\"></i></div><img class=\"elementor-product-image\" src=\"' + data.image + '\" />' +\n\t\t\t\t'<div class=\"elementor-product-info\"><span class=\"elementor-product-reference\">(id: ' + data.id + ')</span>'\n\t\t\t\t+ data.name\n\t\t\t\t+ '<button data-product-id=\"' + data.id + '\" class=\"elementor-product-remove elementor-product-remove2' + data.id + '\"><i class=\"fa fa-remove\"></i></button></div></div>');\n\n\t\t\t$(self.ui.searchInput).setOptions({\n\t\t\t\textraParams: {\n\t\t\t\t\tformat: 'json',\n\t\t\t\t\texcludeIds : self.getSelectedProductsIds(),\n\t\t\t\t\taction: 'SearchProducts'\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$(self.ui.selectedOptions).trigger('change');\n\t\t\t$(this).val('');\n\n\t\t});\n\n\t},\n\n\tonClickProductRemove: function(domEvent) {\n\n\t\tvar $product = $(domEvent.currentTarget);\n\t\tvar productId = $product.data('product-id');\n\n\t\t$product.parents('.elementor-product').first().remove();\n\n\t\t$(this.ui.selectedOptions).find('option[value=' + productId +' ]').remove();\n\n\t\t$(this.ui.searchInput).setOptions({\n\t\t\textraParams: {\n\t\t\t\tformat: 'json',\n\t\t\t\texcludeIds : this.getSelectedProductsIds(),\n\t\t\t\taction: 'SearchProducts'\n\t\t\t}\n\t\t});\n\n\t\t$(this.ui.selectedOptions).trigger('change');\n\n\n\t},\n\n\tgetSelectedProductsIds: function() {\n\n\t\tvar ids = $(this.ui.selectedOptions).val();\n\n\t\tif (_.isUndefined(ids)|| ids == null) {\n\t\t\treturn '';\n\t\t}\n\t\telse{\n\t\t\treturn ids.toString();\n\t\t}\n\n\t},\n\n\tonBeforeDestroy: function() {\n\n\t\t$(this.ui.searchInput).unautocomplete();\n\n\t},\n\n\tinsertProducts: function(ids) {\n\n\t\tif (_.isUndefined(ids)|| ids == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar products = null;\n\t\tvar self = this;\n\n\t\telementor.ajax.send( 'GetProducts', {\n\t\t\tdata: {\n\t\t\t\tids: ids.toString(),\n\t\t\t},\n\t\t\tsuccess: function(data) {\n\t\t\t\t_.each( data, function( data ) {\n\t\t\t\t\tdata.id = data.id_product;\n\t\t\t\t\t$(self.ui.selectedPreview).append('<div class=\"elementor-product\" data-product-id=\"' + data.id + '\"><div class=\"elementor-repeater-row-handle-sortable\"><i class=\"fa fa-ellipsis-v\"></i></div><img class=\"elementor-product-image\" src=\"' + data.image + '\" />' +\n\t\t\t\t\t\t'<div class=\"elementor-product-info\"><span class=\"elementor-product-reference\">(id: ' + data.id + ')</span>'\n\t\t\t\t\t\t+ data.name\n\t\t\t\t\t\t+ '<button data-product-id=\"' + data.id + '\" class=\"elementor-product-remove\"><i class=\"fa fa-remove\"></i></button></div></div>');\n\t\t\t\t});\n\t\t\t}\n\t\t} );\n\t\treturn products;\n\t}\n\n} );\n\nmodule.exports = ControlAutocompleteProductsItemView;\n\n\n",
    "var ControlBaseItemView = require( 'elementor-views/controls/base' ),\n\tControlBaseMultipleItemView;\n\nControlBaseMultipleItemView = ControlBaseItemView.extend( {\n\n\tapplySavedValue: function() {\n\t\tvar values = this.getControlValue(),\n\t\t\t$inputs = this.$( '[data-setting]' ),\n\t\t\tself = this;\n\n\t\t_.each( values, function( value, key ) {\n\t\t\tvar $input = $inputs.filter( function() {\n\t\t\t\treturn key === this.dataset.setting;\n\t\t\t} );\n\n\t\t\tself.setInputValue( $input, value );\n\t\t} );\n\t},\n\n\tgetControlValue: function( key ) {\n\t\tvar values = this.elementSettingsModel.get( this.model.get( 'name' ) );\n\n\t\tif ( ! Backbone.$.isPlainObject( values ) ) {\n\t\t\treturn {};\n\t\t}\n\n\t\tif ( key ) {\n\t\t\treturn values[ key ] || '';\n\t\t}\n\n\t\treturn elementor.helpers.cloneObject( values );\n\t},\n\n\tsetValue: function( key, value ) {\n\t\tvar values = this.getControlValue();\n\n\t\tif ( 'object' === typeof key ) {\n\t\t\t_.each( key, function( internalValue, internalKey ) {\n\t\t\t\tvalues[ internalKey ] = internalValue;\n\t\t\t} );\n\t\t} else {\n\t\t\tvalues[ key ] = value;\n\t\t}\n\n\t\tthis.setSettingsModel( values );\n\t},\n\n\tupdateElementModel: function( event ) {\n\t\tvar inputValue = this.getInputValue( event.currentTarget ),\n\t\t\tkey = event.currentTarget.dataset.setting;\n\n\t\tthis.setValue( key, inputValue );\n\t}\n}, {\n\t// Static methods\n\treplaceStyleValues: function( cssProperty, controlValue ) {\n\t\tif ( ! _.isObject( controlValue ) ) {\n\t\t\treturn ''; // invalid\n\t\t}\n\n\t\t// Trying to retrieve whole the related properties\n\t\t// according to the string matches.\n\t\t// When one of the properties is empty, aborting\n\t\t// the action and returning an empty string.\n\t\ttry {\n\t\t\treturn cssProperty.replace( /\\{\\{([A-Z]+)}}/g, function( fullMatch, pureMatch ) {\n\t\t\t\tvar value = controlValue[ pureMatch.toLowerCase() ];\n\n\t\t\t\tif ( '' === value ) {\n\t\t\t\t\tthrow '';\n\t\t\t\t}\n\n\t\t\t\treturn value;\n\t\t\t} );\n\t\t} catch ( exception ) {\n\t\t\treturn '';\n\t\t}\n\t},\n\tgetStyleValue: function( placeholder, controlValue ) {\n\t\tif ( ! _.isObject( controlValue ) ) {\n\t\t\treturn ''; // invalid\n\t\t}\n\n\t\treturn controlValue[ placeholder ];\n\t}\n} );\n\nmodule.exports = ControlBaseMultipleItemView;\n",
    "var ControlBaseMultipleItemView = require( 'elementor-views/controls/base-multiple' ),\n\tControlBaseUnitsItemView;\n\nControlBaseUnitsItemView = ControlBaseMultipleItemView.extend( {\n\n\tgetCurrentRange: function() {\n\t\treturn this.getUnitRange( this.getControlValue( 'unit' ) );\n\t},\n\n\tgetUnitRange: function( unit ) {\n\t\tvar ranges = this.model.get( 'range' );\n\n\t\tif ( ! ranges || ! ranges[ unit ] ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn ranges[ unit ];\n\t}\n} );\n\nmodule.exports = ControlBaseUnitsItemView;\n",
    "var ControlBaseItemView;\n\nControlBaseItemView = Marionette.CompositeView.extend( {\n\tui: function() {\n\t\treturn {\n\t\t\tinput: 'input[data-setting][type!=\"checkbox\"][type!=\"radio\"]',\n\t\t\tcheckbox: 'input[data-setting][type=\"checkbox\"]',\n\t\t\tradio: 'input[data-setting][type=\"radio\"]',\n\t\t\tselect: 'select[data-setting]',\n\t\t\ttextarea: 'textarea[data-setting]',\n\t\t\tcontrolTitle: '.elementor-control-title',\n\t\t\tresponsiveSwitchers: '.elementor-responsive-switcher',\n\t\t\tswitcherDesktop: '.elementor-responsive-switcher-desktop'\n\t\t};\n\t},\n\n\tclassName: function() {\n\t\t// TODO: Any better classes for that?\n\t\tvar classes = 'elementor-control elementor-control-' + this.model.get( 'name' ) + ' elementor-control-type-' + this.model.get( 'type' ),\n\t\t\tmodelClasses = this.model.get( 'classes' ),\n\t\t\tresponsiveControl = this.model.get( 'responsive' );\n\n\t\tif ( ! _.isEmpty( modelClasses ) ) {\n\t\t\tclasses += ' ' + modelClasses;\n\t\t}\n\n\t\tif ( ! _.isEmpty( this.model.get( 'section' ) ) ) {\n\t\t\tclasses += ' elementor-control-under-section';\n\t\t}\n\n\t\tif ( ! _.isEmpty( responsiveControl ) ) {\n\t\t\tclasses += ' elementor-control-responsive-' + responsiveControl;\n\t\t}\n\n\t\treturn classes;\n\t},\n\n\tgetTemplate: function() {\n\t\treturn Marionette.TemplateCache.get( '#tmpl-elementor-control-' + this.model.get( 'type' ) + '-content' );\n\t},\n\n\ttemplateHelpers: function() {\n\t\tvar controlData = {\n\t\t\tcontrolValue: this.getControlValue(),\n\t\t\t_cid: this.model.cid\n\t\t};\n\n\t\treturn {\n\t\t\tdata: _.extend( {}, this.model.toJSON(), controlData )\n\t\t};\n\t},\n\n\tbaseEvents: {\n\t\t'input @ui.input': 'onBaseInputChange',\n\t\t'change @ui.checkbox': 'onBaseInputChange',\n\t\t'change @ui.radio': 'onBaseInputChange',\n\t\t'input @ui.textarea': 'onBaseInputChange',\n\t\t'change @ui.select': 'onBaseInputChange',\n\t\t'click @ui.switcherDesktop': 'onSwitcherDesktopClick',\n\t\t'click @ui.responsiveSwitchers': 'onSwitcherClick'\n\t},\n\n\tchildEvents: {},\n\n\tevents: function() {\n\t\treturn _.extend( {}, this.baseEvents, this.childEvents );\n\t},\n\n\tinitialize: function( options ) {\n\t\tthis.elementSettingsModel = options.elementSettingsModel;\n\n\t\tvar controlType = this.model.get( 'type' ),\n\t\t\tcontrolSettings = Backbone.$.extend( true, {}, elementor.config.controls[ controlType ], this.model.attributes );\n\n\t\tthis.model.set( controlSettings );\n\n\t\tthis.listenTo( this.elementSettingsModel, 'change', this.toggleControlVisibility );\n\t\tthis.listenTo( this.elementSettingsModel, 'control:switch:tab', this.onControlSwitchTab );\n\t},\n\n\tgetControlValue: function() {\n\t\treturn this.elementSettingsModel.get( this.model.get( 'name' ) );\n\t},\n\n\tisValidValue: function( value ) {\n\t\treturn true;\n\t},\n\n\tsetValue: function( value ) {\n\t\tthis.setSettingsModel( value );\n\t},\n\n\tsetSettingsModel: function( value ) {\n\t\tif ( true !== this.isValidValue( value ) ) {\n\t\t\tthis.triggerMethod( 'settings:error' );\n\t\t\treturn;\n\t\t}\n\n\t\tthis.elementSettingsModel.set( this.model.get( 'name' ), value );\n\n\t\tthis.triggerMethod( 'settings:change' );\n\t},\n\n\tapplySavedValue: function() {\n\t\tthis.setInputValue( '[data-setting=\"' + this.model.get( 'name' ) + '\"]', this.getControlValue() );\n\t},\n\n\tgetEditSettings: function( setting ) {\n\t\tvar settings = this.getOption( 'elementEditSettings' ).toJSON();\n\n\t\tif ( setting ) {\n\t\t\treturn settings[ setting ];\n\t\t}\n\n\t\treturn settings;\n\t},\n\n\tsetEditSetting: function( settingKey, settingValue ) {\n\t\tvar settings = this.getOption( 'elementEditSettings' );\n\n\t\tsettings.set( settingKey, settingValue );\n\t},\n\n\tgetInputValue: function( input ) {\n\t\tvar $input = this.$( input ),\n\t\t\tinputValue = $input.val(),\n\t\t\tinputType = $input.attr( 'type' );\n\n\t\tif ( -1 !== [ 'radio', 'checkbox' ].indexOf( inputType ) ) {\n\t\t\treturn $input.prop( 'checked' ) ? inputValue : '';\n\t\t}\n\n\t\treturn inputValue;\n\t},\n\n\t// This method used inside of repeater\n\tgetFieldTitleValue: function() {\n\t\treturn this.getControlValue();\n\t},\n\n\tsetInputValue: function( input, value ) {\n\t\tvar $input = this.$( input ),\n\t\t\tinputType = $input.attr( 'type' );\n\n\t\tif ( 'checkbox' === inputType ) {\n\t\t\t$input.prop( 'checked', !! value );\n\t\t} else if ( 'radio' === inputType ) {\n\t\t\t$input.filter( '[value=\"' + value + '\"]' ).prop( 'checked', true );\n\t\t} else if ( 'select2' === inputType ) {\n\t\t\t// don't touch\n\t\t} else {\n\t\t\t$input.val( value );\n\t\t}\n\t},\n\n\tonSettingsError: function() {\n\t\tthis.$el.addClass( 'elementor-error' );\n\t},\n\n\tonSettingsChange: function() {\n\t\tthis.$el.removeClass( 'elementor-error' );\n\t},\n\n\tonRender: function() {\n\t\tthis.applySavedValue();\n\n\t\tvar layoutType = this.model.get( 'label_block' ) ? 'block' : 'inline',\n\t\t\tshowLabel = this.model.get( 'show_label' ),\n\t\t\telClasses = 'elementor-label-' + layoutType;\n\n\t\telClasses += ' elementor-control-separator-' + this.model.get( 'separator' );\n\n\t\tif ( ! showLabel ) {\n\t\t\telClasses += ' elementor-control-hidden-label';\n\t\t}\n\n\t\tthis.$el.addClass( elClasses );\n\t\tthis.renderResponsiveSwitchers();\n\n\t\tthis.triggerMethod( 'ready' );\n\t\tthis.toggleControlVisibility();\n\t},\n\n\tonBaseInputChange: function( event ) {\n\t\tthis.updateElementModel( event );\n\n\t\tthis.triggerMethod( 'input:change', event );\n\t},\n\n\tonSwitcherClick: function( event ) {\n\t\tvar device = Backbone.$( event.currentTarget ).data( 'device' );\n\n\t\telementor.changeDeviceMode( device );\n\t},\n\n\tonSwitcherDesktopClick: function() {\n\t\telementor.getPanelView().getCurrentPageView().$el.toggleClass( 'elementor-responsive-switchers-open' );\n\t},\n\n\trenderResponsiveSwitchers: function() {\n\t\tif ( _.isEmpty( this.model.get( 'responsive' ) ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar templateHtml = Backbone.$( '#tmpl-elementor-control-responsive-switchers' ).html();\n\n\t\tthis.ui.controlTitle.after( templateHtml );\n\t},\n\n\ttoggleControlVisibility: function() {\n\t\tvar isVisible = elementor.helpers.isControlVisible( this.model, this.elementSettingsModel );\n\n\t\tthis.$el.toggleClass( 'elementor-hidden-control', ! isVisible );\n\n\t\telementor.channels.data.trigger( 'scrollbar:update' );\n\t},\n\n\tonControlSwitchTab: function( activeTab ) {\n\t\tthis.$el.toggleClass( 'elementor-active-tab', ( activeTab === this.model.get( 'tab' ) ) );\n\n\t\telementor.channels.data.trigger( 'scrollbar:update' );\n\t},\n\n\tonReady: function() {},\n\n\tupdateElementModel: function( event ) {\n\t\tthis.setValue( this.getInputValue( event.currentTarget ) );\n\t}\n}, {\n\t// Static methods\n\treplaceStyleValues: function( cssProperty, controlValue ) {\n\t\tvar replaceArray = { '\\{\\{VALUE\\}\\}': controlValue };\n\n\t\treturn elementor.helpers.stringReplaceAll( cssProperty, replaceArray );\n\t},\n\tgetStyleValue: function( placeholder, controlValue ) {\n\t\treturn controlValue;\n\t}\n} );\n\nmodule.exports = ControlBaseItemView;\n",
    "var ControlMultipleBaseItemView = require( 'elementor-views/controls/base-multiple' ),\n\tControlBoxShadowItemView;\n\nControlBoxShadowItemView = ControlMultipleBaseItemView.extend( {\n\tui: function() {\n\t\tvar ui = ControlMultipleBaseItemView.prototype.ui.apply( this, arguments );\n\n\t\tui.sliders = '.elementor-slider';\n\t\tui.colors = '.elementor-box-shadow-color-picker';\n\n\t\treturn ui;\n\t},\n\n\tchildEvents: {\n\t\t'slide @ui.sliders': 'onSlideChange'\n\t},\n\n\tinitSliders: function() {\n\t\tvar value = this.getControlValue();\n\n\t\tthis.ui.sliders.each( function() {\n\t\t\tvar $slider = Backbone.$( this ),\n\t\t\t\t$input = $slider.next( '.elementor-slider-input' ).find( 'input' );\n\n\t\t\t$slider.slider( {\n\t\t\t\tvalue: value[ this.dataset.input ],\n\t\t\t\tmin: +$input.attr( 'min' ),\n\t\t\t\tmax: +$input.attr( 'max' )\n\t\t\t} );\n\t\t} );\n\t},\n\n\tinitColors: function() {\n\t\tvar self = this;\n\n\t\tthis.ui.colors.wpColorPicker( {\n\t\t\tchange: function() {\n\t\t\t\tvar $this = Backbone.$( this ),\n\t\t\t\t\ttype = $this.data( 'setting' );\n\n\t\t\t\tself.setValue( type, $this.wpColorPicker( 'color' ) );\n\t\t\t},\n\n\t\t\tclear: function() {\n\t\t\t\tself.setValue( this.dataset.setting, '' );\n\t\t\t},\n\n\t\t\twidth: 251\n\t\t} );\n\t},\n\n\tonInputChange: function( event ) {\n\t\tvar type = event.currentTarget.dataset.setting,\n\t\t\t$slider = this.ui.sliders.filter( '[data-input=\"' + type + '\"]' );\n\n\t\t$slider.slider( 'value', this.getControlValue( type ) );\n\t},\n\n\tonReady: function() {\n\t\tthis.initSliders();\n\t\tthis.initColors();\n\t},\n\n\tonSlideChange: function( event, ui ) {\n\t\tvar type = event.currentTarget.dataset.input,\n\t\t\t$input = this.ui.input.filter( '[data-setting=\"' + type + '\"]' );\n\n\t\t$input.val( ui.value );\n\t\tthis.setValue( type, ui.value );\n\t},\n\n\tonBeforeDestroy: function() {\n\t\tthis.ui.colors.each( function() {\n\t\t\tvar $color = Backbone.$( this );\n\n\t\t\tif ( $color.wpColorPicker( 'instance' ) ) {\n\t\t\t\t$color.wpColorPicker( 'close' );\n\t\t\t}\n\t\t} );\n\n\t\tthis.$el.remove();\n\t}\n} );\n\nmodule.exports = ControlBoxShadowItemView;\n",
    "var ControlBaseItemView = require( 'elementor-views/controls/base' ),\n\tControlChooseItemView;\n\nControlChooseItemView = ControlBaseItemView.extend( {\n\tui: function() {\n\t\tvar ui = ControlBaseItemView.prototype.ui.apply( this, arguments );\n\n\t\tui.inputs = '[type=\"radio\"]';\n\n\t\treturn ui;\n\t},\n\n\tchildEvents: {\n\t\t'mousedown label': 'onMouseDownLabel',\n\t\t'click @ui.inputs': 'onClickInput',\n\t\t'change @ui.inputs': 'updateElementModel'\n\t},\n\n\tonMouseDownLabel: function( event ) {\n\t\tvar $clickedLabel = this.$( event.currentTarget ),\n\t\t\t$selectedInput = this.$( '#' + $clickedLabel.attr( 'for' ) );\n\n\t\t$selectedInput.data( 'checked', $selectedInput.prop( 'checked' ) );\n\t},\n\n\tonClickInput: function( event ) {\n\t\tif ( ! this.model.get( 'toggle' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar $selectedInput = this.$( event.currentTarget );\n\n\t\tif ( $selectedInput.data( 'checked' ) ) {\n\t\t\t$selectedInput.prop( 'checked', false ).trigger( 'change' );\n\t\t}\n\t},\n\n\tonRender: function() {\n\t\tControlBaseItemView.prototype.onRender.apply( this, arguments );\n\n\t\tvar currentValue = this.getControlValue();\n\n\t\tif ( currentValue ) {\n\t\t\tthis.ui.inputs.filter( '[value=\"' + currentValue + '\"]' ).prop( 'checked', true );\n\t\t} else if ( ! this.model.get( 'toggle' ) ) {\n\t\t\tthis.ui.inputs.first().prop( 'checked', true ).trigger( 'change' );\n\t\t}\n\t}\n} );\n\nmodule.exports = ControlChooseItemView;\n",
    "var ControlBaseItemView = require( 'elementor-views/controls/base' ),\n\tControlColorItemView;\n\nControlColorItemView = ControlBaseItemView.extend( {\n\tui: function() {\n\t\tvar ui = ControlBaseItemView.prototype.ui.apply( this, arguments );\n\n\t\tui.picker = '.color-picker-hex';\n\n\t\treturn ui;\n\t},\n\n\tonReady: function() {\n\t\tthis.ui.picker.wpColorPicker( {\n\t\t\tchange: _.bind( function() {\n\t\t\t\tthis.setValue( this.ui.picker.wpColorPicker( 'color' ) );\n\t\t\t}, this ),\n\n\t\t\tclear: _.bind( function() {\n\t\t\t\tthis.setValue( '' );\n\t\t\t}, this ),\n\n\t\t\twidth: 251\n\t\t} ).wpColorPicker( 'instance' )\n\t\t\t.wrap.find( '> .wp-picker-input-wrap > .wp-color-picker' )\n\t\t\t.removeAttr( 'maxlength' );\n\t},\n\n\tonBeforeDestroy: function() {\n\t\tif ( this.ui.picker.wpColorPicker( 'instance' ) ) {\n\t\t\tthis.ui.picker.wpColorPicker( 'close' );\n\t\t}\n\t\tthis.$el.remove();\n\t}\n} );\n\nmodule.exports = ControlColorItemView;\n",
    "var ControlBaseUnitsItemView = require( 'elementor-views/controls/base-units' ),\n\tControlDimensionsItemView;\n\nControlDimensionsItemView = ControlBaseUnitsItemView.extend( {\n\tui: function() {\n\t\tvar ui = ControlBaseUnitsItemView.prototype.ui.apply( this, arguments );\n\n\t\tui.controls = '.elementor-control-dimension > input:enabled';\n\t\tui.link = 'button.elementor-link-dimensions';\n\n\t\treturn ui;\n\t},\n\n\tchildEvents: {\n\t\t'click @ui.link': 'onLinkDimensionsClicked'\n\t},\n\n\tdefaultDimensionValue: 0,\n\n\tinitialize: function() {\n\t\tControlBaseUnitsItemView.prototype.initialize.apply( this, arguments );\n\n\t\t// TODO: Need to be in helpers, and not in variable\n\t\tthis.model.set( 'allowed_dimensions', this.filterDimensions( this.model.get( 'allowed_dimensions' ) ) );\n\t},\n\n\tgetPossibleDimensions: function() {\n\t\treturn [\n\t\t\t'top',\n\t\t\t'right',\n\t\t\t'bottom',\n\t\t\t'left'\n\t\t];\n\t},\n\n\tfilterDimensions: function( filter ) {\n\t\tfilter = filter || 'all';\n\n\t\tvar dimensions = this.getPossibleDimensions();\n\n\t\tif ( 'all' === filter ) {\n\t\t\treturn dimensions;\n\t\t}\n\n\t\tif ( ! _.isArray( filter ) ) {\n\t\t\tif ( 'horizontal' === filter ) {\n\t\t\t\tfilter = [ 'right', 'left' ];\n\t\t\t} else if ( 'vertical' === filter ) {\n\t\t\t\tfilter = [ 'top', 'bottom' ];\n\t\t\t}\n\t\t}\n\n\t\treturn filter;\n\t},\n\n\tonReady: function() {\n\t\tvar currentValue = this.getControlValue();\n\n\t\tif ( ! this.isLinkedDimensions() ) {\n\t\t\tthis.ui.link.addClass( 'unlinked' );\n\n\t\t\tthis.ui.controls.each( _.bind( function( index, element ) {\n\t\t\t\tvar value = currentValue[ element.dataset.setting ];\n\n\t\t\t\tif ( _.isEmpty( value ) ) {\n\t\t\t\t\tvalue = this.defaultDimensionValue;\n\t\t\t\t}\n\n\t\t\t\tthis.$( element ).val( value );\n\t\t\t}, this ) );\n\t\t}\n\n\t\tthis.fillEmptyDimensions();\n\t},\n\n\tupdateDimensionsValue: function() {\n\t\tvar currentValue = {},\n\t\t\tdimensions = this.getPossibleDimensions(),\n\t\t\t$controls = this.ui.controls;\n\n\t\tdimensions.forEach( _.bind( function( dimension ) {\n\t\t\tvar $element = $controls.filter( '[data-setting=\"' + dimension + '\"]' );\n\n\t\t\tcurrentValue[ dimension ] = $element.length ? $element.val() : this.defaultDimensionValue;\n\t\t}, this ) );\n\n\t\tthis.setValue( currentValue );\n\t},\n\n\tfillEmptyDimensions: function() {\n\t\tvar dimensions = this.getPossibleDimensions(),\n\t\t\tallowedDimensions = this.model.get( 'allowed_dimensions' ),\n\t\t\t$controls = this.ui.controls;\n\n\t\tif ( this.isLinkedDimensions() ) {\n\t\t\treturn;\n\t\t}\n\n\t\tdimensions.forEach( _.bind( function( dimension ) {\n\t\t\tvar $element = $controls.filter( '[data-setting=\"' + dimension + '\"]' ),\n\t\t\t\tisAllowedDimension = -1 !== _.indexOf( allowedDimensions, dimension );\n\n\t\t\tif ( isAllowedDimension && $element.length && _.isEmpty( $element.val() ) ) {\n\t\t\t\t$element.val( this.defaultDimensionValue );\n\t\t\t}\n\n\t\t}, this ) );\n\t},\n\n\tupdateDimensions: function() {\n\t\tthis.fillEmptyDimensions();\n\t\tthis.updateDimensionsValue();\n\t},\n\n\tresetDimensions: function() {\n\t\tthis.ui.controls.val( '' );\n\n\t\tthis.updateDimensionsValue();\n\t},\n\n\tonInputChange: function( event ) {\n\t\tvar inputSetting = event.target.dataset.setting;\n\n\t\tif ( 'unit' === inputSetting ) {\n\t\t\tthis.resetDimensions();\n\t\t}\n\n\t\tif ( ! _.contains( this.getPossibleDimensions(), inputSetting ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this.isLinkedDimensions() ) {\n\t\t\tvar $thisControl = this.$( event.target );\n\n\t\t\tthis.ui.controls.val( $thisControl.val() );\n\t\t}\n\n\t\tthis.updateDimensions();\n\t},\n\n\tonLinkDimensionsClicked: function( event ) {\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tthis.ui.link.toggleClass( 'unlinked' );\n\n\t\tthis.setValue( 'isLinked', ! this.ui.link.hasClass( 'unlinked' ) );\n\n\t\tif ( this.isLinkedDimensions() ) {\n\t\t\t// Set all controls value from the first control.\n\t\t\tthis.ui.controls.val( this.ui.controls.eq( 0 ).val() );\n\t\t}\n\n\t\tthis.updateDimensions();\n\t},\n\n\tisLinkedDimensions: function() {\n\t\treturn this.getControlValue( 'isLinked' );\n\t}\n} );\n\nmodule.exports = ControlDimensionsItemView;\n",
    "var ControlBaseItemView = require( 'elementor-views/controls/base' ),\n\tControlFontItemView;\n\nControlFontItemView = ControlBaseItemView.extend( {\n\tonReady: function() {\n\t\tthis.ui.select.select2( {\n\t\t\tdir: elementor.config.is_rtl ? 'rtl' : 'ltr'\n\t\t} );\n\t},\n\n\ttemplateHelpers: function() {\n\t\tvar helpers = ControlBaseItemView.prototype.templateHelpers.apply( this, arguments );\n\n\t\thelpers.getFontsByGroups = _.bind( function( groups ) {\n\t\t\tvar fonts = this.model.get( 'fonts' ),\n\t\t\t\tfilteredFonts = {};\n\n\t\t\t_.each( fonts, function( fontType, fontName ) {\n\t\t\t\tif ( _.isArray( groups ) && _.contains( groups, fontType ) || fontType === groups ) {\n\t\t\t\t\tfilteredFonts[ fontName ] = fontType;\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\treturn filteredFonts;\n\t\t}, this );\n\n\t\treturn helpers;\n\t}\n} );\n\nmodule.exports = ControlFontItemView;\n",
    "var ControlBaseItemView = require( 'elementor-views/controls/base' ),\n\tControlMediaItemView;\n\nControlMediaItemView = ControlBaseItemView.extend( {\n\tui: function() {\n\t\tvar ui = ControlBaseItemView.prototype.ui.apply( this, arguments );\n\n\t\tui.addImages = '.elementor-control-gallery-add';\n\t\tui.clearGallery = '.elementor-control-gallery-clear';\n\t\tui.galleryThumbnails = '.elementor-control-gallery-thumbnails';\n\n\t\treturn ui;\n\t},\n\n\tchildEvents: {\n\t\t'click @ui.addImages': 'onAddImagesClick',\n\t\t'click @ui.clearGallery': 'onClearGalleryClick',\n\t\t'click @ui.galleryThumbnails': 'onGalleryThumbnailsClick'\n\t},\n\n\tonReady: function() {\n\t\tvar hasImages = this.hasImages();\n\n\t\tthis.$el\n\t\t    .toggleClass( 'elementor-gallery-has-images', hasImages )\n\t\t    .toggleClass( 'elementor-gallery-empty', ! hasImages );\n\n\t\tthis.initRemoveDialog();\n\t},\n\n\thasImages: function() {\n\t\treturn !! this.getControlValue().length;\n\t},\n\n\topenFrame: function( action ) {\n\t\tthis.initFrame( action );\n\n\t\tthis.frame.open();\n\t},\n\n\tinitFrame: function( action ) {\n\t\tvar frameStates = {\n\t\t\tcreate: 'gallery',\n\t\t\tadd: 'gallery-library',\n\t\t\tedit: 'gallery-edit'\n\t\t};\n\n\t\tvar options = {\n\t\t\tframe:  'post',\n\t\t\tmultiple: true,\n\t\t\tstate: frameStates[ action ],\n\t\t\tbutton: {\n\t\t\t\ttext: elementor.translate( 'insert_media' )\n\t\t\t}\n\t\t};\n\n\t\tif ( this.hasImages() ) {\n\t\t\toptions.selection = this.fetchSelection();\n\t\t}\n\n\t\tthis.frame = wp.media( options );\n\n\t\t// When a file is selected, run a callback.\n\t\tthis.frame.on( {\n\t\t\t'update': this.select,\n\t\t\t'menu:render:default': this.menuRender,\n\t\t\t'content:render:browse': this.gallerySettings\n\t\t}, this );\n\t},\n\n\tmenuRender: function( view ) {\n\t\tview.unset( 'insert' );\n\t\tview.unset( 'featured-image' );\n\t},\n\n\tgallerySettings: function( browser ) {\n\t\tbrowser.sidebar.on( 'ready', function() {\n\t\t\tbrowser.sidebar.unset( 'gallery' );\n\t\t} );\n\t},\n\n\tfetchSelection: function() {\n\t\tvar attachments = wp.media.query( {\n\t\t\torderby: 'post__in',\n\t\t\torder: 'ASC',\n\t\t\ttype: 'image',\n\t\t\tperPage: -1,\n\t\t\tpost__in: _.pluck( this.getControlValue(), 'id' )\n\t\t} );\n\n\t\treturn new wp.media.model.Selection( attachments.models, {\n\t\t\tprops: attachments.props.toJSON(),\n\t\t\tmultiple: true\n\t\t} );\n\t},\n\n\t/**\n\t * Callback handler for when an attachment is selected in the media modal.\n\t * Gets the selected image information, and sets it within the control.\n\t */\n\tselect: function( selection ) {\n\t\tvar images = [];\n\n\t\tselection.each( function( image ) {\n\t\t\timages.push( {\n\t\t\t\tid: image.get( 'id' ),\n\t\t\t\turl: image.get( 'url' )\n\t\t\t} );\n\t\t} );\n\n\t\tthis.setValue( images );\n\n\t\tthis.render();\n\t},\n\n\tonBeforeDestroy: function() {\n\t\tif ( this.frame ) {\n\t\t\tthis.frame.off();\n\t\t}\n\n\t\tthis.$el.remove();\n\t},\n\n\tresetGallery: function() {\n\t\tthis.setValue( '' );\n\n\t\tthis.render();\n\t},\n\n\tinitRemoveDialog: function() {\n\t\tvar removeDialog;\n\n\t\tthis.getRemoveDialog = function() {\n\t\t\tif ( ! removeDialog ) {\n\t\t\t\tremoveDialog = elementor.dialogsManager.createWidget( 'confirm', {\n\t\t\t\t\tmessage: elementor.translate( 'dialog_confirm_gallery_delete' ),\n\t\t\t\t\theaderMessage: elementor.translate( 'delete_gallery' ),\n\t\t\t\t\tstrings: {\n\t\t\t\t\t\tconfirm: elementor.translate( 'delete' ),\n\t\t\t\t\t\tcancel: elementor.translate( 'cancel' )\n\t\t\t\t\t},\n\t\t\t\t\tdefaultOption: 'confirm',\n\t\t\t\t\tonConfirm: _.bind( this.resetGallery, this )\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\treturn removeDialog;\n\t\t};\n\t},\n\n\tonAddImagesClick: function() {\n\t\tthis.openFrame( this.hasImages() ? 'add' : 'create' );\n\t},\n\n\tonClearGalleryClick: function() {\n\t\tthis.getRemoveDialog().show();\n\t},\n\n\tonGalleryThumbnailsClick: function() {\n\t\tthis.openFrame( 'edit' );\n\t}\n} );\n\nmodule.exports = ControlMediaItemView;\n",
    "var ControlBaseItemView = require( 'elementor-views/controls/base' ),\n\tControlIconItemView;\n\nControlIconItemView = ControlBaseItemView.extend( {\n\n\tinitialize: function() {\n\t\tControlBaseItemView.prototype.initialize.apply( this, arguments );\n\n\t\tthis.filterIcons();\n\t},\n\n\tfilterIcons: function() {\n\t\tvar icons = this.model.get( 'icons' ),\n\t\t\tinclude = this.model.get( 'include' ),\n\t\t\texclude = this.model.get( 'exclude' );\n\n\t\tif ( include ) {\n\t\t\tvar filteredIcons = {};\n\n\t\t\t_.each( include, function( iconKey ) {\n\t\t\t\tfilteredIcons[ iconKey ] = icons[ iconKey ];\n\t\t\t} );\n\n\t\t\tthis.model.set( 'icons', filteredIcons );\n\t\t\treturn;\n\t\t}\n\n\t\tif ( exclude ) {\n\t\t\t_.each( exclude, function( iconKey ) {\n\t\t\t\tdelete icons[ iconKey ];\n\t\t\t} );\n\t\t}\n\t},\n\n\ticonsList: function( icon ) {\n\t\tif ( ! icon.id ) {\n\t\t\treturn icon.text;\n\t\t}\n\n\t\treturn Backbone.$(\n\t\t\t'<span><i class=\"' + icon.id + '\"></i> ' + icon.text + '</span>'\n\t\t);\n\t},\n\n\tgetFieldTitleValue: function() {\n\t\tvar controlValue = this.getControlValue();\n\n\t\treturn controlValue.replace( /^fa fa-/, '' ).replace( '-', ' ' );\n\t},\n\n\tonReady: function() {\n\t\tthis.ui.select.select2( {\n\t\t\tallowClear: true,\n\t\t\ttemplateResult: _.bind( this.iconsList, this ),\n\t\t\ttemplateSelection: _.bind( this.iconsList, this )\n\t\t} );\n\t}\n} );\n\nmodule.exports = ControlIconItemView;\n",
    "var ControlMultipleBaseItemView = require( 'elementor-views/controls/base-multiple' ),\n\tControlImageDimensionsItemView;\n\nControlImageDimensionsItemView = ControlMultipleBaseItemView.extend( {\n\tui: function() {\n\t\treturn {\n\t\t\tinputWidth: 'input[data-setting=\"width\"]',\n\t\t\tinputHeight: 'input[data-setting=\"height\"]',\n\n\t\t\tbtnApply: 'button.elementor-image-dimensions-apply-button'\n\t\t};\n\t},\n\n\t// Override the base events\n\tbaseEvents: {\n\t\t'click @ui.btnApply': 'onApplyClicked'\n\t},\n\n\tonApplyClicked: function( event ) {\n\t\tevent.preventDefault();\n\n\t\tthis.setValue( {\n\t\t\twidth: this.ui.inputWidth.val(),\n\t\t\theight: this.ui.inputHeight.val()\n\t\t} );\n\t}\n} );\n\nmodule.exports = ControlImageDimensionsItemView;\n",
    "var ControlMultipleBaseItemView = require( 'elementor-views/controls/base-multiple' ),\n\tControlMediaItemView;\n\nControlMediaItemView = ControlMultipleBaseItemView.extend( {\n\tui: function() {\n\t\tvar ui = ControlMultipleBaseItemView.prototype.ui.apply( this, arguments );\n\n\t\tui.controlMedia = '.elementor-control-media';\n\t\tui.frameOpeners = '.elementor-control-media-upload-button, .elementor-control-media-image';\n\t\tui.deleteButton = '.elementor-control-media-delete';\n\t\tui.fileField = '.elementor-control-media-field';\n\n\t\treturn ui;\n\t},\n\n\tchildEvents: {\n\t\t'click @ui.frameOpeners': 'openFrame',\n\t\t'click @ui.deleteButton': 'deleteImage',\n\t\t'input @ui.fileField': 'select'\n\t},\n\n\tonReady: function() {\n\t\tif ( _.isEmpty( this.getControlValue( 'url' ) ) ) {\n\t\t\tthis.ui.controlMedia.addClass( 'media-empty' );\n\t\t}\n\t},\n\n\topenFrame: function() {\n\t\topenPsFileManager('elementor-control-media-field-' + this.model.cid);\n\t},\n\n\tdeleteImage: function() {\n\t\tthis.setValue( {\n\t\t\turl: '',\n\t\t\tid: ''\n\t\t} );\n\n\t\tthis.render();\n\t},\n\n\tselect: function() {\n\t\tvar attachment = this.ui.fileField.val();\n\n\t\tif ( attachment) {\n\t\t\tthis.setValue( {\n\t\t\t\turl: attachment,\n\t\t\t\tid: 1\n\t\t\t} );\n\n\t\t\tthis.render();\n\t\t\tthis.ui.fileField.val(attachment);\n\t\t}\n\t},\n\n\tonBeforeDestroy: function() {\n\t\tthis.$el.remove();\n\t}\n} );\n\nmodule.exports = ControlMediaItemView;\n",
    "var RepeaterRowView;\n\nRepeaterRowView = Marionette.CompositeView.extend( {\n\ttemplate: Marionette.TemplateCache.get( '#tmpl-elementor-repeater-row' ),\n\n\tclassName: 'repeater-fields',\n\n\tui: {\n\t\tduplicateButton: '.elementor-repeater-tool-duplicate',\n\t\teditButton: '.elementor-repeater-tool-edit',\n\t\tremoveButton: '.elementor-repeater-tool-remove',\n\t\titemTitle: '.elementor-repeater-row-item-title'\n\t},\n\n\ttriggers: {\n\t\t'click @ui.removeButton': 'click:remove',\n\t\t'click @ui.duplicateButton': 'click:duplicate',\n\t\t'click @ui.itemTitle': 'click:edit'\n\t},\n\n\ttemplateHelpers: function() {\n\t\treturn {\n\t\t\titemIndex: this.getOption( 'itemIndex' )\n\t\t};\n\t},\n\n\tchildViewContainer: '.elementor-repeater-row-controls',\n\n\tgetChildView: function( item ) {\n\t\tvar controlType = item.get( 'type' );\n\t\treturn elementor.getControlItemView( controlType );\n\t},\n\n\tchildViewOptions: function() {\n\t\treturn {\n\t\t\telementSettingsModel: this.model\n\t\t};\n\t},\n\n\tupdateIndex: function( newIndex ) {\n\t\tthis.itemIndex = newIndex;\n\t\tthis.setTitle();\n\t},\n\n\tsetTitle: function() {\n\t\tvar titleField = this.getOption( 'titleField' ),\n\t\t\ttitle;\n\n\t\tif ( titleField ) {\n\t\t\tvar changerControlModel = this.collection.find( { name: titleField } ),\n\t\t\t\tchangerControlView = this.children.findByModelCid( changerControlModel.cid );\n\n\t\t\ttitle = changerControlView.getFieldTitleValue();\n\t\t}\n\n\t\tif ( ! title ) {\n\t\t\ttitle = elementor.translate( 'Item #{0}', [ this.getOption( 'itemIndex' ) ] );\n\t\t}\n\n\t\tthis.ui.itemTitle.text( title );\n\t},\n\n\tinitialize: function( options ) {\n\t\tthis.elementSettingsModel = options.elementSettingsModel;\n\n\t\tthis.itemIndex = 0;\n\n\t\t// Collection for Controls list\n\t\tthis.collection = new Backbone.Collection( options.controlFields );\n\n\t\tif ( options.titleField ) {\n\t\t\tthis.listenTo( this.model, 'change:' + options.titleField, this.setTitle );\n\t\t}\n\t},\n\n\tonRender: function() {\n\t\tthis.setTitle();\n\t}\n} );\n\nmodule.exports = RepeaterRowView;\n",
    "var ControlBaseItemView = require( 'elementor-views/controls/base' ),\n\tRepeaterRowView = require( 'elementor-views/controls/repeater-row' ),\n\tControlRepeaterItemView;\n\nControlRepeaterItemView = ControlBaseItemView.extend( {\n\tui: {\n\t\tbtnAddRow: '.elementor-repeater-add',\n\t\tfieldContainer: '.elementor-repeater-fields'\n\t},\n\n\tevents: {\n\t\t'click @ui.btnAddRow': 'onButtonAddRowClick',\n\t\t'sortstart @ui.fieldContainer': 'onSortStart',\n\t\t'sortupdate @ui.fieldContainer': 'onSortUpdate'\n\t},\n\n\tchildView: RepeaterRowView,\n\n\tchildViewContainer: '.elementor-repeater-fields',\n\n\ttemplateHelpers: function() {\n\t\treturn {\n\t\t\tdata: _.extend( {}, this.model.toJSON(), { controlValue: [] } )\n\t\t};\n\t},\n\n\tchildViewOptions: function() {\n\t\treturn {\n\t\t\tcontrolFields: this.model.get( 'fields' ),\n\t\t\ttitleField: this.model.get( 'title_field' )\n\t\t};\n\t},\n\n\tinitialize: function( options ) {\n\t\tControlBaseItemView.prototype.initialize.apply( this, arguments );\n\n\t\tthis.collection = this.elementSettingsModel.get( this.model.get( 'name' ) );\n\n\t\tthis.listenTo( this.collection, 'change add remove reset', this.onCollectionChanged, this );\n\t},\n\n\teditRow: function( rowView ) {\n\t\tif ( this.currentEditableChild ) {\n\t\t\tthis.currentEditableChild.getChildViewContainer( this.currentEditableChild ).removeClass( 'editable' );\n\t\t}\n\n\t\tif ( this.currentEditableChild === rowView ) {\n\t\t\tdelete this.currentEditableChild;\n\t\t\treturn;\n\t\t}\n\n\t\trowView.getChildViewContainer( rowView ).addClass( 'editable' );\n\n\t\tthis.currentEditableChild = rowView;\n\n\t\tthis.updateActiveRow();\n\t},\n\n\ttoggleMinRowsClass: function() {\n\t\tif ( ! this.model.get( 'prevent_empty' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.$el.toggleClass( 'elementor-repeater-has-minimum-rows', 1 >= this.collection.length );\n\t},\n\n\tupdateActiveRow: function() {\n\t\tvar activeItemIndex = 0;\n\n\t\tif ( this.currentEditableChild ) {\n\t\t\tactiveItemIndex = this.currentEditableChild.itemIndex;\n\t\t}\n\n\t\tthis.setEditSetting( 'activeItemIndex', activeItemIndex );\n\t},\n\n\tupdateChildIndexes: function() {\n\t\tthis.children.each( _.bind( function( view ) {\n\t\t\tview.updateIndex( this.collection.indexOf( view.model ) + 1 );\n\t\t}, this ) );\n\t},\n\n\tonRender: function() {\n\t\tthis.ui.fieldContainer.sortable( { axis: 'y' } );\n\n\t\tthis.toggleMinRowsClass();\n\t},\n\n\tonSortStart: function( event, ui ) {\n\t\tui.item.data( 'oldIndex', ui.item.index() );\n\t},\n\n\tonSortUpdate: function( event, ui ) {\n\t\tvar oldIndex = ui.item.data( 'oldIndex' ),\n\t\t\tmodel = this.collection.at( oldIndex ),\n\t\t\tnewIndex = ui.item.index();\n\n\t\tthis.collection.remove( model );\n\t\tthis.collection.add( model, { at: newIndex } );\n\t},\n\n\tonAddChild: function() {\n\t\tthis.updateChildIndexes();\n\t\tthis.updateActiveRow();\n\t},\n\n\tonRemoveChild: function( childView ) {\n\t\tif ( childView === this.currentEditableChild ) {\n\t\t\tdelete this.currentEditableChild;\n\t\t}\n\n\t\tthis.updateChildIndexes();\n\t\tthis.updateActiveRow();\n\t},\n\n\tonCollectionChanged: function() {\n\t\tthis.elementSettingsModel.trigger( 'change' );\n\n\t\tthis.toggleMinRowsClass();\n\t},\n\n\tonButtonAddRowClick: function() {\n\t\tvar defaults = {};\n\t\t_.each( this.model.get( 'fields' ), function( field ) {\n\t\t\tdefaults[ field.name ] = field['default'];\n\t\t} );\n\n\t\tvar newModel = this.collection.add( defaults ),\n\t\t\tnewChildView = this.children.findByModel( newModel );\n\n\t\tthis.editRow( newChildView );\n\t},\n\n\tonChildviewClickRemove: function( childView ) {\n\t\tchildView.model.destroy();\n\t},\n\n\tonChildviewClickDuplicate: function( childView ) {\n\t\tthis.collection.add( childView.model.clone(), { at: childView.itemIndex } );\n\t},\n\n\tonChildviewClickEdit: function( childView ) {\n\t\tthis.editRow( childView );\n\t}\n} );\n\nmodule.exports = ControlRepeaterItemView;\n",
    "var ControlBaseItemView = require( 'elementor-views/controls/base' ),\n\tControlSectionItemView;\n\nControlSectionItemView = ControlBaseItemView.extend( {\n\tui: function() {\n\t\tvar ui = ControlBaseItemView.prototype.ui.apply( this, arguments );\n\n\t\tui.heading = '.elementor-panel-heading';\n\n\t\treturn ui;\n\t},\n\n\ttriggers: {\n\t\t'click': 'control:section:clicked'\n\t}\n} );\n\nmodule.exports = ControlSectionItemView;\n",
    "// Attention: DO NOT use this control since it has bugs\n// TODO: This control is unused\nvar ControlBaseItemView = require( 'elementor-views/controls/base' ),\n\tControlSelect2ItemView;\n\nControlSelect2ItemView = ControlBaseItemView.extend( {\n\tui: function() {\n\t\tvar ui = ControlBaseItemView.prototype.ui.apply( this, arguments );\n\n\t\tui.select = '.elementor-select2';\n\n\t\treturn ui;\n\t},\n\n\tonReady: function() {\n\t\tvar options = {\n\t\t\tallowClear: true\n\t\t};\n\n\t\tthis.ui.select.select2( options );\n\t},\n\n\tonBeforeDestroy: function() {\n\t\tif ( this.ui.select.data( 'select2' ) ) {\n\t\t\tthis.ui.select.select2( 'destroy' );\n\t\t}\n\t\tthis.$el.remove();\n\t}\n} );\n\nmodule.exports = ControlSelect2ItemView;\n",
    "var ControlBaseUnitsItemView = require( 'elementor-views/controls/base-units' ),\n\tControlSliderItemView;\n\nControlSliderItemView = ControlBaseUnitsItemView.extend( {\n\tui: function() {\n\t\tvar ui = ControlBaseUnitsItemView.prototype.ui.apply( this, arguments );\n\n\t\tui.slider = '.elementor-slider';\n\n\t\treturn ui;\n\t},\n\n\tchildEvents: {\n\t\t'slide @ui.slider': 'onSlideChange'\n\t},\n\n\tinitSlider: function() {\n\t\tvar size = this.getControlValue( 'size' ),\n\t\t\tunitRange = this.getCurrentRange();\n\n\t\tthis.ui.input.attr( unitRange ).val( size );\n\n\t\tthis.ui.slider.slider( _.extend( {}, unitRange, { value: size } ) );\n\t},\n\n\tresetSize: function() {\n\t\tthis.setValue( 'size', '' );\n\n\t\tthis.initSlider();\n\t},\n\n\tonReady: function() {\n\t\tthis.initSlider();\n\t},\n\n\tonSlideChange: function( event, ui ) {\n\t\tthis.setValue( 'size', ui.value );\n\n\t\tthis.ui.input.val( ui.value );\n\t},\n\n\tonInputChange: function( event ) {\n\t\tvar dataChanged = event.currentTarget.dataset.setting;\n\n\t\tif ( 'size' === dataChanged ) {\n\t\t\tthis.ui.slider.slider( 'value', this.getControlValue( 'size' ) );\n\t\t} else if ( 'unit' === dataChanged ) {\n\t\t\tthis.resetSize();\n\t\t}\n\t},\n\n\tonBeforeDestroy: function() {\n\t\tthis.ui.slider.slider( 'destroy' );\n\t\tthis.$el.remove();\n\t}\n} );\n\nmodule.exports = ControlSliderItemView;\n",
    "var ControlBaseItemView = require( 'elementor-views/controls/base' ),\n\tControlStructureItemView;\n\nControlStructureItemView = ControlBaseItemView.extend( {\n\tui: function() {\n\t\tvar ui = ControlBaseItemView.prototype.ui.apply( this, arguments );\n\n\t\tui.resetStructure = '.elementor-control-structure-reset';\n\n\t\treturn ui;\n\t},\n\n\tchildEvents: {\n\t\t'click @ui.resetStructure': 'onResetStructureClick'\n\t},\n\n\ttemplateHelpers: function() {\n\t\tvar helpers = ControlBaseItemView.prototype.templateHelpers.apply( this, arguments );\n\n\t\thelpers.getMorePresets = _.bind( this.getMorePresets, this );\n\n\t\treturn helpers;\n\t},\n\n\tgetCurrentEditedSection: function() {\n\t\tvar editor = elementor.getPanelView().getCurrentPageView();\n\n\t\treturn editor.getOption( 'editedElementView' );\n\t},\n\n\tgetMorePresets: function() {\n\t\tvar parsedStructure = elementor.presetsFactory.getParsedStructure( this.getControlValue() );\n\n\t\treturn elementor.presetsFactory.getPresets( parsedStructure.columnsCount );\n\t},\n\n\tonInputChange: function() {\n\t\tthis.getCurrentEditedSection().redefineLayout();\n\n\t\tthis.render();\n\t},\n\n\tonResetStructureClick: function() {\n\t\tthis.getCurrentEditedSection().resetColumnsCustomSize();\n\t}\n} );\n\nmodule.exports = ControlStructureItemView;\n",
    "var ControlMultipleBaseItemView = require( 'elementor-views/controls/base-multiple' ),\n\tControlUrlItemView;\n\nControlUrlItemView = ControlMultipleBaseItemView.extend( {\n\tui: function() {\n\t\tvar ui = ControlMultipleBaseItemView.prototype.ui.apply( this, arguments );\n\n\t\tui.btnExternal = 'button.elementor-control-url-target';\n\n\t\treturn ui;\n\t},\n\n\t// Override the base events\n\tchildEvents: {\n\t\t'click @ui.btnExternal': 'onExternalClicked'\n\t},\n\n\tonReady: function() {\n\t\tif ( this.getControlValue( 'is_external' ) ) {\n\t\t\tthis.ui.btnExternal.addClass( 'active' );\n\t\t}\n\t},\n\n\tonExternalClicked: function( event ) {\n\t\tevent.preventDefault();\n\n\t\tthis.ui.btnExternal.toggleClass( 'active' );\n\t\tthis.setValue( 'is_external', this.isExternal() );\n\t},\n\n\tisExternal: function() {\n\t\treturn this.ui.btnExternal.hasClass( 'active' );\n\t}\n} );\n\nmodule.exports = ControlUrlItemView;\n",
    "var ControlBaseItemView = require( 'elementor-views/controls/base' ),\n\tControlWPWidgetItemView;\n\nControlWPWidgetItemView = ControlBaseItemView.extend( {\n\tui: function() {\n\t\tvar ui = ControlBaseItemView.prototype.ui.apply( this, arguments );\n\n\t\tui.form = 'form';\n\t\tui.loading = '.wp-widget-form-loading';\n\n\t\treturn ui;\n\t},\n\n\tevents: {\n\t\t'keyup @ui.form :input': 'onFormChanged',\n\t\t'change @ui.form :input': 'onFormChanged'\n\t},\n\n\tonFormChanged: function() {\n\t\tvar idBase = 'widget-' + this.model.get( 'id_base' ),\n\t\t\tsettings = this.ui.form.elementorSerializeObject()[ idBase ].REPLACE_TO_ID;\n\n\t\tthis.setValue( settings );\n\t},\n\n\tonReady: function() {\n\t\t/*\n\t\telementor.ajax.send( 'editor_get_wp_widget_form', {\n\t\t\tdata: {\n\t\t\t\twidget_type: this.model.get( 'widget' ),\n\t\t\t\tdata: JSON.stringify( this.elementSettingsModel.toJSON() )\n\t\t\t},\n\t\t\tsuccess: _.bind( function( data ) {\n\t\t\t\tthis.ui.form.html( data );\n\t\t\t}, this )\n\t\t} );\n\t\t*/\n\t}\n} );\n\nmodule.exports = ControlWPWidgetItemView;\n",
    "var ControlBaseItemView = require( 'elementor-views/controls/base' ),\n\tControlWysiwygItemView;\n\nControlWysiwygItemView = ControlBaseItemView.extend( {\n\n\tchildEvents: {\n\t\t'keyup textarea.elementor-wp-editor': 'updateElementModel'\n\t},\n\n\tinitialize: function() {\n\t\tControlBaseItemView.prototype.initialize.apply( this, arguments );\n\t\tthis.editorID = 'elementorwpeditor' + this.cid;\n\n\t},\n\t\n\tattachElContent: function() {\n\t\tvar editorTemplate = elementor.config.wp_editor.replace( /elementorwpeditor/g, this.editorID ).replace( '%%EDITORCONTENT%%', this.getControlValue() );\n\n\t\tthis.$el.html( editorTemplate );\n\n\t\treturn this;\n\t},\n\n\tonShow: function() {\n\n\t\ttinymce.EditorManager.execCommand('mceAddEditor', false, this.editorID);\n\t},\n\n\tonBeforeDestroy: function() {\n\t\ttinymce.EditorManager.execCommand( 'mceRemoveEditor', true, this.editorID);\n\t}\n} );\n\nmodule.exports = ControlWysiwygItemView;\n",
    "var ElementEmptyView;\n\nElementEmptyView = Marionette.ItemView.extend( {\n\ttemplate: '#tmpl-elementor-empty-preview',\n\n\tclassName: 'elementor-empty-view',\n\n\tevents: {\n\t\t'click': 'onClickAdd'\n\t},\n\n\tonClickAdd: function() {\n\t\telementor.getPanelView().setPage( 'elements' );\n\t}\n} );\n\nmodule.exports = ElementEmptyView;\n",
    "var BaseElementView = require( 'elementor-views/base-element' ),\n\tColumnView = require( 'elementor-views/column' ),\n\tSectionView;\n\nSectionView = BaseElementView.extend( {\n\ttemplate: Marionette.TemplateCache.get( '#tmpl-elementor-element-section-content' ),\n\n\tchildView: ColumnView,\n\n\tclassName: function() {\n\t\tvar classes = 'elementor-section',\n\t\t\ttype = this.isInner() ? 'inner' : 'top';\n\n\t\tclasses += ' elementor-' + type + '-section';\n\n\t\treturn classes;\n\t},\n\n\ttagName: 'section',\n\n\tchildViewContainer: '> .elementor-container > .elementor-row',\n\n\ttriggers: {\n\t\t'click .elementor-editor-section-settings-list .elementor-editor-element-edit': 'click:edit',\n\t\t'click .elementor-editor-section-settings-list .elementor-editor-element-trigger': 'click:edit',\n\t\t'click .elementor-editor-section-settings-list .elementor-editor-element-duplicate': 'click:duplicate'\n\t},\n\n\telementEvents: {\n\t\t'click .elementor-editor-section-settings-list .elementor-editor-element-remove': 'onClickRemove',\n\t\t'click .elementor-editor-section-settings-list .elementor-editor-element-save': 'onClickSave'\n\t},\n\n\tbehaviors: {\n\t\tSortable: {\n\t\t\tbehaviorClass: require( 'elementor-behaviors/sortable' ),\n\t\t\telChildType: 'column'\n\t\t},\n\t\tHandleDuplicate: {\n\t\t\tbehaviorClass: require( 'elementor-behaviors/handle-duplicate' )\n\t\t},\n\t\tHandleEditor: {\n\t\t\tbehaviorClass: require( 'elementor-behaviors/handle-editor' )\n\t\t},\n\t\tHandleEditMode: {\n\t\t\tbehaviorClass: require( 'elementor-behaviors/handle-edit-mode' )\n\t\t},\n\t\tHandleAddMode: {\n\t\t\tbehaviorClass: require( 'elementor-behaviors/duplicate' )\n\t\t},\n\t\tHandleElementsRelation: {\n\t\t\tbehaviorClass: require( 'elementor-behaviors/elements-relation' )\n\t\t}\n\t},\n\n\tinitialize: function() {\n\t\tBaseElementView.prototype.initialize.apply( this, arguments );\n\n\t\tthis.listenTo( this.collection, 'add remove reset', this._checkIsFull );\n\t\tthis.listenTo( this.collection, 'remove', this.onCollectionRemove );\n\t\tthis.listenTo( this.model, 'change:settings:structure', this.onStructureChanged );\n\t},\n\n\taddEmptyColumn: function() {\n\t\tthis.addChildModel( {\n\t\t\tid: elementor.helpers.getUniqueID(),\n\t\t\telType: 'column',\n\t\t\tsettings: {},\n\t\t\telements: []\n\t\t} );\n\t},\n\n\taddChildModel: function( model, options ) {\n\t\tvar isModelInstance = model instanceof Backbone.Model,\n\t\t\tisInner = this.isInner();\n\n\t\tif ( isModelInstance ) {\n\t\t\tmodel.set( 'isInner', isInner );\n\t\t} else {\n\t\t\tmodel.isInner = isInner;\n\t\t}\n\n\t\treturn BaseElementView.prototype.addChildModel.apply( this, arguments );\n\t},\n\n\tgetSortableOptions: function() {\n\t\tvar sectionConnectClass = this.isInner() ? '.elementor-inner-section' : '.elementor-top-section';\n\n\t\treturn {\n\t\t\tconnectWith: sectionConnectClass + ' > .elementor-container > .elementor-row',\n\t\t\thandle: '> .elementor-element-overlay .elementor-editor-column-settings-list .elementor-editor-element-trigger',\n\t\t\titems: '> .elementor-column'\n\t\t};\n\t},\n\n\tgetColumnPercentSize: function( element, size ) {\n\t\treturn size / element.parent().width() * 100;\n\t},\n\n\tgetDefaultStructure: function() {\n\t\treturn this.collection.length + '0';\n\t},\n\n\tgetStructure: function() {\n\t\treturn this.model.getSetting( 'structure' );\n\t},\n\n\tsetStructure: function( structure ) {\n\t\tvar parsedStructure = elementor.presetsFactory.getParsedStructure( structure );\n\n\t\tif ( +parsedStructure.columnsCount !== this.collection.length ) {\n\t\t\tthrow new TypeError( 'The provided structure doesn\\'t match the columns count.' );\n\t\t}\n\n\t\tthis.model.setSetting( 'structure', structure, true );\n\t},\n\n\tredefineLayout: function() {\n\t\tvar preset = elementor.presetsFactory.getPresetByStructure( this.getStructure() );\n\n\t\tthis.collection.each( function( model, index ) {\n\t\t\tmodel.setSetting( '_column_size', preset.preset[ index ] );\n\t\t\tmodel.setSetting( '_inline_size', null );\n\t\t} );\n\n\t\tthis.children.invoke( 'changeSizeUI' );\n\t},\n\n\tresetLayout: function() {\n\t\tthis.setStructure( this.getDefaultStructure() );\n\t},\n\n\tresetColumnsCustomSize: function() {\n\t\tthis.collection.each( function( model ) {\n\t\t\tmodel.setSetting( '_inline_size', null );\n\t\t} );\n\n\t\tthis.children.invoke( 'changeSizeUI' );\n\t},\n\n\tisCollectionFilled: function() {\n\t\tvar MAX_SIZE = 10,\n\t\t\tcolumnsCount = this.collection.length;\n\n\t\treturn ( MAX_SIZE <= columnsCount );\n\t},\n\n\t_checkIsFull: function() {\n\t\tthis.$el.toggleClass( 'elementor-section-filled', this.isCollectionFilled() );\n\t},\n\n\t_checkIsEmpty: function() {\n\t\tif ( ! this.collection.length ) {\n\t\t\tthis.addEmptyColumn();\n\t\t}\n\t},\n\n\tgetNextColumn: function( columnView ) {\n\t\tvar modelIndex = this.collection.indexOf( columnView.model ),\n\t\t\tnextModel = this.collection.at( modelIndex + 1 );\n\n\t\treturn this.children.findByModelCid( nextModel.cid );\n\t},\n\n\tonBeforeRender: function() {\n\t\tthis._checkIsEmpty();\n\t},\n\n\tonRender: function() {\n\t\tthis._checkIsFull();\n\t},\n\n\tonAddChild: function() {\n\t\tif ( ! this.isBuffering ) {\n\t\t\t// Reset the layout just when we have really add/remove element.\n\t\t\tthis.resetLayout();\n\t\t}\n\t},\n\n\tonCollectionRemove: function() {\n\t\t// If it's the last column, please create new one.\n\t\tthis._checkIsEmpty();\n\n\t\tthis.resetLayout();\n\t},\n\n\tonChildviewRequestResizeStart: function( childView ) {\n\t\tvar nextChildView = this.getNextColumn( childView );\n\n\t\tif ( ! nextChildView ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar $iframes = childView.$el.find( 'iframe' ).add( nextChildView.$el.find( 'iframe' ) );\n\n\t\telementor.helpers.disableElementEvents( $iframes );\n\t},\n\n\tonChildviewRequestResizeStop: function( childView ) {\n\t\tvar nextChildView = this.getNextColumn( childView );\n\n\t\tif ( ! nextChildView ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar $iframes = childView.$el.find( 'iframe' ).add( nextChildView.$el.find( 'iframe' ) );\n\n\t\telementor.helpers.enableElementEvents( $iframes );\n\t},\n\n\tonChildviewRequestResize: function( childView, ui ) {\n\t\t// Get current column details\n\t\tvar currentSize = childView.model.getSetting( '_inline_size' );\n\n\t\tif ( ! currentSize ) {\n\t\t\tcurrentSize = this.getColumnPercentSize( ui.element, ui.originalSize.width );\n\t\t}\n\n\t\tvar newSize = this.getColumnPercentSize( ui.element, ui.size.width ),\n\t\t\tdifference = newSize - currentSize;\n\n\t\tui.element.css( {\n\t\t\t//width: currentSize + '%',\n\t\t\twidth: '',\n\t\t\tleft: 'initial' // Fix for RTL resizing\n\t\t} );\n\n\t\t// Get next column details\n\t\tvar nextChildView = this.getNextColumn( childView );\n\n\t\tif ( ! nextChildView ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar MINIMUM_COLUMN_SIZE = 10,\n\n\t\t\t$nextElement = nextChildView.$el,\n\t\t\tnextElementCurrentSize = this.getColumnPercentSize( $nextElement, $nextElement.width() ),\n\t\t\tnextElementNewSize = nextElementCurrentSize - difference;\n\n\t\tif ( newSize < MINIMUM_COLUMN_SIZE || newSize > 100 || ! difference || nextElementNewSize < MINIMUM_COLUMN_SIZE || nextElementNewSize > 100 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Set the current column size\n\t\tchildView.model.setSetting( '_inline_size', newSize.toFixed( 3 ) );\n\t\tchildView.changeSizeUI();\n\n\t\t// Set the next column size\n\t\tnextChildView.model.setSetting( '_inline_size', nextElementNewSize.toFixed( 3 ) );\n\t\tnextChildView.changeSizeUI();\n\t},\n\n\tonStructureChanged: function() {\n\t\tthis.redefineLayout();\n\t},\n\n\tonClickSave: function( event ) {\n\t\tevent.preventDefault();\n\n\t\tvar sectionID = this.model.get( 'id' );\n\n\t\telementor.templates.startModal( function() {\n\t\t\telementor.templates.getLayout().showSaveTemplateView( sectionID );\n\t\t} );\n\t}\n} );\n\nmodule.exports = SectionView;\n",
    "var SectionView = require( 'elementor-views/section' ),\n\tSectionsCollectionView;\n\nSectionsCollectionView = Marionette.CompositeView.extend( {\n\ttemplate: Marionette.TemplateCache.get( '#tmpl-elementor-preview' ),\n\n\tid: 'elementor-inner',\n\n\tchildViewContainer: '#elementor-section-wrap',\n\n\tchildView: SectionView,\n\n\tui: {\n\t\taddSectionArea: '#elementor-add-section',\n\t\taddNewSection: '#elementor-add-new-section',\n\t\tclosePresetsIcon: '#elementor-select-preset-close',\n\t\taddSectionButton: '#elementor-add-section-button',\n\t\taddTemplateButton: '#elementor-add-template-button',\n\t\tselectPreset: '#elementor-select-preset',\n\t\tpresets: '.elementor-preset'\n\t},\n\n\tevents: {\n\t\t'click @ui.addSectionButton': 'onAddSectionButtonClick',\n\t\t'click @ui.addTemplateButton': 'onAddTemplateButtonClick',\n\t\t'click @ui.closePresetsIcon': 'closeSelectPresets',\n\t\t'click @ui.presets': 'onPresetSelected'\n\t},\n\n\tbehaviors: {\n\t\tSortable: {\n\t\t\tbehaviorClass: require( 'elementor-behaviors/sortable' ),\n\t\t\telChildType: 'section'\n\t\t},\n\t\tHandleDuplicate: {\n\t\t\tbehaviorClass: require( 'elementor-behaviors/handle-duplicate' )\n\t\t},\n\t\tHandleAdd: {\n\t\t\tbehaviorClass: require( 'elementor-behaviors/duplicate' )\n\t\t},\n\t\tHandleElementsRelation: {\n\t\t\tbehaviorClass: require( 'elementor-behaviors/elements-relation' )\n\t\t}\n\t},\n\n\tgetSortableOptions: function() {\n\t\treturn {\n\t\t\thandle: '> .elementor-container > .elementor-row > .elementor-column > .elementor-element-overlay .elementor-editor-section-settings-list .elementor-editor-element-trigger',\n\t\t\titems: '> .elementor-section'\n\t\t};\n\t},\n\n\tgetChildType: function() {\n\t\treturn [ 'section' ];\n\t},\n\n\tisCollectionFilled: function() {\n\t\treturn false;\n\t},\n\n\tinitialize: function() {\n\t\tthis\n\t\t\t.listenTo( this.collection, 'add remove reset', this.onCollectionChanged )\n\t\t\t.listenTo( elementor.channels.panelElements, 'element:drag:start', this.onPanelElementDragStart )\n\t\t\t.listenTo( elementor.channels.panelElements, 'element:drag:end', this.onPanelElementDragEnd );\n\t},\n\n\taddChildModel: function( model, options ) {\n\t\treturn this.collection.add( model, options, true );\n\t},\n\n\taddSection: function( properties ) {\n\t\tvar newSection = {\n\t\t\tid: elementor.helpers.getUniqueID(),\n\t\t\telType: 'section',\n\t\t\tsettings: {},\n\t\t\telements: []\n\t\t};\n\n\t\tif ( properties ) {\n\t\t\t_.extend( newSection, properties );\n\t\t}\n\n\t\tvar newModel = this.addChildModel( newSection );\n\n\t\treturn this.children.findByModelCid( newModel.cid );\n\t},\n\n\tcloseSelectPresets: function() {\n\t\tthis.ui.addNewSection.show();\n\t\tthis.ui.selectPreset.hide();\n\t},\n\n\tfixBlankPageOffset: function() {\n\t\tvar sectionHandleHeight = 27,\n\t\t\telTopOffset = this.$el.offset().top,\n\t\t\telTopOffsetRange = sectionHandleHeight - elTopOffset;\n\n\t\tif ( 0 < elTopOffsetRange ) {\n\t\t\tvar $style = Backbone.$( '<style>' ).text( '.elementor-editor-active #elementor-inner{margin-top: ' + elTopOffsetRange + 'px}' );\n\n\t\t\telementor.$previewContents.children().children( 'head' ).append( $style );\n\t\t}\n\t},\n\n\tonAddSectionButtonClick: function() {\n\t\tthis.ui.addNewSection.hide();\n\t\tthis.ui.selectPreset.show();\n\t},\n\n\tonAddTemplateButtonClick: function() {\n\t\telementor.templates.startModal( function() {\n\t\t\telementor.templates.showTemplates();\n\t\t} );\n\t},\n\n\tonRender: function() {\n\t\tvar self = this;\n\n\t\tself.ui.addSectionArea.html5Droppable( {\n\t\t\taxis: [ 'vertical' ],\n\t\t\tgroups: [ 'elementor-element' ],\n\t\t\tonDragEnter: function( side ) {\n\t\t\t\tself.ui.addSectionArea.attr( 'data-side', side );\n\t\t\t},\n\t\t\tonDragLeave: function() {\n\t\t\t\tself.ui.addSectionArea.removeAttr( 'data-side' );\n\t\t\t},\n\t\t\tonDropping: function() {\n\t\t\t\tvar elementView = elementor.channels.panelElements.request( 'element:selected' ),\n\t\t\t\t\tnewSection = self.addSection(),\n\t\t\t\t\telType = elementView.model.get( 'elType' );\n\n\t\t\t\tvar elementData = {\n\t\t\t\t\tid: elementor.helpers.getUniqueID(),\n\t\t\t\t\telType: elType\n\t\t\t\t};\n\n\t\t\t\tif ( 'widget' === elType ) {\n\t\t\t\t\telementData.widgetType = elementView.model.get( 'widgetType' );\n\t\t\t\t} else {\n\t\t\t\t\telementData.elements = [];\n\t\t\t\t\telementData.isInner = true;\n\t\t\t\t}\n\n\t\t\t\tnewSection.triggerMethod( 'request:add', elementData );\n\t\t\t}\n\t\t} );\n\n\t\t_.defer( _.bind( self.fixBlankPageOffset, this ) );\n\t},\n\n\tonCollectionChanged: function() {\n\t\telementor.setFlagEditorChange( true );\n\t},\n\n\tonPresetSelected: function( event ) {\n\t\tthis.closeSelectPresets();\n\n\t\tvar selectedStructure = event.currentTarget.dataset.structure,\n\t\t\tparsedStructure = elementor.presetsFactory.getParsedStructure( selectedStructure ),\n\t\t\telements = [],\n\t\t\tloopIndex;\n\n\t\tfor ( loopIndex = 0; loopIndex < parsedStructure.columnsCount; loopIndex++ ) {\n\t\t\telements.push( {\n\t\t\t\tid: elementor.helpers.getUniqueID(),\n\t\t\t\telType: 'column',\n\t\t\t\tsettings: {},\n\t\t\t\telements: []\n\t\t\t} );\n\t\t}\n\n\t\tvar newSection = this.addSection( { elements: elements } );\n\n\t\tnewSection.setStructure( selectedStructure );\n\t\tnewSection.redefineLayout();\n\t},\n\n\tonPanelElementDragStart: function() {\n\t\telementor.helpers.disableElementEvents( this.$el.find( 'iframe' ) );\n\t},\n\n\tonPanelElementDragEnd: function() {\n\t\telementor.helpers.enableElementEvents( this.$el.find( 'iframe' ) );\n\t}\n} );\n\nmodule.exports = SectionsCollectionView;\n",
    "var BaseElementView = require( 'elementor-views/base-element' ),\n\tWidgetView;\n\nWidgetView = BaseElementView.extend( {\n\t_templateType: null,\n\n\tgetTemplate: function() {\n\t\tif ( 'remote' !== this.getTemplateType() ) {\n\t\t\treturn Marionette.TemplateCache.get( '#tmpl-elementor-' + this.model.get( 'elType' ) + '-' + this.model.get( 'widgetType' ) + '-content' );\n\t\t} else {\n\t\t\treturn _.template( '' );\n\t\t}\n\t},\n\n\tclassName: function() {\n\t\treturn 'elementor-widget elementor-widget-' + this.model.get( 'widgetType' );\n\t},\n\n\tmodelEvents: {\n\t\t'before:remote:render': 'onModelBeforeRemoteRender',\n\t\t'remote:render': 'onModelRemoteRender'\n\t},\n\n\ttriggers: {\n\t\t'click': {\n\t\t\tevent: 'click:edit',\n\t\t\tstopPropagation: false\n\t\t},\n\t\t'click > .elementor-editor-element-settings .elementor-editor-add-element': 'click:add',\n\t\t'click > .elementor-editor-element-settings .elementor-editor-element-duplicate': 'click:duplicate'\n\t},\n\n\telementEvents: {\n\t\t'click > .elementor-editor-element-settings .elementor-editor-element-remove': 'onClickRemove'\n\t},\n\n\tbehaviors: {\n\t\tHandleEditor: {\n\t\t\tbehaviorClass: require( 'elementor-behaviors/handle-editor' )\n\t\t},\n\t\tHandleEditMode: {\n\t\t\tbehaviorClass: require( 'elementor-behaviors/handle-edit-mode' )\n\t\t}\n\t},\n\n\tinitialize: function() {\n\t\tBaseElementView.prototype.initialize.apply( this, arguments );\n\n\t\tif ( ! this.model.getHtmlCache() ) {\n\t\t\tthis.model.renderRemoteServer();\n\t\t}\n\t},\n\n\tgetTemplateType: function() {\n\t\tif ( null === this._templateType ) {\n\t\t\tvar $template = Backbone.$( '#tmpl-elementor-' + this.model.get( 'elType' ) + '-' + this.model.get( 'widgetType' ) + '-content' );\n\n\t\t\tif ( 0 === $template.length ) {\n\t\t\t\tthis._templateType = 'remote';\n\t\t\t} else {\n\t\t\t\tthis._templateType = 'js';\n\t\t\t}\n\t\t}\n\n\t\treturn this._templateType;\n\t},\n\n\tonModelBeforeRemoteRender: function() {\n\t\tthis.$el.addClass( 'elementor-loading' );\n\t},\n\n\tonBeforeDestroy: function() {\n\t\t// Remove old style from the DOM.\n\t\telementor.$previewContents.find( '#elementor-style-' + this.model.cid ).remove();\n\t},\n\n\tonModelRemoteRender: function() {\n\t\tif ( this.isDestroyed ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.$el.removeClass( 'elementor-loading' );\n\t\tthis.render();\n\t},\n\n\tattachElContent: function( html ) {\n\t\tvar htmlCache = this.model.getHtmlCache();\n\n\t\tif ( htmlCache ) {\n\t\t\thtml = htmlCache;\n\t\t}\n\n\t\t//this.$el.html( html );\n\t\t_.defer( _.bind( function() {\n\t\t\telementorFrontend.getScopeWindow().jQuery( '#' + this.getElementUniqueClass() ).html( html );\n\t\t}, this ) );\n\n\t\treturn this;\n\t},\n\n\tonRender: function() {\n\t\tvar self = this;\n\n\t\tself.$el\n\t\t\t.removeClass( 'elementor-widget-empty' )\n\t\t\t.children( '.elementor-widget-empty-icon' )\n\t\t\t.remove();\n\n\t\tself.$el.imagesLoaded().always( function() {\n\n\t\t\tsetTimeout( function() {\n\t\t\t\tif ( 1 > self.$el.height() ) {\n\t\t\t\t\tself.$el.addClass( 'elementor-widget-empty' );\n\n\t\t\t\t\t// TODO: REMOVE THIS !!\n\t\t\t\t\t// TEMP CODING !!\n\t\t\t\t\tself.$el.append( '<i class=\"elementor-widget-empty-icon eicon-' + self.model.getIcon() + '\"></i>' );\n\t\t\t\t}\n\t\t\t}, 200 );\n\t\t\t// Is element empty?\n\t\t} );\n\t}\n} );\n\nmodule.exports = WidgetView;\n"
  ]
}